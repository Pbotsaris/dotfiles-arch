!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
handleEnd	.undo/%Users%pedro%dev%bp%learn-to-bp%node_modules%svelte-slider%dist%index.js	/^    				];/;"	f
s:suite	plugged/nerdtree-git-plugin/tests/test_all.vim	/^let s:suite = themis#suite('Test for nerdtree-git-plugin')$/;"	v
s:assert	plugged/nerdtree-git-plugin/tests/test_all.vim	/^let s:assert = themis#helper('assert')$/;"	v
suite.Initializing	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.Initializing() abort$/;"	f
suite.BuildGitWorkdirCommand	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.BuildGitWorkdirCommand() abort$/;"	f
suite.BuildGitStatusCommand	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.BuildGitStatusCommand() abort$/;"	f
suite.Logger	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.Logger() abort$/;"	f
suite.CustomIndicator	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.CustomIndicator() abort$/;"	f
suite.UpdateParentDirsStatus	plugged/nerdtree-git-plugin/tests/test_all.vim	/^function! s:suite.UpdateParentDirsStatus() abort$/;"	f
g:loaded_nerdtree_git_status_autoload	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^let g:loaded_nerdtree_git_status_autoload = 1$/;"	v
gitstatus#isWin	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#isWin() abort$/;"	f
s:indicatorMap	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^    let s:indicatorMap = {$/;"	v
s:indicatorMap	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^    let s:indicatorMap = {$/;"	v
s:indicatorMap	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^    let s:indicatorMap = {$/;"	v
gitstatus#getIndicator	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#getIndicator(status) abort$/;"	f
gitstatus#shouldConceal	plugged/nerdtree-git-plugin/autoload/gitstatus.vim	/^function! gitstatus#shouldConceal() abort$/;"	f
g:loaded_nerdtree_git_status_listener	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^let g:loaded_nerdtree_git_status_listener = 1$/;"	v
s:Listener	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^let s:Listener = {$/;"	v
Listener.OnInit	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnInit(event) abort$/;"	f
Listener.OnRefresh	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnRefresh(event) abort$/;"	f
Listener.OnRefreshFlags	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.OnRefreshFlags(event) abort$/;"	f
Listener.callback	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.callback(event) abort$/;"	f
Listener.SetNext	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.SetNext(cache) abort$/;"	f
Listener.HasPath	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.HasPath(path_str) abort$/;"	f
Listener.changed	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.changed() abort$/;"	f
Listener.update	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.update() abort$/;"	f
Listener.TryUpdateNERDTreeUI	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.TryUpdateNERDTreeUI() abort$/;"	f
Listener.getOption	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! s:Listener.getOption(name, default) abort$/;"	f
gitstatus#listener#New	plugged/nerdtree-git-plugin/autoload/gitstatus/listener.vim	/^function! gitstatus#listener#New(opts) abort$/;"	f
s:types	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:types = {$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters = {}$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.NUMBER]  = { nbr -> string(nbr) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.STRING]  = { str -> printf("'%s'", str) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.FUNCREF] = { fn  -> string(fn) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.LIST]    = { lst -> s:prettifyList(lst, '  \\ ', 0, '  ') }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.DICT]    = { dct -> s:prettifyDict(dct, '  \\ ', 0, '  ') }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.FLOAT]   = { flt -> string(flt) }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.BOOL]    = { bol -> bol ? 'v:true' : 'v:false' }$/;"	v
s:type_formatters	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^let s:type_formatters[s:types.NULL]    = { nul -> string(nul) }$/;"	v
get_git_version	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:get_git_version() abort$/;"	f
get_git_status_output	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:get_git_status_output(workdir) abort$/;"	f
prettifyDict	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettifyDict(obj, prefix, level, indent) abort$/;"	f
prettifyList	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettifyList(obj, prefix, level, indent) abort$/;"	f
prettify	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:prettify(obj) abort$/;"	f
loaded_vim_devicons	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_devicons() abort$/;"	f
loaded_vim_nerdtree_syntax_highlight	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_nerdtree_syntax_highlight() abort$/;"	f
loaded_vim_nerdtree_tabs	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! s:loaded_vim_nerdtree_tabs() abort$/;"	f
gitstatus#doctor#Say	plugged/nerdtree-git-plugin/autoload/gitstatus/doctor.vim	/^function! gitstatus#doctor#Say() abort$/;"	f
g:loaded_nerdtree_git_status_job	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let g:loaded_nerdtree_git_status_job = 1$/;"	v
s:nvim	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait'))$/;"	v
s:vim8	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:Job	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^let s:Job = {$/;"	v
newJob	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:newJob(name, opts) abort$/;"	f
Job.onStdoutCB	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onStdoutCB(data) abort$/;"	f
Job.onStderrCB	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onStderrCB(data) abort$/;"	f
Job.onExitCB	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onExitCB() abort$/;"	f
Job.onFailed	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onFailed() abort$/;"	f
Job.onSuccess	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:Job.onSuccess() abort$/;"	f
Job.run	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^    function! s:Job.run(cmd) abort$/;"	f
Job.run	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^    function! s:Job.run(cmd) abort$/;"	f
Job.run	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^    function! s:Job.run(cmd) abort$/;"	f
isEOF	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! s:isEOF(data) abort$/;"	f
gitstatus#job#Spawn	plugged/nerdtree-git-plugin/autoload/gitstatus/job.vim	/^function! gitstatus#job#Spawn(name, cmd, opts) abort$/;"	f
g:loaded_nerdtree_git_status_log	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let g:loaded_nerdtree_git_status_log = 1$/;"	v
s:debug	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:debug   = 0 | :lockvar s:debug$/;"	v
s:info	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:info    = 1 | :lockvar s:info$/;"	v
s:warning	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:warning = 2 | :lockvar s:warning$/;"	v
s:error	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:error   = 3 | :lockvar s:error$/;"	v
s:Logger	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^let s:Logger = {}$/;"	v
Logger.output	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.output(level, msg) abort$/;"	f
Logger.debug	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.debug(msg) abort$/;"	f
Logger.info	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.info(msg) abort$/;"	f
Logger.warning	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.warning(msg) abort$/;"	f
Logger.error	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! s:Logger.error(msg) abort$/;"	f
gitstatus#log#NewLogger	plugged/nerdtree-git-plugin/autoload/gitstatus/log.vim	/^function! gitstatus#log#NewLogger(level) abort$/;"	f
g:loaded_nerdtree_git_status_util	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^let g:loaded_nerdtree_git_status_util = 1$/;"	v
gitstatus#util#FormatPath	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^        function! gitstatus#util#FormatPath(path) abort$/;"	f
gitstatus#util#FormatPath	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^        function! gitstatus#util#FormatPath(path) abort$/;"	f
gitstatus#util#FormatPath	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^    function! gitstatus#util#FormatPath(path) abort$/;"	f
gitstatus#util#BuildGitWorkdirCommand	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#BuildGitWorkdirCommand(root, opts) abort$/;"	f
gitstatus#util#BuildGitStatusCommand	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#BuildGitStatusCommand(root, opts) abort$/;"	f
gitstatus#util#ParseGitStatusLines	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#ParseGitStatusLines(root, statusLines, opts) abort$/;"	f
s:unmerged_status	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^let s:unmerged_status = {$/;"	v
getStatusKey	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! s:getStatusKey(x, y) abort$/;"	f
gitstatus#util#ParseGitStatusLine	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#ParseGitStatusLine(statusLine, opts) abort$/;"	f
gitstatus#util#UpdateParentDirsStatus	plugged/nerdtree-git-plugin/autoload/gitstatus/util.vim	/^function! gitstatus#util#UpdateParentDirsStatus(cache, root, pathStr, statusKey, opts) abort$/;"	f
getIndicator	plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:getIndicator(status) abort$/;"	f
highlightFromGroup	plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:highlightFromGroup(group) abort$/;"	f
setHightlighting	plugged/nerdtree-git-plugin/after/syntax/nerdtree.vim	/^function! s:setHightlighting() abort$/;"	f
g:loaded_nerdtree_git_status	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let g:loaded_nerdtree_git_status = 1$/;"	v
s:is_win	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:is_win = gitstatus#isWin()$/;"	v
initVariable	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:initVariable(var, value) abort$/;"	f
s:default_vals	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:default_vals = {$/;"	v
s:logger	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:logger = gitstatus#log#NewLogger(g:NERDTreeGitStatusLogLevel)$/;"	v
deprecated	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:deprecated(oldv, newv) abort$/;"	f
migrateVariable	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:migrateVariable(oldv, newv) abort$/;"	f
s:need_migrate_vals	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:need_migrate_vals = {$/;"	v
path2str	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:path2str(path) abort$/;"	f
onGitWorkdirSuccessCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitWorkdirSuccessCB(job) abort$/;"	f
onGitWorkdirFailedCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitWorkdirFailedCB(job) abort$/;"	f
getGitWorkdir	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:getGitWorkdir(ntRoot) abort$/;"	f
buildGitWorkdirCommand	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:buildGitWorkdirCommand(root) abort$/;"	f
buildGitStatusCommand	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:buildGitStatusCommand(workdir) abort$/;"	f
refreshGitStatus	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:refreshGitStatus(name, workdir) abort$/;"	f
onGitStatusSuccessCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitStatusSuccessCB(job) abort$/;"	f
onGitStatusFailedCB	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onGitStatusFailedCB(job) abort$/;"	f
onCursorHold	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onCursorHold(fname)$/;"	f
onFileUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onFileUpdate(fname)$/;"	f
hasPrefix	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:hasPrefix(text, prefix) abort$/;"	f
setupNERDTreeListeners	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:setupNERDTreeListeners(listener) abort$/;"	f
findHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:findHunk(node, direction) abort$/;"	f
jumpToNextHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToNextHunk(node)$/;"	f
jumpToPrevHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToPrevHunk(node)$/;"	f
SID	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function s:SID()$/;"	f
setupNERDTreeKeyMappings	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:setupNERDTreeKeyMappings()$/;"	f
onNERDTreeDirChanged	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onNERDTreeDirChanged(path) abort$/;"	f
onNERDTreeInit	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:onNERDTreeInit(path) abort$/;"	f
enableLiveUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:enableLiveUpdate() abort$/;"	f
disableLiveUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:disableLiveUpdate() abort$/;"	f
nerdtreegitplugin	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^augroup nerdtreegitplugin$/;"	a
s:listener	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:listener = gitstatus#listener#New(g:)$/;"	v
g:loaded_matchit	plugged/vim-matchit/plugin/matchit.vim	/^let g:loaded_matchit = 1$/;"	v
s:save_cpo	plugged/vim-matchit/plugin/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
<Plug>(MatchitNormalForward)	plugged/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> <Plug>(MatchitNormalForward)     :<C-U>call matchit#Match_wrapper('',1,'n')<CR>$/;"	m
<Plug>(MatchitNormalBackward)	plugged/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> <Plug>(MatchitNormalBackward)    :<C-U>call matchit#Match_wrapper('',0,'n')<CR>$/;"	m
<Plug>(MatchitOperationForward)	plugged/vim-matchit/plugin/matchit.vim	/^onoremap <silent> <Plug>(MatchitOperationForward)  :<C-U>call matchit#Match_wrapper('',1,'o')<CR>$/;"	m
<Plug>(MatchitOperationBackward)	plugged/vim-matchit/plugin/matchit.vim	/^onoremap <silent> <Plug>(MatchitOperationBackward) :<C-U>call matchit#Match_wrapper('',0,'o')<CR>$/;"	m
%	plugged/vim-matchit/plugin/matchit.vim	/^nmap <silent> %  <Plug>(MatchitNormalForward)$/;"	m
g%	plugged/vim-matchit/plugin/matchit.vim	/^nmap <silent> g% <Plug>(MatchitNormalBackward)$/;"	m
%	plugged/vim-matchit/plugin/matchit.vim	/^omap <silent> %  <Plug>(MatchitOperationForward)$/;"	m
g%	plugged/vim-matchit/plugin/matchit.vim	/^omap <silent> g% <Plug>(MatchitOperationBackward)$/;"	m
<Plug>(MatchitNormalMultiBackward)	plugged/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> <Plug>(MatchitNormalMultiBackward)    :<C-U>call matchit#MultiMatch("bW", "n")<CR>$/;"	m
<Plug>(MatchitNormalMultiForward)	plugged/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> <Plug>(MatchitNormalMultiForward)     :<C-U>call matchit#MultiMatch("W",  "n")<CR>$/;"	m
<Plug>(MatchitOperationMultiBackward)	plugged/vim-matchit/plugin/matchit.vim	/^onoremap <silent> <Plug>(MatchitOperationMultiBackward) :<C-U>call matchit#MultiMatch("bW", "o")<CR>$/;"	m
<Plug>(MatchitOperationMultiForward)	plugged/vim-matchit/plugin/matchit.vim	/^onoremap <silent> <Plug>(MatchitOperationMultiForward)  :<C-U>call matchit#MultiMatch("W",  "o")<CR>$/;"	m
[%	plugged/vim-matchit/plugin/matchit.vim	/^nmap <silent> [% <Plug>(MatchitNormalMultiBackward)$/;"	m
]%	plugged/vim-matchit/plugin/matchit.vim	/^nmap <silent> ]% <Plug>(MatchitNormalMultiForward)$/;"	m
[%	plugged/vim-matchit/plugin/matchit.vim	/^omap <silent> [% <Plug>(MatchitOperationMultiBackward)$/;"	m
]%	plugged/vim-matchit/plugin/matchit.vim	/^omap <silent> ]% <Plug>(MatchitOperationMultiForward)$/;"	m
MatchDebug	plugged/vim-matchit/plugin/matchit.vim	/^  command! -nargs=0 MatchDebug call matchit#Match_debug()$/;"	c
s:last_mps	plugged/vim-matchit/autoload/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	plugged/vim-matchit/autoload/matchit.vim	/^let s:last_words = ":"$/;"	v
s:patBR	plugged/vim-matchit/autoload/matchit.vim	/^let s:patBR = ""$/;"	v
s:save_cpo	plugged/vim-matchit/autoload/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:notslash	plugged/vim-matchit/autoload/matchit.vim	/^let s:notslash = '\\\\\\@1<!\\%(\\\\\\\\\\)*'$/;"	v
RestoreOptions	plugged/vim-matchit/autoload/matchit.vim	/^function s:RestoreOptions()$/;"	f
matchit#Match_wrapper	plugged/vim-matchit/autoload/matchit.vim	/^function matchit#Match_wrapper(word, forward, mode) range$/;"	f
CleanUp	plugged/vim-matchit/autoload/matchit.vim	/^fun! s:CleanUp(options, mode, startpos, ...)$/;"	f
InsertRefs	plugged/vim-matchit/autoload/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
ParseWords	plugged/vim-matchit/autoload/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Wholematch	plugged/vim-matchit/autoload/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
Ref	plugged/vim-matchit/autoload/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
Count	plugged/vim-matchit/autoload/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
Resolve	plugged/vim-matchit/autoload/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
Choose	plugged/vim-matchit/autoload/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
matchit#Match_debug	plugged/vim-matchit/autoload/matchit.vim	/^fun! matchit#Match_debug()$/;"	f
matchit#MultiMatch	plugged/vim-matchit/autoload/matchit.vim	/^fun! matchit#MultiMatch(spflag, mode)$/;"	f
ParseSkip	plugged/vim-matchit/autoload/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
s:save_cpo	plugged/vim-airline-themes/plugin/airline-themes.vim	/^let s:save_cpo = &cpo$/;"	v
g:loaded_airline_themes	plugged/vim-airline-themes/plugin/airline-themes.vim	/^let g:loaded_airline_themes = 1$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui00 = "#1d1f21"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui01 = "#282a2e"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui02 = "#373b41"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui03 = "#969896"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui04 = "#b4b7b4"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui05 = "#c5c8c6"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui08 = "#CC342B"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui09 = "#F96A38"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0A = "#FBA922"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0B = "#198844"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0C = "#3971ED"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0D = "#3971ED"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0E = "#A36AC7"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0F = "#3971ED"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm01 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm03 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm04 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm05 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm06 = 253$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm08 = 166$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm09 = 203$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0A = 214$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0C = 12$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0F = 12$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui00 = "#3B3228"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui01 = "#534636"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui02 = "#645240"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui03 = "#7e705a"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui04 = "#b8afad"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui05 = "#d0c8c6"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui06 = "#e9e1dd"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui07 = "#f5eeeb"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui08 = "#cb6077"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui09 = "#d28b71"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0A = "#f4bc87"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0B = "#beb55b"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0C = "#7bbda4"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0D = "#8ab3b5"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0E = "#a89bb9"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0F = "#bb9584"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm00 = 58$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm01 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm03 = 95$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm04 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm05 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm07 = 230$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm08 = 168$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm09 = 173$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0A = 216$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0C = 109$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0D = 109$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0E = 139$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0F = 138$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui01 = "#262626"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui06 = "#cdd3de"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui07 = "#d8dee9"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui08 = "#870000"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0A = "#fac863"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0B = "#437019"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0C = "#5fb3b3"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0D = "#0d61ac"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0E = "#c594c5"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm00 = "233"$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm01 = "235"$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm02 = "59"$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm03 = "66"$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm04 = "145"$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm05 = "152"$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm06 = "188"$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm07 = "189"$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm08 = "88"$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm09 = "209"$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0A = "221"$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0B = "22"$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0C = "73"$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0D = "25"$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0E = "176"$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0F = "137"$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:guiGray = "#666666"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermGray	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:ctermGray = "243"$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette = {}$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:modified = { 'airline_c': [ '#ffb964', '', 215, '', '' ] }$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:N1 = [ s:gui07 , s:gui0D , s:cterm07 , s:cterm0D  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:N2 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01  ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:N3 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00  ]$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.normal_modified = s:modified$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:I1 = [ s:guiWhite , s:gui0B , s:ctermWhite , s:cterm0B  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:I2 = s:N2$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:I3 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm00  ]$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.insert_modified = s:modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:V1 = [ s:guiWhite , s:gui08 , s:ctermWhite , s:cterm08 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:V2 = s:N2$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:V3 = s:I3$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.visual_modified = s:modified$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:R1 = [ s:gui08 , s:gui01 , s:cterm08, s:cterm00 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:R2 = s:N2$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:R3 = s:I3$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.replace_modified = s:modified$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:IN1 = [ s:guiGray , s:gui01 , s:ctermGray , s:cterm01 ]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:IN2 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:IN3 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.inactive_modified = s:modified$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:CP1 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:CP2 = [ s:guiWhite , s:gui03 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:CP3 = [ s:guiWhite , s:gui0D , s:ctermWhite , s:cterm0D  ]$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP2, s:CP3)$/;"	v
g:airline#themes#nord_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui00 = '#2e3440'$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui01 = '#3b4252'$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui02 = '#434c5e'$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui03 = '#4c566a'$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui04 = '#d8dee9'$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui05 = '#e5e9f0'$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui06 = '#eceff4'$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui07 = '#8fbcbb'$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui08 = '#88c0d0'$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui09 = '#81a1c1'$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0A = '#5e81ac'$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0B = '#bf616a'$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0C = '#d08770'$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0D = '#ebcb8b'$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0E = '#a3be8c'$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:gui0F = '#b48ead'$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm01 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm03 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm04 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm05 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm06 = 253$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm08 = 166$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm09 = 203$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0A = 214$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0C = 12$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:cterm0F = 12$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:N1   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:N2   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:N3   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
g:airline#themes#nord_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:I1   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:I2   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:I3   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
g:airline#themes#nord_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:R1   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:R2   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:R3   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
g:airline#themes#nord_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:V1   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:V2   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:V3   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
g:airline#themes#nord_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:IA1   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:IA2   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let s:IA3   = [ s:gui09, s:gui02, s:cterm09, s:cterm02 ]$/;"	v
g:airline#themes#nord_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/nord_minimal.vim	/^let g:airline#themes#nord_minimal#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N1 = [ '#141413' , '#CAE682' , 232 , 192 ] " mode$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 192 , 238 ] " info$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 192 , 235 ] " statusline$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N4 = [ '#86CD74' , 113 ]                   " mode modified$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 227 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 227 , 238 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 227 , 235 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I4 = [ '#FADE3E' , 221 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 153 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 153 , 238 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 153 , 235 ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V4 = [ '#7CB0E6' , 111 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 173 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 173 , 238 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 173 , 235 ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R4 = [ '#E55345' , 203 ]$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:PA = [ '#94E42C' , 47 ]$/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:IM = [ '#40403C' , 238 ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette = {}$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.accents = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal_modified = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_modified = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual_modified = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace_modified = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_paste = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive_modified = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#atomic#palette	plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^let g:airline#themes#atomic#palette = {}$/;"	v
airline#themes#atomic#refresh	plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^function! airline#themes#atomic#refresh()$/;"	f
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui01 = "#303030"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui02 = "#505050"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui03 = "#b0b0b0"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui04 = "#d0d0d0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui05 = "#e0e0e0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui06 = "#f5f5f5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui08 = "#fb0120"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui09 = "#fc6d24"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0A = "#fda331"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0B = "#a1c659"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0C = "#76c7b7"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0D = "#6fb3d2"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0E = "#d381c3"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0F = "#be643c"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm01 = 236$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm02 = 239$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm03 = 249$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm04 = 252$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm05 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm06 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm08 = 9$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm09 = 202$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0A = 215$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0B = 149$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0C = 115$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0D = 74$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0E = 175$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0F = 131$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui04 = "#B0B0B0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui05 = "#D0D0D0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui06 = "#E0E0E0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui07 = "#F5F5F5"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui08 = "#AC4142"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui09 = "#D28445"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0A = "#F4BF75"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0B = "#90A959"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0C = "#75B5AA"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0D = "#6A9FB5"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0E = "#AA759F"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0F = "#8F5536"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm01 = 18$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm02 = 19$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm03 = 8$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm04 = 20$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm05 = 7$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm06 = 21$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm08 = 1$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm09 = 16$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0F = 17$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui00 = "#2b303b"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui01 = "#343d46"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui06 = "#dfe1e8"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui07 = "#eff1f5"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui08 = "#bf616a"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui09 = "#d08770"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0A = "#ebcb8b"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0B = "#a3be8c"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0C = "#96b5b4"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0D = "#8fa1b3"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0E = "#b48ead"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm00 = 23$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm01 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm03 = 60$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm04 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm05 = 152$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm08 = 131$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm09 = 173$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0A = 186$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0B = 144$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0C = 109$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0D = 109$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0E = 139$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0F = 137$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui04 = "#b0b0b0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui05 = "#d0d0d0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui07 = "#f5f5f5"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui08 = "#fb9fb1"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui09 = "#eda987"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0A = "#ddb26f"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0B = "#acc267"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0C = "#12cfc0"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0D = "#6fc2ef"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0E = "#e1a3ee"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0F = "#deaf8f"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm00 = 233$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm01 = 234$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm02 = 236$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm03 = 239$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm04 = 249$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm05 = 252$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm06 = 253$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm08 = 217$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm09 = 216$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0A = 179$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0D = 75$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0E = 183$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0F = 180$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
airline#themes#onedark#refresh	plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^function! airline#themes#onedark#refresh()$/;"	f
s:gui_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:cterm_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:gui_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:cterm_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:gui_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:cterm_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:gui_light_gray	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:cterm_light_gray	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_light_gray = 249$/;"	v
s:gui_deep_green	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_deep_green = '#5faf00'$/;"	v
s:cterm_deep_green	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_deep_green = 70$/;"	v
s:gui_green	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_green = '#afd787'$/;"	v
s:cterm_green	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_green = 150$/;"	v
s:gui_light_blue	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_light_blue = '#00afff'$/;"	v
s:cterm_light_blue	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_light_blue = 39$/;"	v
s:gui_blue	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:cterm_blue	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_blue = 110$/;"	v
s:gui_sky_blue	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_sky_blue = '#87afff'$/;"	v
s:cterm_sky_blue	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_sky_blue = 111$/;"	v
s:gui_purple	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:cterm_purple	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_purple = 146$/;"	v
s:gui_orange	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_orange = '#d7af5f'$/;"	v
s:cterm_orange	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_orange = 179$/;"	v
s:gui_red	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_red = '#d78787'$/;"	v
s:cterm_red	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_red = 174$/;"	v
s:gui_pink	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:cterm_pink	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:cterm_pink = 182$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:N1 = [s:gui_dark_gray, '#87d7ff', s:cterm_dark_gray, 117]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:N3 = ['#87d7ff', s:gui_med_gray_hi, 117, s:cterm_med_gray_hi]$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.insert_modified = copy(g:airline#themes#owo#palette.normal_modified)$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.insert_paste = {$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.replace = {$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.replace_modified = copy(g:airline#themes#owo#palette.insert_modified)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:V1 = [s:gui_dark_gray, '#87d787', s:cterm_dark_gray, 114]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:V3 = ['#87d787', s:gui_med_gray_hi, 114, s:cterm_med_gray_hi]$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.visual_modified = copy(g:airline#themes#owo#palette.insert_modified)$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.inactive_modified = copy(g:airline#themes#owo#palette.normal_modified)$/;"	v
g:airline#themes#owo#palette	plugged/vim-airline-themes/autoload/airline/themes/owo.vim	/^let g:airline#themes#owo#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui00 = "#2d2d2d"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui01 = "#393939"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui02 = "#515151"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui03 = "#747369"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui04 = "#a09f93"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui05 = "#d3d0c8"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui06 = "#e8e6df"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui07 = "#f2f0ec"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui08 = "#f2777a"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0A = "#ffcc66"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0B = "#99cc99"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0C = "#66cccc"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0D = "#6699cc"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0E = "#cc99cc"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0F = "#d27b53"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm00 = 236$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm01 = 237$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm02 = 239$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm03 = 95$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm04 = 144$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm05 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm08 = 210$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm09 = 209$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0A = 221$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0B = 114$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0C = 80$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0E = 176$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0F = 173$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui00 = "#1C2023"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui01 = "#393F45"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui02 = "#565E65"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui03 = "#747C84"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui04 = "#ADB3BA"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui05 = "#C7CCD1"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui06 = "#DFE2E5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui07 = "#F3F4F5"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui08 = "#C7AE95"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui09 = "#C7C795"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0A = "#AEC795"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0B = "#95C7AE"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0C = "#95AEC7"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0D = "#AE95C7"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0E = "#C795AE"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0F = "#C79595"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm01 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm03 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm04 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm05 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm08 = 180$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm09 = 186$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0A = 150$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0B = 115$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0C = 110$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0D = 140$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0E = 175$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0F = 174$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:N1 = [ '#3D424D' , '#C2D94C' , 59  , 149 ] " guifg guibg ctermfg ctermbg$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:N2 = [ '#C2D94C' , '#304357' , 149 , 59  ] " guifg guibg ctermfg ctermbg$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:N3 = [ '#B3B1AD' , '#0A0E14' , 145 , 16  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:I1 = [ '#3D424D' , '#39BAE6' , 59  , 74  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:I2 = [ '#39BAE6' , '#304357' , 74  , 59  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:I3 = [ '#B3B1AD' , '#0A0E14' , 145 , 16  ] " guifg guibg ctermfg ctermbg$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:V1 = [ '#3D424D' , '#FF8F40' , 59  , 209 ] " guifg guibg ctermfg ctermbg$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:V2 = [ '#FF8F40' , '#304357' , 209 , 59  ] " guifg guibg ctermfg ctermbg$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:V3 = [ '#B3B1AD' , '#0A0E14' , 145 , 16  ] " guifg guibg ctermfg ctermbg$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:RE = [ '#3D424D' , '#FF3333' , 59  , 203 ] " guifg guibg ctermfg ctermbg$/;"	v
g:airline#themes#ayu_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette = {}$/;"	v
g:airline#themes#ayu_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ayu_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ayu_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.insert_replace = {$/;"	v
g:airline#themes#ayu_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ayu_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.replace = copy(g:airline#themes#ayu_dark#palette.normal)$/;"	v
g:airline#themes#ayu_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let s:IA = [ s:N1[1] , s:N3[1] , s:N1[3] , s:N3[3] , '' ]$/;"	v
g:airline#themes#ayu_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_dark.vim	/^let g:airline#themes#ayu_dark#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N1 = [ '#141413' , '#CAE682' , 232 , 2 ] " mode$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 2 , 'black' ] " info$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 2 , 233 ] " statusline$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N4 = [ '#86CD74' , 10 ]                   " mode modified$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 3 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 3 , 'black' ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 3 , 233 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I4 = [ '#FADE3E' , 11 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 4 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 4 , 'black' ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 4 , 233 ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V4 = [ '#7CB0E6' , 12 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 1 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 1 , 'black' ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 1 , 233 ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R4 = [ '#E55345' , 9 ]$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:PA = [ '#94E42C' , 6 ]$/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:IM = [ '#40403C' , 7 ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette = {}$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.accents = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.normal_modified = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.insert_modified = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.visual_modified = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.replace_modified = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.insert_paste = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.inactive_modified = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui00 = "#1b181b"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui01 = "#292329"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui02 = "#695d69"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui03 = "#776977"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui04 = "#9e8f9e"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui05 = "#ab9bab"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui06 = "#d8cad8"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui07 = "#f7f3f7"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui08 = "#ca402b"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui09 = "#a65926"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0A = "#bb8a35"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0B = "#379a37"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0C = "#159393"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0D = "#516aec"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0E = "#7b59c0"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0F = "#cc33cc"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm01 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm03 = 96$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm04 = 139$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm05 = 139$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm08 = 166$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm09 = 130$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0A = 137$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0B = 65$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0C = 30$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0F = 170$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui00 = "#16130F"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui01 = "#2C2620"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui02 = "#433B32"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui03 = "#5A5047"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui04 = "#8A8075"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui05 = "#A39A90"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui06 = "#BEB6AE"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui07 = "#DBD6D1"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui08 = "#826D57"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui09 = "#828257"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0A = "#6D8257"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0B = "#57826D"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0C = "#576D82"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0D = "#6D5782"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0E = "#82576D"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0F = "#825757"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm01 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm03 = 59$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm05 = 138$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm06 = 145$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm07 = 188$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm08 = 95$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm09 = 101$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0A = 65$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0B = 65$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0C = 60$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0D = 60$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0E = 95$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0F = 95$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui00 = "#2C3E50"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui01 = "#34495E"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui02 = "#7F8C8D"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui03 = "#95A5A6"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui04 = "#BDC3C7"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui05 = "#e0e0e0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui06 = "#f5f5f5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui07 = "#ECF0F1"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui08 = "#E74C3C"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui09 = "#E67E22"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0A = "#F1C40F"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0B = "#2ECC71"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0C = "#1ABC9C"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0D = "#3498DB"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0E = "#9B59B6"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0F = "#be643c"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm00 = 23$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm01 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm02 = 102$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm03 = 109$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm04 = 146$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm05 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm06 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm08 = 167$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm09 = 172$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0B = 41$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0F = 131$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:base00	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base00 = '#282a36' "236 $/;"	v
s:base01	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base01 = '#34353e' "237$/;"	v
s:base02	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base02 = '#43454f' "238$/;"	v
s:base03	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base03 = '#78787e' "244$/;"	v
s:base04	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base04 = '#a5a5a9' "248$/;"	v
s:base05	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base05 = '#e2e4e5' "254$/;"	v
s:base06	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base06 = '#eff0eb' "255$/;"	v
s:base07	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base07 = '#f1f1f0' "15$/;"	v
s:base08	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base08 = '#ff5c57' "203$/;"	v
s:base09	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base09 = '#ff9f43' "215$/;"	v
s:base0A	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0A = '#f3f99d' "229$/;"	v
s:base0B	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0B = '#5af78e' "84$/;"	v
s:base0C	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0C = '#9aedfe' "123$/;"	v
s:base0D	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0D = '#57c7ff' "81$/;"	v
s:base0E	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0E = '#ff6ac1' "205$/;"	v
s:base0F	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:base0F = '#b2643c' "131$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:N1 = [ s:base00 , s:base0D , 235 , 81 ]           " [ color of body and line-info ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:N2 = [ s:base0D , s:base00 , 81 , 235 ]           " [ diffcount and file-info ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:N3 = [ s:base0D , s:base00 , 81 , 235 ]           " [ filename ]$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:N4 = [ s:base0D , 81 ]                            " [ buffer modified ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:I1 = [ s:base00 , s:base0B , 235 , 84 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:I2 = [ s:base0B , s:base00 , 84 , 235 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:I3 = [ s:base0B , s:base00 , 84 , 235 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:I4 = [ s:base0B , 84 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:V1 = [ s:base00 , s:base0A , 235 , 229 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:V2 = [ s:base0A , s:base00 , 229 , 235 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:V3 = [ s:base0A , s:base00 , 229 , 235 ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:V4 = [ s:base0A , 229 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:R1 = [ s:base00 , s:base08 , 235 , 203 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:R2 = [ s:base08 , s:base00 , 203 , 235 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:R3 = [ s:base08 , s:base00 , 203 , 235 ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:R4 = [ s:base08 , 203 ]$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:PA = [ s:base0B , 84 ] $/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:IM = [ s:base00 , 235 ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let s:IA = [ '' , s:N3[1] , 244 , 235 , '' ] " [ color of bar on inactive splits ]$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette = {}$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.accents = {$/;"	v
ER	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let ER = [ s:base00 , s:base08 , 235 , 203 ]      " [ error color ]$/;"	v
WI	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let WI = [ s:base00 , s:base0A , 235 , 229 ]      " [ warning color ]$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal_modified = {$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal_modified.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.normal_modified.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_modified = {$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_modified.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_modified.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual_modified = {$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual_modified.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.visual_modified.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace_modified = {$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace_modified.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.replace_modified.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_paste = {$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_paste.airline_error = ER$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.insert_paste.airline_warning = WI$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16_snazzy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_snazzy.vim	/^let g:airline#themes#base16_snazzy#palette.inactive_modified = {$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui00 = "#1b1918"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui01 = "#2c2421"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui02 = "#68615e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui03 = "#766e6b"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui04 = "#9c9491"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui05 = "#a8a19f"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui06 = "#e6e2e0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui07 = "#f1efee"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui08 = "#f22c40"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui09 = "#df5320"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0A = "#d5911a"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0B = "#5ab738"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0C = "#00ad9c"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0D = "#407ee7"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0E = "#6666ea"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0F = "#c33ff3"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm01 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm03 = 95$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm04 = 138$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm05 = 145$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm08 = 197$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm09 = 166$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0A = 172$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0E = 62$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0F = 135$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette = {}$/;"	v
s:cterm_termbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg    = 237  " Background for branch and file format blocks$/;"	v
s:gui_termbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termbg      = '#5F5F5F'$/;"	v
s:cterm_termfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg    = 144  " Foreground for branch and file format blocks$/;"	v
s:gui_termfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termfg      = '#AFAF87'$/;"	v
s:cterm_termbg2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg2   = 234  " Background for middle block$/;"	v
s:gui_termbg2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termbg2     = '#1C1C1C'$/;"	v
s:cterm_termfg2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg2   = 39   " Foreground for middle block$/;"	v
s:gui_termfg2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termfg2     = '#F5F5F5'$/;"	v
s:cterm_normalbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_normalbg  = 27   " Background for normal mode and file position blocks$/;"	v
s:gui_normalbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_normalbg    = '#5F87FF'$/;"	v
s:cterm_normalfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_normalfg  = 15   " Foreground for normal mode and file position blocks$/;"	v
s:gui_normalfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_normalfg    = '#FFFFFF'$/;"	v
s:cterm_insertbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_insertbg  = 70   " Background for insert mode and file position blocks$/;"	v
s:gui_insertbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_insertbg    = '#87AF5F'$/;"	v
s:cterm_insertfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_insertfg  = 15   " Foreground for insert mode and file position blocks$/;"	v
s:gui_insertfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_insertfg    = '#FFFFFF'$/;"	v
s:cterm_visualbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_visualbg  = 166  " Background for visual mode and file position blocks$/;"	v
s:gui_visualbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_visualbg    = '#ff8c00'$/;"	v
s:cterm_visualfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_visualfg  = 15   " Foreground for visual mode and file position blocks$/;"	v
s:gui_visualfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_visualfg    = '#FFFFFF'$/;"	v
s:cterm_replacebg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_replacebg = 88   " Background for replace mode and file position blocks$/;"	v
s:gui_replacebg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_replacebg   = '#870000'$/;"	v
s:cterm_replacefg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_replacefg = 15   " Foreground for replace mode and file position blocks$/;"	v
s:gui_replacefg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_replacefg   = '#FFFFFF'$/;"	v
s:cterm_alert	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_alert     = 88   " Modified file alert color$/;"	v
s:gui_alert	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_alert       = '#870000'$/;"	v
s:cterm_inactivebg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivebg = 234 " Background for inactive mode$/;"	v
s:gui_inactivebg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_inactivebg   = '#1C1C1C'$/;"	v
s:cterm_inactivefg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivefg = 239 " Foreground for inactive mode$/;"	v
s:gui_inactivefg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_inactivefg   = '#4E4E4E'$/;"	v
s:BB	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg] " Branch and file format blocks$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg] " Outside blocks in normal mode$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:N2 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]     " Middle block$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal = airline#themes#generate_color_map(s:N1, s:BB, s:N2)$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg] " Outside blocks in insert mode$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:I2 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]   " Middle block$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert = airline#themes#generate_color_map(s:I1, s:BB, s:I2)$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]  " Outside blocks in replace mode$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:R2 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]            " Middle block$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace = airline#themes#generate_color_map(s:R1, s:BB, s:R2)$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg] " Outside blocks in visual mode$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:V2 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]   " Middle block$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual = airline#themes#generate_color_map(s:V1, s:BB, s:V2)$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:almost_black	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:almost_black = [ '#1c1c1c', 234 ]$/;"	v
s:darker_grey	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:darker_grey  = [ '#262626', 235 ]$/;"	v
s:medium_grey	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:medium_grey  = [ '#585858', 240 ]$/;"	v
s:lighter_grey	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:lighter_grey = [ '#bcbcbc', 250 ]$/;"	v
s:light_purple	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:light_purple = [ '#8787af', 103 ]$/;"	v
s:light_green	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:light_green  = [ '#87af87', 108 ]$/;"	v
s:green	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:green        = [ '#5f875f',  65 ]$/;"	v
s:light_blue	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:light_blue   = [ '#87afd7', 110 ]$/;"	v
s:red	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:red          = [ '#af5f5f', 131 ]$/;"	v
s:orange	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:orange       = [ '#ff8700', 208 ]$/;"	v
s:ocre	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:ocre         = [ '#87875f', 101 ]$/;"	v
s:yellow	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:yellow       = [ '#ffffaf', 229 ]$/;"	v
color_list	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^function! s:color_list(fg, bg) abort$/;"	f
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette = {}$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:modified = {$/;"	v
s:warning	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:warning = s:color_list(s:darker_grey, s:orange)$/;"	v
s:error	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:error = s:color_list(s:darker_grey, s:red)$/;"	v
s:airline_a_normal	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_a_normal = s:color_list(s:darker_grey, s:ocre)$/;"	v
s:airline_b_normal	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_b_normal = s:color_list(s:darker_grey, s:medium_grey)$/;"	v
s:airline_c_normal	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_c_normal = s:color_list(s:lighter_grey, s:darker_grey)$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal = airline#themes#generate_color_map(s:airline_a_normal, s:airline_b_normal, s:airline_c_normal)$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal_modified = s:modified$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal_modified.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.normal_modified.airline_error = s:error$/;"	v
s:airline_a_insert	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_a_insert = s:color_list(s:darker_grey, s:green)$/;"	v
s:airline_b_insert	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_b_insert = s:airline_b_normal$/;"	v
s:airline_c_insert	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_c_insert = s:airline_c_normal$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert = airline#themes#generate_color_map(s:airline_a_insert, s:airline_b_insert, s:airline_c_insert)$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert_modified = s:modified$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert_modified.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.insert_modified.airline_error = s:error$/;"	v
s:airline_a_replace	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_a_replace = s:color_list(s:darker_grey, s:red)$/;"	v
s:airline_b_replace	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_b_replace = s:airline_b_normal$/;"	v
s:airline_c_replace	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_c_replace = s:airline_c_normal$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace = airline#themes#generate_color_map(s:airline_a_replace, s:airline_b_replace, s:airline_c_replace)$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace_modified = s:modified$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace_modified.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.replace_modified.airline_error = s:error$/;"	v
s:airline_a_visual	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_a_visual = s:color_list(s:darker_grey, s:yellow)$/;"	v
s:airline_b_visual	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_b_visual = s:airline_b_normal$/;"	v
s:airline_c_visual	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_c_visual = s:airline_c_normal$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual = airline#themes#generate_color_map(s:airline_a_visual, s:airline_b_visual, s:airline_c_visual)$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual_modified = s:modified$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual_modified.airline_warning = s:warning$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual.airline_error = s:error$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.visual_modified.airline_error = s:error$/;"	v
s:airline_a_inactive	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_a_inactive = s:color_list(s:darker_grey, s:medium_grey)$/;"	v
s:airline_b_inactive	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_b_inactive = s:color_list(s:medium_grey, s:darker_grey)$/;"	v
s:airline_c_inactive	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let s:airline_c_inactive = s:airline_b_inactive$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.inactive = airline#themes#generate_color_map(s:airline_a_inactive, s:airline_b_inactive, s:airline_c_inactive)$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#apprentice#palette	plugged/vim-airline-themes/autoload/airline/themes/apprentice.vim	/^let g:airline#themes#apprentice#palette.accents = {$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui00 = "#001100"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui01 = "#003300"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui02 = "#005500"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui03 = "#007700"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui04 = "#009900"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui05 = "#00bb00"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui06 = "#00dd00"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui07 = "#00ff00"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui08 = "#007700"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui09 = "#009900"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0A = "#007700"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0B = "#00bb00"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0C = "#005500"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0D = "#009900"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0E = "#00bb00"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0F = "#005500"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm01 = 22$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm02 = 22$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm03 = 28$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm04 = 28$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm05 = 34$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm06 = 40$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm07 = 10$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm08 = 28$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm09 = 28$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0A = 28$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0B = 34$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0C = 22$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0D = 28$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0E = 34$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0F = 22$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette = {}$/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.normal = airline#themes#generate_color_map($/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.insert = airline#themes#generate_color_map($/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.replace = {'airline_a': ['#767676', '#ffff5f', 243, 227]}$/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.visual = airline#themes#generate_color_map($/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.inactive = airline#themes#generate_color_map($/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.inactive_modified = {'airline_c': ['#ffffff', '#df0000', 255, 160]}$/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.tabline = {$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette = {}$/;"	v
s:RED	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:RED    = '#EA4335'$/;"	v
s:GREEN	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:GREEN  = '#34A853'$/;"	v
s:YELLOW	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:YELLOW = '#FBBC05'$/;"	v
s:BLUE	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:BLUE   = '#4285F4'$/;"	v
s:BLACK	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:BLACK  = '#000000'$/;"	v
s:DGREY	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:DGREY  = '#656565'$/;"	v
s:LGREY	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:LGREY  = '#EEEEEE'$/;"	v
s:WHITE	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:WHITE  = '#FFFFFF'$/;"	v
s:TERM_RED	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_RED    = 167$/;"	v
s:TERM_GREEN	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_GREEN  = 71$/;"	v
s:TERM_YELLOW	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_YELLOW = 220$/;"	v
s:TERM_BLUE	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_BLUE   = 69$/;"	v
s:TERM_BLACK	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_BLACK  = 16$/;"	v
s:TERM_DGREY	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_DGREY  = 241$/;"	v
s:TERM_LGREY	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_LGREY  = 255$/;"	v
s:TERM_WHITE	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_WHITE  = 231$/;"	v
s:GREY0	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:GREY0  = s:BLACK$/;"	v
s:GREY1	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:GREY1  = s:DGREY$/;"	v
s:GREY2	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:GREY2  = s:LGREY$/;"	v
s:BG	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:BG     = s:WHITE$/;"	v
s:TERM_GREY0	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_GREY0  = s:TERM_BLACK$/;"	v
s:TERM_GREY1	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_GREY1  = s:TERM_DGREY$/;"	v
s:TERM_GREY2	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_GREY2  = s:TERM_LGREY$/;"	v
s:TERM_BG	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:TERM_BG     = s:TERM_WHITE$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:N1 = [ s:BG, s:GREEN, s:TERM_BG, s:TERM_GREEN ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:N2 = [ s:GREY1, s:GREY2, s:TERM_GREY1, s:TERM_GREY2 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:N3 = [ s:GREEN, s:BG, s:TERM_GREEN, s:TERM_BG ]$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:I1 = [ s:BG, s:BLUE, s:TERM_BG, s:TERM_BLUE ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:I2 = s:N2$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:I3 = [ s:BLUE, s:BG, s:TERM_BLUE, s:TERM_BG ]$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.insert_modified = g:airline#themes#google_light#palette.normal_modified$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:R1 = [ s:BG, s:RED, s:TERM_BG, s:TERM_RED ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:R2 = s:N2$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:R3 = [ s:RED, s:BG, s:TERM_RED, s:TERM_BG ]$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.replace_modified = g:airline#themes#google_light#palette.normal_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:V1 = [ s:BG, s:YELLOW, s:TERM_BG, s:TERM_YELLOW ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:V2 = s:N2$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:V3 = [ s:YELLOW, s:BG, s:TERM_YELLOW, s:TERM_BG ]$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.visual_modified = g:airline#themes#google_light#palette.normal_modified$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:IA1 = [ s:BG, s:GREY2, s:TERM_BG, s:TERM_GREY2 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:IA2 = s:N2$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let s:IA3 = [ s:GREY2, s:BG, s:TERM_GREY2, s:TERM_BG ]$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#google_light#palette	plugged/vim-airline-themes/autoload/airline/themes/google_light.vim	/^let g:airline#themes#google_light#palette.inactive_modified = g:airline#themes#google_light#palette.normal_modified$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:N1 = [ '#282a2e' , '#c5c8c6' , 'black' , 15      ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:N2 = [ '#c5c8c6' , '#373b41' , 15      , 8       ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:N3 = [ '#ffffff' , '#282a2e' , 255     , 'black' ]$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.normal.airline_a = ['#005f00', '#b5bd68', 22, 10, '']$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:I1 = [ '#005f5f' , '#8abeb7' , 23  , 14 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:I2 = [ '#c5c8c6' , '#0087af' , 15  , 31 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:I3 = [ '#ffffff' , '#005f87' , 255 , 24 ]$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.insert_paste = {$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.replace = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.replace.airline_a = ['#000000', '#CC6666', 16, 9]$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.visual = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.visual.airline_a = ['#000000', '#de935f', 16, 3]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.accents = {$/;"	v
g:airline#themes#seagull#palette	plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^let g:airline#themes#seagull#palette = {}$/;"	v
airline#themes#seagull#refresh	plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^function! airline#themes#seagull#refresh()$/;"	f
s:N1	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:N1 = [ '#005f00' , '#1d1f21' , 7  , 8 ]    " darkestgreen   & brightgreen$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:N2 = [ '#9e9e9e' , '#303030' , 247 , 236 ] " gray8          & gray2$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:N3 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ] " white          & gray4$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:I1 = [ '#87d7ff' , '#1d1f21' , 7   , 24  ] " mediumcyan     & darkestblue$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ] " gray3          & brightestorange$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:RE = [ '#ffffff' , '#d70000' , 231 , 160 ] " white          & brightred$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette = {}$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:N3)$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.insert_replace = {$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.visual = {$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.replace = copy(airline#themes#ravenpower#palette.normal)$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3] , s:N3[3] , '' ]$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui00 = "#090300"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui01 = "#3a3432"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui02 = "#4a4543"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui03 = "#5c5855"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui04 = "#807d7c"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui05 = "#a5a2a2"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui06 = "#d6d5d4"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui07 = "#f7f7f7"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui08 = "#db2d20"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui09 = "#e8bbd0"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0A = "#fded02"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0B = "#01a252"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0C = "#b5e4f4"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0D = "#01a0e4"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0E = "#a16a94"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0F = "#cdab53"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm01 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm03 = 59$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm05 = 145$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm08 = 1$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm09 = 182$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0A = 11$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0B = 35$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0C = 153$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0D = 38$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0E = 132$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0F = 179$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette = {}$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.accents = {$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:N1 = [ '#ffffff' , '#1f7ad8' , 231  , 36 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:N2 = [ '#ffffff' , '#8cc2fd' , 231 , 29 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:N3 = [ '#ffffff' , '#204458' , 231  , 23 ]$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:I1 = [ '#666d51' , '#fee533' , 231 , 106 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:I2 = [ '#ffffff' , '#8cc2fd' , 231 , 29  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:I3 = [ '#ffffff' , '#204458' , 231 , 23  ]$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert_modified = {$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert_paste = {$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:R1 = [ '#ffffff' , '#ea9299' , 231 , 106 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:R2 = [ '#ffffff' , '#8cc2fd' , 88 , 29 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:R3 = [ '#ffffff' , '#204458' , 231  , 23  ]$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace_modified = {$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:V1 = [ '#ffff9a' , '#ff9d00' , 222 , 208 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:V2 = [ '#ffffff' , '#8cc2fd' , 231 , 29 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:V3 = [ '#ffffff' , '#204458' , 231  , 23  ]$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual_modified = {$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:IA = [ '#4e4e4e' , '#204458' , 59 , 23 , '' ]$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.inactive_modified = {$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.tabline = {$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:WI = [ '#204458', '#ffffff', 231, 88 ]$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal.airline_warning = [$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148, '' ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:N2 = [ '#bbbbbb' , '#444444' , 250 , 238, '' ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:N3 = [ '#ffffff' , '#303030' , 231 , 235, 'bold' ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:I1 = [ '#ffffff' , '#004866' , 231 , 24 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:I2 = [ '#99DDFF' , '#0087af' , 74  , 31 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:I3 = [ '#B2E5FF' , '#005f87' , 117 , 24 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ]$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:RE = [ '#ffffff' , '#d74444' , 231 , 9 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:IA1 = [ '#777777' , '#4a4a4a' , 240 , 237     , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:IA2 = [ '#777777' , '#3a3a3a' , 242 , 236     , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:IA3 = [ '#999999' , s:N3[1]   , 244 , s:N3[3] , '' ]$/;"	v
s:TN	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:TN  = s:N2 " normal buffers$/;"	v
s:TM	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:TM  = [ '#870000', '#ff8700',  88, 208, 'bold' ] " modified buffers$/;"	v
s:TMU	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:TMU = [ '#ff8700', '#870000', 208,  88, 'bold' ] " modified unselected buffers$/;"	v
s:TH	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let s:TH  = [ s:N1[1], s:N1[0], s:N1[3], s:N1[2] ]     " hidden buffers$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette = {}$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.normal_modified = {$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:N3)$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.insert_replace = {$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.visual = {$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.replace = copy(airline#themes#desertink#palette.normal)$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.replace.airline_z = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#desertink#palette	plugged/vim-airline-themes/autoload/airline/themes/desertink.vim	/^let g:airline#themes#desertink#palette.tabline = {$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui00 = "#322931"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui01 = "#433b42"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui02 = "#5c545b"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui03 = "#797379"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui04 = "#989498"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui05 = "#b9b5b8"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui06 = "#d5d3d5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui08 = "#dd464c"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui09 = "#fd8b19"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0A = "#fdcc59"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0B = "#8fc13e"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0C = "#149b93"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0D = "#1290bf"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0E = "#c85e7c"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0F = "#b33508"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm00 = 53$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm01 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm03 = 96$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm05 = 145$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm08 = 167$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm09 = 208$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0A = 221$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0B = 107$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0C = 30$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0D = 31$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0E = 168$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0F = 130$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui00 = "#101010"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui01 = "#252525"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui02 = "#464646"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui03 = "#525252"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui04 = "#ababab"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui05 = "#b9b9b9"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui06 = "#e3e3e3"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui07 = "#f7f7f7"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui08 = "#7c7c7c"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui09 = "#999999"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0A = "#a0a0a0"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0B = "#8e8e8e"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0C = "#868686"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0D = "#686868"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0E = "#747474"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0F = "#5e5e5e"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm00 = 233$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm01 = 235$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm02 = 238$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm03 = 239$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm04 = 248$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm05 = 250$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm06 = 254$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm08 = 243$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm09 = 246$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0A = 247$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0B = 245$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0C = 244$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0D = 241$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0E = 243$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0F = 240$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:N1 = [ '#6C7680' , '#86B300' , 66  , 106 ] " guifg guibg ctermfg ctermbg$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:N2 = [ '#86B300' , '#6C7680' , 106 , 66  ] " guifg guibg ctermfg ctermbg$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:N3 = [ '#6C7680' , '#FAFAFA' , 66  , 231 ] " guifg guibg ctermfg ctermbg$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:I1 = [ '#6C7680' , '#55B4D4' , 66  , 74  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:I2 = [ '#55B4D4' , '#6C7680' , 74  , 66  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:I3 = [ '#6C7680' , '#FAFAFA' , 66  , 231 ] " guifg guibg ctermfg ctermbg$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:V1 = [ '#6C7680' , '#FA8D3E' , 66  , 209 ] " guifg guibg ctermfg ctermbg$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:V2 = [ '#FA8D3E' , '#6C7680' , 209 , 66  ] " guifg guibg ctermfg ctermbg$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:V3 = [ '#6C7680' , '#FAFAFA' , 66  , 231 ] " guifg guibg ctermfg ctermbg$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:RE = [ '#6C7680' , '#F51818' , 66  , 196 ] " guifg guibg ctermfg ctermbg$/;"	v
g:airline#themes#ayu_light#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette = {}$/;"	v
g:airline#themes#ayu_light#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ayu_light#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ayu_light#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.insert_replace = {$/;"	v
g:airline#themes#ayu_light#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ayu_light#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.replace = copy(g:airline#themes#ayu_light#palette.normal)$/;"	v
g:airline#themes#ayu_light#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let s:IA = [ s:N1[1] , s:N3[1] , s:N1[3] , s:N3[3] , '' ]$/;"	v
g:airline#themes#ayu_light#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_light.vim	/^let g:airline#themes#ayu_light#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16_vim#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^let g:airline#themes#base16_vim#palette = {}$/;"	v
airline#themes#base16_vim#refresh	plugged/vim-airline-themes/autoload/airline/themes/base16_vim.vim	/^function! airline#themes#base16_vim#refresh()$/;"	f
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui01 = "#404040"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui02 = "#606060"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui03 = "#808080"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui04 = "#c0c0c0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui05 = "#d0d0d0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui08 = "#ff0000"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui09 = "#ff9900"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0A = "#ff0099"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0B = "#33ff00"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0C = "#00ffff"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0D = "#0066ff"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0E = "#cc00ff"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0F = "#3300ff"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm01 = 237$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm02 = 241$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm03 = 244$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm04 = 250$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm05 = 252$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm06 = 253$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm08 = 9$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm09 = 208$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0A = 198$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0B = 82$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0C = 14$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0D = 27$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0E = 165$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0F = 57$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui00 = "#1b2b34"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui01 = "#343d46"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui06 = "#cdd3de"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui07 = "#d8dee9"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui08 = "#ec5f67"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0A = "#fac863"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0B = "#99c794"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0C = "#5fb3b3"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0D = "#6699cc"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0E = "#c594c5"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm00 = 00$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm03 = 08$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm05 = 07$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm08 = 01$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0A = 03$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0B = 02$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0C = 06$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0D = 04$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0E = 05$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm01 = 18$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm02 = 19$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm04 = 20$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm06 = 21$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm09 = 16$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm0F = 17$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm01 = 10$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm02 = 11$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm04 = 12$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm06 = 13$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm09 = 09$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm0F = 14$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:lighthaus_vim_v	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lighthaus_vim_v='1.0.2'$/;"	v
s:lh_gui1	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui1='#21252D'$/;"	v
s:lh_gui2	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui2='#00BFA4'$/;"	v
s:lh_gui3	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui3='#FFFADE'$/;"	v
s:lh_gui4	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui4='#090B26'$/;"	v
s:lh_gui5	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui5='#50C16E'$/;"	v
s:lh_gui6	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui6='#ED722E'$/;"	v
s:lh_gui7	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui7='#FF5050'$/;"	v
s:lh_gui8	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui8='#CCCCCC'$/;"	v
s:lh_gui9	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui9='#FC2929'$/;"	v
s:lh_gui10	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui10='#D68EB2'$/;"	v
s:lh_gui11	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui11='#E25600'$/;"	v
s:lh_gui12	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui12='#FF4D00'$/;"	v
s:lh_gui13	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_gui13='#FFFF00'$/;"	v
s:lh_cterm1	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm1='234'$/;"	v
s:lh_cterm2	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm2='43'$/;"	v
s:lh_cterm3	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm3='230'$/;"	v
s:lh_cterm4	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm4='233'$/;"	v
s:lh_cterm5	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm5='71'$/;"	v
s:lh_cterm6	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm6='208'$/;"	v
s:lh_cterm7	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm7='203'$/;"	v
s:lh_cterm8	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm8='188'$/;"	v
s:lh_cterm9	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm9='196'$/;"	v
s:lh_cterm10	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm10='175'$/;"	v
s:lh_cterm11	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm11='166'$/;"	v
s:lh_cterm12	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm12='202'$/;"	v
s:lh_cterm13	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:lh_cterm13='226'$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:N1 = [ s:lh_gui1 , s:lh_gui2 , s:lh_cterm1, s:lh_cterm2 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:N2 = [ s:lh_gui3 , s:lh_gui4 , s:lh_cterm3, s:lh_cterm4 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:N3 = [ s:lh_gui2 , s:lh_gui1 , s:lh_cterm2, s:lh_cterm1 ]$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:I1 = [ s:lh_gui1 , s:lh_gui5 , s:lh_cterm1, s:lh_cterm5 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:I2 = [ s:lh_gui3 , s:lh_gui4 , s:lh_cterm3, s:lh_cterm4 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:I3 = [ s:lh_gui5 , s:lh_gui1 , s:lh_cterm5, s:lh_cterm1 ]$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:V1 = [ s:lh_gui1 , s:lh_gui6 , s:lh_cterm1, s:lh_cterm6 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:V2 = [ s:lh_gui3 , s:lh_gui4 , s:lh_cterm3, s:lh_cterm4 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:V3 = [ s:lh_gui6 , s:lh_gui1 , s:lh_cterm6, s:lh_cterm1 ]$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:R1 = [ s:lh_gui1 , s:lh_gui7 , s:lh_cterm1, s:lh_cterm7 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:R2 = [ s:lh_gui3 , s:lh_gui4 , s:lh_cterm3, s:lh_cterm4 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:R3 = [ s:lh_gui7 , s:lh_gui1 , s:lh_cterm7, s:lh_cterm1 ]$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:IN1 = [ s:lh_gui8 , s:lh_gui1 , s:lh_cterm8, s:lh_cterm1 ]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:IN2 = [ s:lh_gui8 , s:lh_gui1 , s:lh_cterm8, s:lh_cterm1 ]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:IN3 = [ s:lh_gui8 , s:lh_gui1 , s:lh_cterm8, s:lh_cterm1 ]$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.accents = {$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.normal_modified = {$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.insert_modified = {$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.visual_modified = {$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.replace_modified = {$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.normal_error = {$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.insert_error = {$/;"	v
g:airline_symbols	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline_symbols.paste = 'P'$/;"	v
g:airline_symbols	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline_symbols.spell = 'S'$/;"	v
g:airline_section_z	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline_section_z = airline#section#create(['%1p%% — ',$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:CP1 = [ s:lh_gui1 , s:lh_gui7 , s:lh_cterm1, s:lh_cterm7 ]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:CP2 = [ s:lh_gui1 , s:lh_gui2 , s:lh_cterm1, s:lh_cterm2 ]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let s:CP3 = [ s:lh_gui1 , s:lh_gui5 , s:lh_cterm1, s:lh_cterm5 ]$/;"	v
g:airline#themes#lighthaus#palette	plugged/vim-airline-themes/autoload/airline/themes/lighthaus.vim	/^let g:airline#themes#lighthaus#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP2, s:CP3)$/;"	v
g:airline#themes#dark_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let g:airline#themes#dark_minimal#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let s:N1   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let s:N2   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let s:N3   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
g:airline#themes#dark_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let g:airline#themes#dark_minimal#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#dark_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let g:airline#themes#dark_minimal#palette.accents = {$/;"	v
pal	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let pal = g:airline#themes#dark_minimal#palette$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette = {}$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.accents = {$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:N1 = [ '#343434' , '#a0a0a0' , 237 , 248 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:N2 = [ '#343434' , '#b3b3b3' , 237 , 250 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:N3 = [ '#343434' , '#c7c7c7' , 237 , 252 ]$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:I1 = [ '#eeeeee' , '#09643f' , 255 , 30  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:I2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:I3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified = {$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_paste = {$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace = copy(g:airline#themes#sol#palette.insert)$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_a = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_z = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified = g:airline#themes#sol#palette.insert_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:V1 = [ '#ffff9a' , '#ff6003' , 222 , 202 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:V2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:V3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified = {$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:IA = [ '#777777' , '#c7c7c7' , 244 , 251 , '' ]$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive_modified = {$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.tabline = {$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:WI = [ '#eeeeee', '#e33900', 255, 166 ]$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal.airline_warning = [$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N1 = [ '#141413' , '#aeee00' , 232 , 154 ] " blackestgravel & lime$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N2 = [ '#f4cf86' , '#45413b' , 222 , 238 ] " dirtyblonde    & deepgravel$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N3 = [ '#8cffba' , '#242321' , 121 , 235 ] " saltwatertaffy & darkgravel$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N4 = [ '#666462' , 241 ]                   " mediumgravel$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:I1 = [ '#141413' , '#0a9dff' , 232 , 39  ] " blackestgravel & tardis$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:I2 = [ '#f4cf86' , '#005fff' , 222 , 27  ] " dirtyblonde    & facebook$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:I3 = [ '#0a9dff' , '#242321' , 39  , 235 ] " tardis         & darkgravel$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V1 = [ '#141413' , '#ffa724' , 232 , 214 ] " blackestgravel & orange$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V2 = [ '#000000' , '#fade3e' , 16  , 221 ] " coal           & dalespale$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V3 = [ '#000000' , '#b88853' , 16  , 137 ] " coal           & toffee$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V4 = [ '#c7915b' , 173 ]                   " coffee$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:PA = [ '#f4cf86' , 222 ]                   " dirtyblonde$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:RE = [ '#ff9eb8' , 211 ]                   " dress$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:IA = [ s:N3[1] , s:N2[1] , s:N3[3] , s:N2[3] , '' ]$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette = {}$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.accents = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal_modified = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_modified = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_paste = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace = copy(airline#themes#badwolf#palette.insert)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace_modified = g:airline#themes#badwolf#palette.insert_modified$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual_modified = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive_modified = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.terminal = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal_modified.airline_term = s:N3$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.terminal.airline_term = s:I3$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual_modified.airline_term = s:V2$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui00 = "#20201d"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui01 = "#292824"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui02 = "#6e6b5e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui03 = "#7d7a68"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui04 = "#999580"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui05 = "#a6a28c"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui06 = "#e8e4cf"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui07 = "#fefbec"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui08 = "#d73737"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui09 = "#b65611"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0A = "#cfb017"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0B = "#60ac39"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0C = "#1fad83"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0D = "#6684e1"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0E = "#b854d4"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0F = "#d43552"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm01 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm03 = 101$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm05 = 144$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm08 = 167$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm09 = 182$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0C = 36$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0A = 178$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0F = 167$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
s:WARNING	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:WARNING = [ s:gui01, s:gui0A, s:cterm0C, s:cterm06 ]$/;"	v
s:ERROR	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:ERROR = [ s:gui07, s:gui08, s:cterm07, s:cterm08 ]$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.normal.airline_warning = s:WARNING$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.insert.airline_warning = s:WARNING$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.visual.airline_warning = s:WARNING$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.replace.airline_warning = s:WARNING$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.normal.airline_error = s:ERROR$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.insert.airline_error = s:ERROR$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.visual.airline_error = s:ERROR$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.replace.airline_error = s:ERROR$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette = {}$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.accents = {$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:N1 = [ '#585858' , '#e4e4e4' , 240 , 254 ] " Mode$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:N2 = [ '#e4e4e4' , '#0087af' , 254 , 31  ] " Info$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:N3 = [ '#eeeeee' , '#005f87' , 255 , 24  ] " StatusLine$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:I1 = [ '#585858' , '#e4e4e4' , 240 , 254 ] " Mode$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:I2 = [ '#e4e4e4' , '#0087af' , 254 , 31  ] " Info$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:I3 = [ '#eeeeee' , '#005f87' , 255 , 24  ] " StatusLine$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.insert_modified = {$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.replace = copy(g:airline#themes#papercolor#palette.insert)$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.replace.airline_a = [ '#d7005f'   , '#e4e4e4' , 161 , 254, ''     ]$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.replace_modified = {$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:V1 = [ '#005f87', '#e4e4e4', 24,  254 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:V2 = [ '',        '#0087af', '',  31  ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:V3 = [ '#e4e4e4', '#005f87', 254, 24  ]$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.visual_modified = {$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:IA = [ '#585858' , '#e4e4e4' , 240 , 254 , '' ]$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.inactive.airline_c = s:N2$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.inactive_modified = {$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:theme	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:theme = 'minimalist'$/;"	v
s:want_showmod	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:want_showmod = get(g:, 'airline_minimalist_showmod', 0)$/;"	v
airline#themes#	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^function! airline#themes#{s:theme}#refresh()$/;"	f
s:gray	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:gray    = [245, '#8a8a8a']$/;"	v
s:golden	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:golden  = [143, '#afaf5f']$/;"	v
s:pink	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:pink    = [131, '#af5f5f']$/;"	v
s:blue	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:blue    = [ 67, '#5f87af']$/;"	v
s:orange	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:orange  = [166, '#d75f00']$/;"	v
s:outerfg	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:outerfg = [ 16, '#000000']$/;"	v
s:innerbg	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:innerbg = [234, '#1c1c1c']$/;"	v
s:middle	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:middle  = ['#bcbcbc', '#444444', 250, 238]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:N1 = [s:outerfg[1], s:gray[1], s:outerfg[0], s:gray[0]]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:N3 = [s:gray[1], s:innerbg[1], s:gray[0], s:innerbg[0]]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:I1 = [s:outerfg[1], s:golden[1], s:outerfg[0], s:golden[0]]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:I3 = [s:golden[1], s:innerbg[1], s:golden[0], s:innerbg[0]]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:V1 = [s:outerfg[1], s:pink[1], s:outerfg[0], s:pink[0]]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:V3 = [s:pink[1], s:innerbg[1], s:pink[0], s:innerbg[0]]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:R1 = [s:outerfg[1], s:blue[1], s:outerfg[0], s:blue[0]]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:R3 = [s:blue[1], s:innerbg[1], s:blue[0], s:innerbg[0]]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:IA = [s:middle[1], s:innerbg[1], s:middle[3], s:innerbg[0]]$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette = {}$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.accents = {$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.inactive = {$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.normal = airline#themes#generate_color_map(s:N1, s:middle, s:N3)$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.normal_modified = {$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.insert = airline#themes#generate_color_map(s:I1, s:middle, s:I3)$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.insert_modified = {}$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.replace = airline#themes#generate_color_map(s:R1, s:middle, s:R3)$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.replace_modified = {}$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.visual = airline#themes#generate_color_map(s:V1, s:middle, s:V3)$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.visual_modified = {}$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette = {}$/;"	v
s:RED	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:RED    = '#EA4335'$/;"	v
s:GREEN	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:GREEN  = '#34A853'$/;"	v
s:YELLOW	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:YELLOW = '#FBBC05'$/;"	v
s:BLUE	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:BLUE   = '#4285F4'$/;"	v
s:BLACK	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:BLACK  = '#000000'$/;"	v
s:DGREY	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:DGREY  = '#656565'$/;"	v
s:LGREY	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:LGREY  = '#EEEEEE'$/;"	v
s:WHITE	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:WHITE  = '#FFFFFF'$/;"	v
s:TERM_RED	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_RED    = 167$/;"	v
s:TERM_GREEN	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_GREEN  = 71$/;"	v
s:TERM_YELLOW	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_YELLOW = 220$/;"	v
s:TERM_BLUE	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_BLUE   = 69$/;"	v
s:TERM_BLACK	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_BLACK  = 16$/;"	v
s:TERM_DGREY	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_DGREY  = 241$/;"	v
s:TERM_LGREY	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_LGREY  = 255$/;"	v
s:TERM_WHITE	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_WHITE  = 231$/;"	v
s:GREY0	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:GREY0  = s:WHITE$/;"	v
s:GREY1	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:GREY1  = s:LGREY$/;"	v
s:GREY2	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:GREY2  = s:DGREY$/;"	v
s:BG	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:BG     = s:BLACK$/;"	v
s:TERM_GREY0	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_GREY0  = s:TERM_WHITE$/;"	v
s:TERM_GREY1	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_GREY1  = s:TERM_LGREY$/;"	v
s:TERM_GREY2	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_GREY2  = s:TERM_DGREY$/;"	v
s:TERM_BG	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:TERM_BG     = s:TERM_BLACK$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:N1 = [ s:BG, s:GREEN, s:TERM_BG, s:TERM_GREEN ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:N2 = [ s:GREY1, s:GREY2, s:TERM_GREY1, s:TERM_GREY2 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:N3 = [ s:GREEN, s:BG, s:TERM_GREEN, s:TERM_BG ]$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:I1 = [ s:BG, s:BLUE, s:TERM_BG, s:TERM_BLUE ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:I2 = s:N2$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:I3 = [ s:BLUE, s:BG, s:TERM_BLUE, s:TERM_BG ]$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.insert_modified = g:airline#themes#google_dark#palette.normal_modified$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:R1 = [ s:BG, s:RED, s:TERM_BG, s:TERM_RED ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:R2 = s:N2$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:R3 = [ s:RED, s:BG, s:TERM_RED, s:TERM_BG ]$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.replace_modified = g:airline#themes#google_dark#palette.normal_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:V1 = [ s:BG, s:YELLOW, s:TERM_BG, s:TERM_YELLOW ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:V2 = s:N2$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:V3 = [ s:YELLOW, s:BG, s:TERM_YELLOW, s:TERM_BG ]$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.visual_modified = g:airline#themes#google_dark#palette.normal_modified$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:IA1 = [ s:BG, s:GREY2, s:TERM_BG, s:TERM_GREY2 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:IA2 = s:N2$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let s:IA3 = [ s:GREY2, s:BG, s:TERM_GREY2, s:TERM_BG ]$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#google_dark#palette	plugged/vim-airline-themes/autoload/airline/themes/google_dark.vim	/^let g:airline#themes#google_dark#palette.inactive_modified = g:airline#themes#google_dark#palette.normal_modified$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui00 = "#1e1e1e"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui01 = "#323537"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui02 = "#464b50"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui03 = "#5f5a60"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui04 = "#838184"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui05 = "#a7a7a7"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui06 = "#c3c3c3"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui08 = "#cf6a4c"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui09 = "#cda869"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0A = "#f9ee98"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0B = "#8f9d6a"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0C = "#afc4db"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0D = "#7587a6"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0E = "#9b859d"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0F = "#9b703f"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm00 = 234$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm01 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm03 = 59$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm05 = 248$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm06 = 251$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm08 = 167$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm09 = 179$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0A = 228$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0B = 107$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0C = 152$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0D = 103$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0E = 103$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0F = 95$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui00 = "#28211c"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui01 = "#36312e"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui02 = "#5e5d5c"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui03 = "#666666"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui04 = "#797977"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui05 = "#8a8986"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui06 = "#9d9b97"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui07 = "#baae9e"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui08 = "#cf6a4c"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui09 = "#cf7d34"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0A = "#f9ee98"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0B = "#54be0d"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0C = "#afc4db"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0D = "#5ea6ea"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0E = "#9b859d"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0F = "#937121"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm01 = 58$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm03 = 241$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm05 = 102$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm06 = 138$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm07 = 145$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm08 = 167$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm09 = 173$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0A = 228$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0B = 70$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0C = 152$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0D = 74$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0E = 103$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0F = 94$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N1 = [ '#081c8c' , '#f8f6f2','18','15']$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N2 = [ '#1693a5' , '#f8f6f2','62','15']$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N3 = [ '#90a680' , '#2e2d2a' , 64, 235 ]$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N4 = [ '#081c8c' , 18 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I1 = [ '#f8f6f2', '#ab3e5b','15','161']$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I2 = [ '#242321', '#ab3e5b','235','161']$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I3 = [ '#1693a5', '#f8f6f2', '62', '15']$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I4 = [ '#1693a5' , 62 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V1 = [ '#005f00', '#f8f6f2','22','15']$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V2 = [ '#f8f6f2', '#005f00','15','22']$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V3 = [ '#594512', '#f8f6f2','64','15']$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V4 = [ '#594512' , 64 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:R1 = [ '#90a680' , '#f8f6f2','66','15']$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:R2 = [ '#90a680' , '#242321','66','235']$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:R3 = [ '#f8f6f2' , '#90a680','15','66']$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:R4 = [ '#90a680' , 66 ]$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:PA = [ '#ab3e5d' , 161 ]$/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:IM = [ '#242321' , 235 ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:IA = [ s:N2[1], s:N3[1], s:N2[3], s:N3[3], '' ]	$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette = {}$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.accents = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal_modified = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_modified = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual_modified = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace_modified = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_paste = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive_modified = {$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui00 = "#2e3440"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui01 = "#3b4252"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui02 = "#434c5e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui03 = "#4c566a"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui04 = "#d8dee9"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui05 = "#e5e9f0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui06 = "#eceff4"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui07 = "#8fbcbb"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui08 = "#88c0d0"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui09 = "#81a1c1"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0A = "#5e81ac"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0B = "#bf616a"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0C = "#d08770"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0D = "#ebcb8b"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0E = "#a3be8c"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0F = "#b48ead"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm01 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm03 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm04 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm05 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm06 = 253$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm08 = 166$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm09 = 203$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0A = 214$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0C = 12$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0F = 12$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui00 = "#1d2021"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui01 = "#3c3836"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui02 = "#504945"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui03 = "#665c54"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui04 = "#bdae93"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui05 = "#d5c4a1"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui06 = "#ebdbb2"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui07 = "#fbf1c7"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui08 = "#fb4934"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui09 = "#fe8019"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0A = "#fabd2f"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0B = "#b8bb26"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0C = "#8ec07c"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0D = "#83a598"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0E = "#d3869b"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:gui0F = "#d65d0e"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm00 = 234$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm01 = 235$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm02 = 236$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm03 = 240$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm04 = 143$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm05 = 187$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm06 = 223$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm07 = 230$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm08 = 203$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm09 = 208$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0A = 214$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0B = 142$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0C = 108$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0D = 108$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0E = 175$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:cterm0F = 166$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.terminal = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.normal.airline_term = s:N3$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.terminal.airline_term = s:N3$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.visual.airline_term = s:N3$/;"	v
g:airline#themes#base16_gruvbox_dark_hard#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_gruvbox_dark_hard.vim	/^let g:airline#themes#base16_gruvbox_dark_hard#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui00 = "#201602"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui01 = "#302e00"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui02 = "#5f5b17"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui03 = "#6c6823"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui04 = "#86813b"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui05 = "#948e48"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui06 = "#ccc37a"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui07 = "#faf0a5"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui08 = "#c35359"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui09 = "#b36144"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0A = "#a88339"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0B = "#18974e"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0C = "#75a738"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0D = "#477ca1"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0E = "#8868b3"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0F = "#b3588e"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm01 = 52$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm02 = 58$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm03 = 58$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm04 = 101$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm05 = 101$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm06 = 180$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm07 = 229$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm08 = 131$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm09 = 131$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0A = 137$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0C = 107$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0D = 67$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0F = 132$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:dark_gray	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:dark_gray       = ['#303030', 236]$/;"	v
s:med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:med_gray_hi     = ['#444444', 238]$/;"	v
s:med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:med_gray_lo     = ['#3a3a3a', 237]$/;"	v
s:light_gray	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:light_gray      = ['#b2b2b2', 249]$/;"	v
s:pretty_pink	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:pretty_pink     = ['#f29db4', 217]$/;"	v
s:banana_smoothie	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:banana_smoothie = ['#fce78d', 222]$/;"	v
s:faded_red	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:faded_red       = ['#f97070', 203]$/;"	v
s:icy_sky	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:icy_sky         = ['#79e5e0', 116]$/;"	v
s:orangarine	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:orangarine      = ['#e8a15a', 179]$/;"	v
gen_def	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^fun! s:gen_def(fg, bg)$/;"	f
s:bar_main	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:bar_main = s:gen_def(s:light_gray, s:med_gray_lo) + ['']$/;"	v
g:airline#themes#fruit_punch#palette	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette = {}$/;"	v
s:airline_a_normal	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_a_normal = s:gen_def(s:dark_gray, s:pretty_pink)$/;"	v
s:airline_c_normal	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_c_normal = s:gen_def(s:pretty_pink, s:med_gray_hi)$/;"	v
g:airline#themes#fruit_punch#palette	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette.normal =$/;"	v
s:airline_a_insert	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_a_insert = s:gen_def(s:dark_gray, s:banana_smoothie)$/;"	v
s:airline_c_insert	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_c_insert = s:gen_def(s:banana_smoothie, s:med_gray_hi)$/;"	v
g:airline#themes#fruit_punch#palette	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette.insert =$/;"	v
s:airline_a_visual	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_a_visual = s:gen_def(s:dark_gray, s:icy_sky)$/;"	v
s:airline_c_visual	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_c_visual = s:gen_def(s:icy_sky, s:med_gray_hi)$/;"	v
g:airline#themes#fruit_punch#palette	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette.visual =$/;"	v
s:airline_a_replace	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_a_replace = s:gen_def(s:dark_gray, s:faded_red)$/;"	v
s:airline_c_replace	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_c_replace = s:gen_def(s:faded_red, s:med_gray_hi)$/;"	v
g:airline#themes#fruit_punch#palette	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette.replace =$/;"	v
s:airline_inactive	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:airline_inactive = s:gen_def(s:light_gray, s:med_gray_hi)$/;"	v
g:airline#themes#fruit_punch#palette	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let g:airline#themes#fruit_punch#palette.inactive =$/;"	v
s:tmp	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:tmp = {'normal_modified': {}, 'insert_modified': {}$/;"	v
s:tmp	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^  let s:tmp[mode]['airline_c'] = s:airline_c_insert$/;"	v
s:warning	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^let s:warning = s:gen_def(s:dark_gray, s:orangarine)$/;"	v
g:airline#themes#fruit_punch#palette	plugged/vim-airline-themes/autoload/airline/themes/fruit_punch.vim	/^  let g:airline#themes#fruit_punch#palette[mode]['airline_warning'] = s:warning$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui00 = "#2b2b2b"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui01 = "#272935"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui02 = "#3a4055"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui03 = "#5a647e"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui04 = "#d4cfc9"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui05 = "#e6e1dc"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui06 = "#f4f1ed"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui07 = "#f9f7f3"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui08 = "#da4939"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui09 = "#cc7833"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0A = "#ffc66d"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0B = "#a5c261"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0C = "#519f50"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0D = "#6d9cbe"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0E = "#b6b3eb"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0F = "#bc9458"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm00 = 235$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm01 = 17$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm03 = 60$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm04 = 188$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm05 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm06 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm08 = 167$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm09 = 173$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0A = 221$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0C = 71$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0D = 73$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0E = 146$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0F = 137$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N1 = [ '#f0f0f0' , '#86CD74' , 15,  2 ] " mode$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N2 = [ '#86CD74' , '#deded9' ,  2,  8 ] " info$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N3 = [ '#86CD74' , '#888a85' ,  2, 15 ] " statusline$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N4 = [ '#CAE682' , '#141413' , 10,  0 ] " mode modified$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I1 = [ '#f0f0f0' , '#FADE3E' , 15,  3 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I2 = [ '#FADE3E' , '#deded9' ,  3,  8 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I3 = [ '#FADE3E' , '#888a85' ,  3, 15 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I4 = [ '#FDE76E' , '#141413' , 11,  0 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V1 = [ '#f0f0f0' , '#7CB0E6' , 15,  4 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V2 = [ '#7CB0E6' , '#deded9' ,  4,  8 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V3 = [ '#7CB0E6' , '#888a85' ,  4, 15 ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V4 = [ '#B5D3F3' , '#141413' , 12,  0 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R1 = [ '#f0f0f0' , '#E55345' , 15,  1 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R2 = [ '#E55345' , '#deded9' ,  1,  8 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R3 = [ '#E55345' , '#888a85' ,  1, 15 ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R4 = [ '#E5786D' , '#141413' ,  9,  0 ]$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:PA = [ '#94E42C' , 6 ]$/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:IM = [ '#40403C' , 7 ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette = {}$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.accents = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.normal_modified = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.insert_modified = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.visual_modified = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.replace_modified = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.insert_paste = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.inactive_modified = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui00 = "#161b1d"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui01 = "#1f292e"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui02 = "#516d7b"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui03 = "#5a7b8c"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui04 = "#7195a8"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui05 = "#7ea2b4"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui06 = "#c1e4f6"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui07 = "#ebf8ff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui08 = "#d22d72"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui09 = "#935c25"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0A = "#8a8a0f"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0B = "#568c3b"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0C = "#2d8f6f"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0D = "#257fad"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0E = "#5d5db1"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0F = "#b72dd2"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm01 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm02 = 60$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm03 = 66$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm04 = 67$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm05 = 109$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm06 = 153$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm07 = 195$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm08 = 161$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm09 = 94$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0A = 100$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0B = 65$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0C = 29$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0D = 31$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0E = 61$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0F = 5$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:guiShadow	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiShadow      = "#3b3a32" " shadow$/;"	v
s:guiDarkGray	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiDarkGray    = "#49483e" " dark gray$/;"	v
s:guiBgPurple	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiBgPurple    = "#8076aa" " background purple$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGray        = "#49483e" " gray$/;"	v
s:guiViolet	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiViolet      = "#63588d" " violet$/;"	v
s:guiDustyLilac	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiDustyLilac  = "#efe6ff" "dusty-lilac$/;"	v
s:guiSeafoam	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiSeafoam     = "#c2ffdf" "seafoam$/;"	v
s:guiSilver	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiSilver      = "#f8f8f0" "silver$/;"	v
s:guiFuschia	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiFuschia     = "#f92672" "fuschia$/;"	v
s:guiPeach	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiPeach       = "#ff857f" "peach$/;"	v
s:guiGold	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGold        = "#e6c000" "gold$/;"	v
s:guiDarkSeafoam	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiDarkSeafoam = "#80ffbd" "dark-seafoam$/;"	v
s:guiLilac	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiLilac       = "#c5a3ff" "lilac$/;"	v
s:guiLavender	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiLavender    = "#ae81ff" "lavender$/;"	v
s:guiRose	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiRose        = "#ffb8d1" "rose$/;"	v
s:guiGoldenrod	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGoldenrod   = "#fffea0" "goldenrod$/;"	v
s:ctermShadow	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermShadow      = "233"$/;"	v
s:ctermDarkGray	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermDarkGray    = "235"$/;"	v
s:ctermBgPurple	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermBgPurple    = "59"$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm03          = "66"$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm04          = "145"$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm05          = "152"$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm06          = "188"$/;"	v
s:ctermSilver	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermSilver      = "189"$/;"	v
s:ctermFuschia	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermFuschia     = "88"$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm09          = "209"$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0A          = "221"$/;"	v
s:ctermDarkSeafoam	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermDarkSeafoam = "22"$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0C          = "73"$/;"	v
s:ctermLavender	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermLavender    = "25"$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0E          = "176"$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0F          = "137"$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiWhite = "#f8f8f0"$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGray = "#8076aa"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermGray	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermGray = "243"$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette = {}$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:modified = { 'airline_c': [ s:guiRose, '', 215, '', '' ] }$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:N1 = [ s:guiSilver , s:guiLavender , s:ctermSilver , s:ctermLavender  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:N2 = [ s:guiWhite , s:guiDarkGray , s:ctermWhite , s:ctermDarkGray  ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:N3 = [ s:guiShadow , s:guiLavender , s:ctermBgPurple , s:ctermShadow  ]$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.normal_modified = s:modified$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:I1 = [ s:guiDarkGray , s:guiDarkSeafoam , s:ctermWhite , s:ctermDarkSeafoam  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:I2 = s:N2$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:I3 = [ s:guiWhite , s:guiDarkGray , s:ctermWhite , s:ctermShadow  ]$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.insert_modified = s:modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:V1 = [ s:guiWhite , s:guiFuschia , s:ctermWhite , s:ctermFuschia ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:V2 = s:N2$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:V3 = s:I3$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.visual_modified = s:modified$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:R1 = [ s:guiFuschia , s:guiDarkGray , s:ctermFuschia, s:ctermShadow ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:R2 = s:N2$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:R3 = s:I3$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.replace_modified = s:modified$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:IN1 = [ s:guiGray , s:guiDarkGray , s:ctermGray , s:ctermDarkGray ]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:IN2 = [ s:guiBgPurple , s:guiShadow , s:ctermBgPurple , s:ctermShadow ]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:IN3 = [ s:guiBgPurple , s:guiShadow , s:ctermBgPurple , s:ctermShadow ]$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.inactive_modified = s:modified$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:CP1 = [ s:guiWhite , s:guiDarkGray , s:ctermWhite , s:ctermDarkGray  ]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:CP2 = [ s:guiWhite , s:guiGray , s:ctermWhite , s:ctermDarkGray  ]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:CP3 = [ s:guiWhite , s:guiLavender , s:ctermWhite , s:ctermLavender  ]$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP2, s:CP3)$/;"	v
g:airline#themes#solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^let g:airline#themes#solarized#palette = {}$/;"	v
airline#themes#solarized#refresh	plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^function! airline#themes#solarized#refresh()$/;"	f
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui00 = "#031A16"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui01 = "#0B342D"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui02 = "#184E45"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui03 = "#2B685E"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui04 = "#5F9C92"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui05 = "#81B5AC"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui06 = "#A7CEC8"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui07 = "#D2E7E4"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui08 = "#3E9688"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui09 = "#3E7996"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0A = "#3E4C96"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0B = "#883E96"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0C = "#963E4C"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0D = "#96883E"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0E = "#4C963E"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0F = "#3E965B"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm01 = 22$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm02 = 23$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm03 = 23$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm04 = 72$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm05 = 109$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm06 = 152$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm07 = 188$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm08 = 66$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm09 = 66$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0A = 60$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0B = 96$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0C = 95$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0D = 101$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0E = 65$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0F = 65$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:gray	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:gray     = [245, '#3f4b59']$/;"	v
s:darkgray	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:darkgray = [245, '#1d1f21']$/;"	v
s:golden	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:golden   = [143, '#BBE67E']$/;"	v
s:pink	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:pink     = [131, '#F07178']$/;"	v
s:blue	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:blue     = [ 67, '#D4BFFF']$/;"	v
s:orange	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:orange   = [166, '#ffae57']$/;"	v
s:outerfg	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:outerfg  = [ 16, '#8d96a1']$/;"	v
s:outerfgi	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:outerfgi = [ 16, '#2f3d4d']$/;"	v
s:outerbg	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:outerbg  = [ 16, 'NONE']$/;"	v
s:innerbg	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:innerbg  = [234, 'NONE']$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:N1 = [s:outerfg[1], s:outerbg[1], s:outerfg[0], s:gray[0]]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:N3 = [s:gray[1]   , s:innerbg[1], s:gray[0]   , s:innerbg[0]]$/;"	v
s:NM1	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:NM1 = [s:darkgray[1], s:orange[1], s:darkgray[0], s:orange[0]]$/;"	v
s:NM3	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:NM3 = [s:orange[1]  , s:outerbg[1], s:orange[0], s:darkgray[0]]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:I1 = [s:darkgray[1], s:golden[1], s:outerfg[0], s:golden[0]]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:I3 = [s:golden[1]  , s:innerbg[1], s:golden[0], s:innerbg[0]]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:V1 = [s:darkgray[1], s:pink[1], s:outerfg[0], s:pink[0]]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:V3 = [s:pink[1]    , s:innerbg[1], s:pink[0], s:innerbg[0]]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:R1 = [s:darkgray[1], s:blue[1], s:outerfg[0], s:blue[0]]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:R3 = [s:blue[1], s:innerbg[1], s:blue[0], s:innerbg[0]]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:IA = [s:darkgray[1], s:outerbg[1], s:innerbg[0], s:innerbg[0]]$/;"	v
s:IAc	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let s:IAc = [s:gray[1], s:outerbg[1], s:outerbg[0], s:outerbg[0]]$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette = {}$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.accents = {$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.inactive = {$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.inactive_modified = {$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal = {$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal_modified = {$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert = {$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert_modified = {}$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace = {$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace_modified = {}$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual = {$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual_modified = {}$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal.airline_warning = s:NM1$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert.airline_warning =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual.airline_warning =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace.airline_warning =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal.airline_error = s:V1$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert.airline_error =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual.airline_error =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace.airline_error =$/;"	v
g:airline#themes#transparent#palette	plugged/vim-airline-themes/autoload/airline/themes/transparent.vim	/^let g:airline#themes#transparent#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui00 = "#0c0d0e"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui01 = "#2e2f30"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui02 = "#515253"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui03 = "#737475"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui04 = "#959697"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui05 = "#b7b8b9"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui06 = "#dadbdc"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui07 = "#fcfdfe"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui08 = "#e31a1c"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui09 = "#e6550d"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0A = "#dca060"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0B = "#31a354"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0C = "#80b1d3"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0D = "#3182bd"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0E = "#756bb1"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0F = "#b15928"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm01 = 17$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm03 = 66$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm05 = 145$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm08 = 1$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm09 = 166$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0A = 179$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0C = 110$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0D = 67$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0F = 130$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui01 = "#040404"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui02 = "#102015"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui03 = "#343434"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui04 = "#555555"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui05 = "#ababab"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui07 = "#f9f9f9"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui08 = "#e92f2f"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui09 = "#e09448"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0A = "#dddd13"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0B = "#0ed839"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0C = "#23edda"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0D = "#3b48e3"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0E = "#f996e2"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0F = "#69542d"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm01 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm02 = 0$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm03 = 236$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm04 = 240$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm05 = 248$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm06 = 253$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm08 = 1$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm09 = 173$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0B = 41$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0C = 50$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0E = 212$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0F = 58$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui00 = "#181818"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui01 = "#282828"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui02 = "#383838"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui03 = "#585858"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui04 = "#b8b8b8"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui05 = "#d8d8d8"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui06 = "#e8e8e8"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui07 = "#f8f8f8"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui08 = "#ab4642"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui09 = "#dc9656"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0A = "#f7ca88"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0B = "#a1b56c"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0C = "#86c1b9"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0D = "#7cafc2"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0E = "#ba8baf"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0F = "#a16946"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm00 = 233$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm01 = 235$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm02 = 237$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm03 = 240$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm04 = 249$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm05 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm06 = 254$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm08 = 131$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm09 = 173$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0A = 222$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0C = 109$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0D = 109$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0E = 139$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0F = 131$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:N2 = [ '#93a1a1' , '#586e75' , 245 , 240 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:N3 = [ '#93a1a1' , '#073642' , 240 , 233 ]$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#durant#normal_modified	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:I2 = [ '#9e9e9e' , '#303030' , 247 , 236 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ]$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert_modified = {$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert_paste = {$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace = copy(g:airline#themes#durant#palette.insert)$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace.airline_a = [ s:I2[0]   , '#af0000' , s:I2[2] , 124     , ''     ]$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace_modified = g:airline#themes#durant#palette.insert_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:V1 = [ '#1a1a18' , '#ffffff' , 232 , 255 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:V2 = [ '#ffffff' , '#44403a' , 255, 238 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:V3 = [ '#90a680' , '#2e2d2a' , 64, 235 ]$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.visual_modified = {$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.inactive_modified = {$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.accents = {$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^  let g:airline#themes#durant#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:N1 = [ '#3A3A3A' , '#C0D8F8' , 254 , 237 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:N2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:N3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:I1 = [ '#3A3A3A' , '#60F080' , 254 , 237 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:I2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:I3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:V1 = [ '#3A3A3A' , '#F0C0F0' , 254 , 237 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:V2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:V3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:R1 = [ '#3A3A3A' , '#D0D090' , 254 , 237 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:R2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:R3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:IA = [ '#666666' , '#262626' , 242 , 235 , '' ]$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette = {}$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal  = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert  = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual  = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:WI = [ '#1C1C1C' , '#E0C060' , 234 , 215 , '' ]$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal.airline_warning = [$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert.airline_warning  = g:airline#themes#peaksea#palette.normal.airline_warning$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual.airline_warning  = g:airline#themes#peaksea#palette.normal.airline_warning$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace.airline_warning = g:airline#themes#peaksea#palette.normal.airline_warning$/;"	v
s:ER	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:ER = [ '#1C1C1C' , '' , 234 , 167 , '' ]$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal.airline_error = [$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert.airline_error    = g:airline#themes#peaksea#palette.normal.airline_error$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual.airline_error    = g:airline#themes#peaksea#palette.normal.airline_error$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace.airline_error   = g:airline#themes#peaksea#palette.normal.airline_error$/;"	v
s:TE	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:TE = [ '#1C1C1C' , '#3A3A3A' , 254 , 237 , '' ]$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal.airline_term = [$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert.airline_term  = g:airline#themes#peaksea#palette.normal.airline_term$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual.airline_term  = g:airline#themes#peaksea#palette.normal.airline_term$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace.airline_term = g:airline#themes#peaksea#palette.normal.airline_term$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.accents = {$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^    let g:airline#themes#peaksea#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:gui_black	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_black = "#282C34"$/;"	v
s:cterm_black	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_black = 16$/;"	v
s:gui_purple	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_purple = "#C792EA"$/;"	v
s:cterm_purple	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_purple = 176$/;"	v
s:gui_purple_offset	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_purple_offset = "#9f74bb"$/;"	v
s:cterm_purple_offset	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_purple_offset = 139$/;"	v
s:gui_yellow	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_yellow = "#FFD787"$/;"	v
s:cterm_yellow	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_yellow = 222$/;"	v
s:gui_yellow_offset	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_yellow_offset = "#ccac6c"$/;"	v
s:cterm_yellow_offset	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_yellow_offset = 179$/;"	v
s:gui_blue	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_blue = "#81AAFF"$/;"	v
s:cterm_blue	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_blue = 111$/;"	v
s:gui_blue_offset	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_blue_offset = "#6788cc"$/;"	v
s:cterm_blue_offset	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_blue_offset = 68$/;"	v
s:gui_cyan	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_cyan = "#83DCC8"$/;"	v
s:cterm_cyan	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_cyan = 116$/;"	v
s:gui_cyan_offset	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_cyan_offset = "#68b0a0"$/;"	v
s:cterm_cyan_offset	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_cyan_offset = 73$/;"	v
s:gui_green	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_green = "#AFD75F"$/;"	v
s:cterm_green	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_green = 149$/;"	v
s:gui_green_offset	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_green_offset = "#8cac4c"$/;"	v
s:cterm_green_offset	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_green_offset = 107$/;"	v
s:gui_white	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:gui_white = "#FFFFFF"$/;"	v
s:cterm_white	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:cterm_white = 255$/;"	v
g:airline#themes#night_owl#palette	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:N1 = [ s:gui_black, s:gui_cyan, s:cterm_black, s:cterm_cyan ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:N2 = [ s:gui_black, s:gui_cyan_offset,  s:cterm_black, s:cterm_cyan_offset ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:N3 = [ s:gui_cyan, s:gui_black, s:cterm_cyan, s:cterm_black ]$/;"	v
g:airline#themes#night_owl#palette	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:I1 = [ s:gui_black, s:gui_green, s:cterm_black, s:cterm_green ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:I2 = [ s:gui_black, s:gui_green_offset, s:cterm_black, s:cterm_green_offset ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:I3 = [ s:gui_green, s:gui_black, s:cterm_green, s:cterm_black ]$/;"	v
g:airline#themes#night_owl#palette	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:V1 = [ s:gui_black, s:gui_blue, s:cterm_black, s:cterm_blue ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:V2 = [ s:gui_black, s:gui_blue_offset,  s:cterm_black, s:cterm_blue_offset ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:V3 = [ s:gui_blue, s:gui_black, s:cterm_blue, s:cterm_black ]$/;"	v
g:airline#themes#night_owl#palette	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:R1 = [ s:gui_black, s:gui_yellow, s:cterm_black, s:cterm_yellow ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:R2 = [ s:gui_black, s:gui_yellow_offset, s:cterm_black, s:cterm_yellow_offset ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:R3 = [ s:gui_yellow, s:gui_black, s:cterm_yellow, s:cterm_black ]$/;"	v
g:airline#themes#night_owl#palette	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:IA1 = [ s:gui_black, s:gui_purple, s:cterm_black, s:cterm_purple ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:IA2 = [ s:gui_purple, s:gui_black, s:cterm_purple, s:cterm_black ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let s:IA3 = [ s:gui_purple, s:gui_black, s:cterm_purple, s:cterm_black ]$/;"	v
g:airline#themes#night_owl#palette	plugged/vim-airline-themes/autoload/airline/themes/night_owl.vim	/^let g:airline#themes#night_owl#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:V1 = [ '#0087ff' , '#ffffff','33','231']$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:V2 = [ '#005faf' , '#5fafff','25','75']$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:V3 = [ '#87d7ff' , '#005faf','117','25']$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:R1 = [ '#d75fff' , '#ffffff','171','231']$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:R2 = [ '#5f005f' , '#d75fff','53','171']$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:R3 = [ '#ff87ff' , '#8700af','213','91']$/;"	v
g:airline#themes#kalisi#palette	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette = {}$/;"	v
airline#themes#kalisi#refresh	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^function! airline#themes#kalisi#refresh()$/;"	f
g:airline#themes#kalisi#palette	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette = {}$/;"	v
s:rac	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:rac = ['#D75F5F', 167] "  red accent fg$/;"	v
s:nfg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:nfg = ['#121212', 233] "      normal fg; for   a section$/;"	v
s:ifg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:ifg = s:nfg            "      insert fg; for   a section$/;"	v
s:rfg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:rfg = s:nfg            "     replace fg; for   a section$/;"	v
s:vfg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:vfg = s:nfg            "      visual fg; for a&z sections$/;"	v
s:cfg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:cfg = s:nfg            " commandline fg; for all sections$/;"	v
s:nbg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:nbg = ['#AFFFFF', 159] "      normal bg; for   a section$/;"	v
s:ibg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:ibg = ['#FFAFD7', 218] "      insert bg; for   a section$/;"	v
s:rbg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:rbg = ['#FF5F5F', 203] "     replace bg; for   a section$/;"	v
s:vbg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:vbg = ['#FFFFAF', 229] "      visual bg; for a&z sections$/;"	v
s:cbg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:cbg = ['#AFFFFF', 159] " commandline bg; for all sections$/;"	v
s:fg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:fg  = ['#6C6C6C', 242] "       other fg$/;"	v
s:bg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:bg  = ['#303030', 236] "       other bg$/;"	v
s:palt	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt = {$/;"	v
s:palt_m	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_m = {$/;"	v
s:palt	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt.airline_y[2] = s:bg[1]$/;"	v
s:palt	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt.airline_y[0] = s:bg[0]$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.normal          = s:palt$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.normal_modified = s:palt_m$/;"	v
s:palt_i	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i   = deepcopy(s:palt)$/;"	v
s:palt_i_m	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i_m = deepcopy(s:palt_m)$/;"	v
s:palt_i	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i.airline_a[0] = s:ifg[0]$/;"	v
s:palt_i	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i.airline_a[2] = s:ifg[1]$/;"	v
s:palt_i	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i.airline_a[1] = s:ibg[0]$/;"	v
s:palt_i	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_i.airline_a[3] = s:ibg[1]$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.insert          = s:palt_i$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.insert_modified = s:palt_i_m$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.terminal        = s:palt$/;"	v
s:palt_r	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r   = deepcopy(s:palt)$/;"	v
s:palt_r_m	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r_m = deepcopy(s:palt_m)$/;"	v
s:palt_r	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r.airline_a[0] = s:rfg[0]$/;"	v
s:palt_r	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r.airline_a[2] = s:rfg[1]$/;"	v
s:palt_r	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r.airline_a[1] = s:rbg[0]$/;"	v
s:palt_r	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_r.airline_a[3] = s:rbg[1]$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.replace          = s:palt_r$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.replace_modified = s:palt_r_m$/;"	v
s:palt_v	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v   = deepcopy(s:palt)$/;"	v
s:palt_v_m	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v_m = deepcopy(s:palt_m)$/;"	v
s:palt_v	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_a[0] = s:vfg[0]$/;"	v
s:palt_v	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_a[2] = s:vfg[1]$/;"	v
s:palt_v	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_a[1] = s:vbg[0]$/;"	v
s:palt_v	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_a[3] = s:vbg[1]$/;"	v
s:palt_v	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_z[0] = s:vfg[0]$/;"	v
s:palt_v	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_z[2] = s:vfg[1]$/;"	v
s:palt_v	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_z[1] = s:vbg[0]$/;"	v
s:palt_v	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_v.airline_z[3] = s:vbg[1]$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.visual          = s:palt_v$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.visual_modified = s:palt_v_m$/;"	v
s:palt_d	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d   = deepcopy(s:palt)$/;"	v
s:palt_d_m	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d_m = deepcopy(s:palt_m)$/;"	v
s:palt_d	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_a[0] = s:fg[0]$/;"	v
s:palt_d	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_a[1] = s:bg[0]$/;"	v
s:palt_d	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_a[2] = s:fg[1]$/;"	v
s:palt_d	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_a[3] = s:bg[1]$/;"	v
s:palt_d	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_b[0] = s:fg[0]$/;"	v
s:palt_d	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_b[2] = s:fg[1]$/;"	v
s:palt_d	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_c[0] = s:fg[0]$/;"	v
s:palt_d	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_c[2] = s:fg[1]$/;"	v
s:palt_d	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_d.airline_c[4] = 'NONE'$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.inactive          = s:palt_d$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.inactive_modified = s:palt_d_m$/;"	v
s:palt_c	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:palt_c   = deepcopy(s:palt)$/;"	v
s:palt_c	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^  let s:palt_c[pk][0] = s:cfg[0]$/;"	v
s:palt_c	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^  let s:palt_c[pk][2] = s:cfg[1]$/;"	v
s:palt_c	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^  let s:palt_c[pk][1] = s:cbg[0]$/;"	v
s:palt_c	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^  let s:palt_c[pk][3] = s:cbg[1]$/;"	v
s:palt_c	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt_c.airline_b[2] = s:cbg[1]$/;"	v
s:palt_c	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt_c.airline_y[2] = s:cbg[1]$/;"	v
s:palt_c	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt_c.airline_b[0] = s:cbg[0]$/;"	v
s:palt_c	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^    let s:palt_c.airline_y[0] = s:cbg[0]$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.commandline = s:palt_c$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.accents = {$/;"	v
s:atbg	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atbg   = ['#080808', 232]$/;"	v
s:atl	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atl    = ['#444444', s:atbg[0], 238, s:atbg[1], 'NONE']$/;"	v
s:ats	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:ats    = ['#D0D0D0', '#1C1C1C', 252,       234, 'NONE']$/;"	v
s:atf	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atf    = s:atl$/;"	v
s:at	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:at     = deepcopy(s:atl)$/;"	v
s:at	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:at[0]  = '#6C6C6C'$/;"	v
s:at	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:at[2]  = 242$/;"	v
s:atm	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atm    = deepcopy(s:ats)$/;"	v
s:atu	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atu    = deepcopy(s:at)$/;"	v
s:atm	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atm[4] = 'italic,bold'$/;"	v
s:atu	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let s:atu[4] = 'italic,bold' " according to issue#2298, this attribute may be invalid$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^let g:airline#themes#lessnoise#palette.tabline = {$/;"	v
g:airline#themes#lessnoise#palette	plugged/vim-airline-themes/autoload/airline/themes/lessnoise.vim	/^  let g:airline#themes#lessnoise#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#zenburn#palette	plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^let g:airline#themes#zenburn#palette = {}$/;"	v
airline#themes#zenburn#refresh	plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^function! airline#themes#zenburn#refresh()$/;"	f
s:base03	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base03  = {'hex': '#002B36', 'term': 234}  "   0,  43,  54$/;"	v
s:base02	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base02  = {'hex': '#073642', 'term': 235}  "   7,  54,  66$/;"	v
s:base01	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base01  = {'hex': '#586E75', 'term': 242}  "  88, 110, 117 *$/;"	v
s:base00	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base00  = {'hex': '#657B83', 'term':  66}  " 101, 123, 131 *$/;"	v
s:base0	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base0   = {'hex': '#839496', 'term': 246}  " 131, 148, 150 *$/;"	v
s:base1	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base1   = {'hex': '#93A1A1', 'term': 247}  " 147, 161, 161 *$/;"	v
s:base2	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base2   = {'hex': '#EEE8D5', 'term': 254}  " 238, 232, 213$/;"	v
s:base3	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:base3   = {'hex': '#FDF6E3', 'term': 230}  " 253, 246, 227$/;"	v
s:yellow	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:yellow  = {'hex': '#B58900', 'term': 136}  " 181, 137,   0$/;"	v
s:orange	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:orange  = {'hex': '#CB4B16', 'term': 166}  " 203,  75,  22$/;"	v
s:red	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:red     = {'hex': '#DC322F', 'term': 160}  " 220,  50,  47 *$/;"	v
s:magenta	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:magenta = {'hex': '#D33682', 'term': 168}  " 211,  54, 130 *$/;"	v
s:violet	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:violet  = {'hex': '#6C71C4', 'term':  62}  " 108, 113, 196 *$/;"	v
s:blue	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:blue    = {'hex': '#268BD2', 'term':  32}  "  38, 139, 210 *$/;"	v
s:cyan	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:cyan    = {'hex': '#2AA198', 'term':  36}  "  42, 161, 152 *$/;"	v
s:green	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:green   = {'hex': '#859900', 'term': 106}  " 133, 153,   0 #$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette = {}$/;"	v
s:airline_a_normal	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_a_normal = [s:base03['hex'],  s:green['hex'],$/;"	v
s:airline_b_normal	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_b_normal = [s:base1['hex'],  s:base03['hex'],$/;"	v
s:airline_c_normal	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_c_normal = [s:cyan['hex'],  s:base03['hex'],$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.normal =$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.normal['airline_z'] =$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.normal_modified = {$/;"	v
s:airline_a_insert	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_a_insert = [s:base03['hex'] , s:cyan['hex'],$/;"	v
s:airline_b_insert	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_b_insert = [s:base1['hex'],  s:base03['hex'],$/;"	v
s:airline_c_insert	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_c_insert = [s:blue['hex'],  s:base03['hex'],$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.insert =$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.insert['airline_z'] =$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.insert_modified = {$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.insert_paste = {$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.replace =$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.replace.airline_a =$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.replace_modified =$/;"	v
s:airline_a_visual	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_a_visual = [s:base03['hex'],  s:yellow['hex'],$/;"	v
s:airline_b_visual	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_b_visual = [s:base1['hex'],  s:base03['hex'],$/;"	v
s:airline_c_visual	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_c_visual = [s:red['hex'],  s:base03['hex'],$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.visual =$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.visual['airline_z'] =$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.visual_modified = {$/;"	v
s:airline_a_inactive	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_a_inactive = ['#4e4e4e', '#1c1c1c', 239, 234, '']$/;"	v
s:airline_b_inactive	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_b_inactive = ['#4e4e4e', '#262626', 239, 235, '']$/;"	v
s:airline_c_inactive	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let s:airline_c_inactive = ['#4e4e4e', '#303030', 239, 236, '']$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.inactive =$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.inactive_modified = {$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^let g:airline#themes#solarized_flood#palette.accents = {$/;"	v
g:airline#themes#solarized_flood#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized_flood.vim	/^  let g:airline#themes#solarized_flood#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:gui_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:cterm_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:gui_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:cterm_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:gui_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:cterm_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:gui_light_gray	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:cterm_light_gray	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_light_gray = 249$/;"	v
s:gui_green	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_green = '#afd787'$/;"	v
s:cterm_green	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_green = 150$/;"	v
s:gui_blue	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:cterm_blue	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_blue = 110$/;"	v
s:gui_purple	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:cterm_purple	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_purple = 146$/;"	v
s:gui_orange	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_orange = '#d7af5f'$/;"	v
s:cterm_orange	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_orange = 179$/;"	v
s:gui_red	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_red = '#d78787'$/;"	v
s:cterm_red	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_red = 174$/;"	v
s:gui_pink	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:cterm_pink	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_pink = 182$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_modified = copy(g:airline#themes#bubblegum#palette.normal_modified)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_paste = {$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace = {$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive_modified = {$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ] " darkestgreen   & brightgreen$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:N2 = [ '#9e9e9e' , '#303030' , 247 , 236 ] " gray8          & gray2$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:N3 = [ '#ffffff' , '#121212' , 231 , 233 ] " white          & gray4$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:I1 = [ '#005f5f' , '#ffffff' , 23  , 231 ] " darkestcyan    & white$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:I2 = [ '#5fafd7' , '#0087af' , 74  , 31  ] " darkcyan       & darkblue$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ] " mediumcyan     & darkestblue$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ] " gray3          & brightestorange$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:RE = [ '#ffffff' , '#d70000' , 231 , 160 ] " white          & brightred$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette = {}$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert_replace = {$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.visual = {$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace = copy(airline#themes#powerlineish#palette.normal)$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace.airline_z = g:airline#themes#powerlineish#palette.replace.airline_a$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:IA = [ s:N2[0] , s:N3[1] , s:N2[2] , s:N3[3] , '' ]$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui00 = "#1f2022"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui01 = "#282828"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui02 = "#444155"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui03 = "#585858"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui04 = "#b8b8b8"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui05 = "#a3a3a3"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui06 = "#e8e8e8"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui07 = "#f8f8f8"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui08 = "#f2241f"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui09 = "#ffa500"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0A = "#b1951d"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0B = "#67b11d"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0C = "#2d9574"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0D = "#4f97d7"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0E = "#a31db1"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0F = "#b03060"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm01 = 18$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm02 = 19$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm03 = 8$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm04 = 20$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm05 = 7$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm06 = 21$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm08 = 1$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm09 = 16$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0F = 17$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette = {}$/;"	v
s:cterm_termbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termbg    = s:cterm02$/;"	v
s:gui_termbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termbg      = s:gui02$/;"	v
s:cterm_termfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termfg    = s:cterm06$/;"	v
s:gui_termfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termfg      = s:gui06$/;"	v
s:cterm_termbg2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termbg2   = s:cterm00$/;"	v
s:gui_termbg2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termbg2     = s:gui00$/;"	v
s:cterm_termfg2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termfg2   = s:cterm06$/;"	v
s:gui_termfg2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termfg2     = s:gui06$/;"	v
s:cterm_normalbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_normalbg  = s:cterm0D$/;"	v
s:gui_normalbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_normalbg    = s:gui0D$/;"	v
s:cterm_normalfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_normalfg  = s:cterm07$/;"	v
s:gui_normalfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_normalfg    = s:gui07$/;"	v
s:cterm_insertbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_insertbg  = s:cterm0B$/;"	v
s:gui_insertbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_insertbg    = s:gui0B$/;"	v
s:cterm_insertfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_insertfg  = s:cterm07$/;"	v
s:gui_insertfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_insertfg    = s:gui07$/;"	v
s:cterm_visualbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_visualbg  = s:cterm09$/;"	v
s:gui_visualbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_visualbg    = s:gui09$/;"	v
s:cterm_visualfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_visualfg  = s:cterm07$/;"	v
s:gui_visualfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_visualfg    = s:gui07$/;"	v
s:cterm_replacebg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_replacebg = s:cterm08$/;"	v
s:gui_replacebg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_replacebg   = s:gui08$/;"	v
s:cterm_replacefg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_replacefg = s:cterm07$/;"	v
s:gui_replacefg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_replacefg   = s:gui07$/;"	v
s:cterm_inactivebg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_inactivebg = s:cterm02$/;"	v
s:gui_inactivebg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_inactivebg   = s:gui02$/;"	v
s:cterm_inactivefg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_inactivefg = s:cterm04$/;"	v
s:gui_inactivefg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_inactivefg   = s:gui04$/;"	v
s:BB	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg] " Branch and file format blocks$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg] " Outside blocks in normal mode$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:N2 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]     " Middle block$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal = airline#themes#generate_color_map(s:N1, s:BB, s:N2)$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal_modified = g:airline#themes#base16_spacemacs#palette.normal$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg] " Outside blocks in insert mode$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:I2 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]   " Middle block$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert = airline#themes#generate_color_map(s:I1, s:BB, s:I2)$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert_modified = g:airline#themes#base16_spacemacs#palette.insert$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]  " Outside blocks in replace mode$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:R2 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]            " Middle block$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace = airline#themes#generate_color_map(s:R1, s:BB, s:R2)$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace_modified = g:airline#themes#base16_spacemacs#palette.replace$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg] " Outside blocks in visual mode$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:V2 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]   " Middle block$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual = airline#themes#generate_color_map(s:V1, s:BB, s:V2)$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual_modified = g:airline#themes#base16_spacemacs#palette.visual$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:WI = [s:gui07, s:gui09, s:cterm07, s:cterm09]$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal.airline_warning = [$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace_modified.airline_warning =$/;"	v
s:ER	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:ER = [s:gui07, s:gui08, s:cterm07, s:cterm08]$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal.airline_error = [$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui00 = "#272822"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui01 = "#383830"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui02 = "#49483e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui03 = "#75715e"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui04 = "#a59f85"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui05 = "#f8f8f2"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui06 = "#f5f4f1"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui07 = "#f9f8f5"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui08 = "#f92672"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui09 = "#fd971f"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0A = "#f4bf75"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0B = "#a6e22e"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0C = "#a1efe4"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0D = "#66d9ef"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0E = "#ae81ff"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0F = "#cc6633"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm01 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm03 = 95$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm04 = 144$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm05 = 15$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm06 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm08 = 197$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm09 = 208$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0A = 216$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0B = 3$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0C = 158$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0D = 81$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0E = 141$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0F = 167$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N1   = [ '#0E3B4F' , '#FFEEE5' , 17  , 190 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N2   = [ '#0E3B4F' , '#FFD3CB' , 255 , 238 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N3   = [ '#ffffff' , '#F7846E' , 85  , 234 ]$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N4   = [ '#ffffff' , '#FF5D4F' , 255 , 53  ]$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.normal_modified = { 'airline_c': [ s:N4[0], s:N4[1], s:N4[2], s:N4[3], '' ], }$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I1 = [ '#0E3B4F' , '#FFF5D9' , 17  , 45 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I2 = [ '#0E3B4F' , '#DDE58E' , 255 , 27 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I3 = [ '#ffffff' , '#9ED47B' , 15  , 17 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I4 = [ '#ffffff' , '#6BAD3F' , 255 , 53 ]$/;"	v
s:I5	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I5 = [ '#ffffff' , '#6BAD3F' , 17  , 172 ]$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.insert_modified = { 'airline_c': [ s:I4[0], s:I4[1], s:I4[2], s:I4[3], '' ], }$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.insert_paste = { 'airline_a': [ s:I5[0], s:I5[2], s:I5[2], s:I5[3], '' ], }$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R1 = [ '#0E3B4F' , '#C1F9CD' , 17  , 45  ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R2 = [ '#0E3B4F' , '#8BEFC7' , 255 , 27  ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R3 = [ '#ffffff' , '#04BEC3' , 15  , 17  ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R4 = [ '#ffffff' , '#008492' , 255 , 53  ]$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.replace.airline_a = [ s:R1[0], s:R1[1], s:R2[2], 124, '']$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.replace_modified = { 'airline_c': [ s:R4[0], s:R4[1], s:R4[2], s:R4[3], '' ], }$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V1 = [ '#0E3B4F' , '#FFEEE5' , 232 , 214 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V2 = [ '#0E3B4F' , '#FF9DA5' , 232 , 202 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V3 = [ '#ffffff' , '#FF5B6F' , 15  , 52  ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V4 = [ '#ffffff' , '#FF003F' , 255  , 53  ]$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.visual_modified = { 'airline_c': [ s:V4[0], s:V4[1], s:V4[2], s:V4[3], '' ], }$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:IA1 = [ '#0E3B4F' , '#FEFCF9' , 239 , 234 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:IA2 = [ '#0E3B4F' , '#DDC6AF' , 239 , 235 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:IA3 = [ '#ffffff' , '#A28E79' , 239 , 236 , '' ]$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.inactive_modified = { 'airline_c': [ '#ffffff', '', 97, '', '' ], }$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.accents = { 'red': [ '#ffffff', '', 160, '' ] }$/;"	v
s:C1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:C1 = [ '#0E3B4F' , '#FEFCF9' , 189 , 55  , '' ]$/;"	v
s:C2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:C2 = [ '#0E3B4F' , '#DDC6AF' , 231 , 98  , '' ]$/;"	v
s:C3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:C3 = [ '#ffffff' , '#B9A695' , 55  , 231 , '' ]$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:C1, s:C2, s:C3)$/;"	v
g:airline#themes#seoul256#palette	plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^let g:airline#themes#seoul256#palette = {}$/;"	v
airline#themes#seoul256#refresh	plugged/vim-airline-themes/autoload/airline/themes/seoul256.vim	/^function! airline#themes#seoul256#refresh() abort$/;"	f
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui00 = "#1c1c1c" " ANSI Black$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui01 = "#af8787" " ANSI Red$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui02 = "#dfaf87" " ANSI Green$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui03 = "#878787" " ANSI Yellow$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui04 = "#af5f5f" " ANSI Blue$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui05 = "#875f5f" " ANSI Magenta$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui06 = "#87afaf" " ANSI Cyan$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui07 = "#ffdf87" " ANSI White$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui08 = "#87875f"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui09 = "#af1600"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0A = "#af875f"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0B = "#878787"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0C = "#af5f00"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0D = "#5f5f87"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0E = "#afd7d7"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0F = "#dfdfaf"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm00 = "234"$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm01 = "138"$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm02 = "180"$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm03 = "102"$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm04 = "131"$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm05 = "95"$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm06 = "109"$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm07 = "222"$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm08 = "101"$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm09 = "138"$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0A = "180"$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0B = "102"$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0C = "130"$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0D = "60"$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0E = "152"$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0F = "187"$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiGray = "#666666"$/;"	v
s:guiDarkGray	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiDarkGray = "#545454"$/;"	v
s:guiAlmostBlack	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiAlmostBlack = "#2a2a2a"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermGray	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermGray = "243"$/;"	v
s:ctermDarkGray	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermDarkGray = "240"$/;"	v
s:ctermAlmostBlack	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermAlmostBlack = "235"$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette = {}$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:modified = { 'airline_c': [s:gui07, '', s:cterm07, '', ''] }$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:N1 = [s:gui07, s:gui0D, s:cterm07, s:cterm0D]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:N2 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:N3 = [s:gui02, s:guiDarkGray, s:cterm02, s:ctermDarkGray]$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.normal_modified = s:modified$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:I1 = [s:guiWhite, s:gui0B, s:ctermWhite, s:cterm0B]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:I2 = s:N2$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:I3 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.insert_modified = s:modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:V1 = [s:guiWhite, s:gui08, s:ctermWhite, s:cterm08]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:V2 = s:N2$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:V3 = s:I3$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.visual_modified = s:modified$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:R1 = [s:gui08, s:gui00, s:cterm08, s:cterm00]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:R2 = s:N2$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:R3 = s:I3$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.replace_modified = s:modified$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:IN1 = [s:guiGray, s:gui01, s:ctermGray, s:cterm01]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:IN2 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:IN3 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.inactive_modified = s:modified$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:CP1 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:CP2 = [s:guiWhite, s:gui03, s:ctermWhite, s:cterm01]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:CP3 = [s:guiWhite, s:gui0D, s:ctermWhite, s:cterm0D]$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:N1 = [ '#eeeeee' , '#005fff' , 255 , 27  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:N2 = [ '#000087' , '#00d7ff' , 18  , 45  ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:N3 = [ '#005fff' , '#afffff' , 27  , 159 ]$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:I1 = [ '#eeeeee' , '#00875f' , 255 , 29  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:I2 = [ '#005f00' , '#00d787' , 22  , 42  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:I3 = [ '#005f5f' , '#afff87' , 23  , 156 ]$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.insert_modified = {$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.insert_paste = {$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.replace = copy(g:airline#themes#xtermlight#palette.insert)$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.replace.airline_a = [ s:I2[0]   , '#ff0000' , s:I1[2] , 196     , ''     ]$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.replace_modified = g:airline#themes#xtermlight#palette.insert_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:V1 = [ '#eeeeee' , '#ff5f00' , 255 , 202 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:V2 = [ '#5f0000' , '#ffaf00' , 52  , 214 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:V3 = [ '#d75f00' , '#ffff87' , 166 , 228 ]$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.visual_modified = {$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:IA1 = [ '#6c6c6c' , '#b2b2b2' , 242 , 249 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:IA2 = [ '#8a8a8a' , '#d0d0d0' , 245 , 252 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:IA3 = [ '#a8a8a8' , '#eeeeee' , 248 , 255 , '' ]$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.inactive_modified = {$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui00 = "#111111"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui01 = "#333333"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui02 = "#555555"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui03 = "#777777"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui04 = "#999999"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui05 = "#bbbbbb"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui06 = "#dddddd"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui08 = "#ff4136"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui09 = "#ff851b"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0A = "#ffdc00"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0B = "#2ecc40"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0C = "#7fdbff"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0D = "#0074d9"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0E = "#b10dc9"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0F = "#85144b"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm00 = 233$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm01 = 236$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm02 = 240$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm03 = 243$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm04 = 246$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm05 = 250$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm06 = 253$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm08 = 203$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm09 = 208$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0B = 41$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0C = 117$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0D = 32$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0E = 128$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0F = 89$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui00 = "#231f20"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui01 = "#1c3f95"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui02 = "#5a5758"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui03 = "#737171"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui04 = "#959ca1"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui05 = "#d9d8d8"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui06 = "#e7e7e8"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui08 = "#ee2e24"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui09 = "#f386a1"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0A = "#ffd204"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0B = "#00853e"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0C = "#85cebc"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0D = "#009ddc"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0E = "#98005d"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0F = "#b06110"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm01 = 24$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm03 = 59$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm04 = 109$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm05 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm08 = 1$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm09 = 211$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0C = 115$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0D = 38$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0E = 89$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0F = 130$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui00 = "#1d1f21"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui01 = "#282a2e"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui02 = "#373b41"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui03 = "#969896"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui04 = "#b4b7b4"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui05 = "#c5c8c6"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui08 = "#cc6666"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui09 = "#de935f"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0A = "#f0c674"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0B = "#b5bd68"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0C = "#8abeb7"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0D = "#81a2be"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0E = "#b294bb"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0F = "#a3685a"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm00 = 0$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm03 = 8$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm05 = 7$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm08 = 1$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0E = 5$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm01 = 18$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm02 = 19$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm04 = 20$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm06 = 21$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm09 = 16$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm0F = 17$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm01 = 10$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm02 = 11$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm04 = 12$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm06 = 13$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm09 = 9$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm0F = 14$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N1 = [ '#141413' , '#CAE682' ,  232 , 'green' ] " mode$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 'green' , 235 ]  " info$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 'green' , 234 ]  " statusline$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N4 = [ '#86CD74' , 'DarkGreen' ]                " mode modified$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 'yellow' ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 'yellow' , 235 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 'yellow' , 234 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I4 = [ '#FADE3E' , 'yellow' ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 'blue' ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 'blue' , 235 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 'blue' , 234 ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V4 = [ '#7CB0E6' , 'blue' ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 'red' ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 'red' , 235 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 'red' , 234 ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R4 = [ '#E55345' , 'red' ]$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:PA = [ '#94E42C' , 005 ]$/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:IM = [ '#40403C' , 236 ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette = {}$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.accents = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.normal_modified = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.insert_modified = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.visual_modified = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.replace_modified = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.insert_paste = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.inactive_modified = {$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:N1   = [ '#585858' , '#E4E4E4' , 59  , 188 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:N2   = [ '#E4E4E4' , '#0087AF' , 188 , 31 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:N3   = [ '#EEEEEE' , '#005F87' , 231  , 24]$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:I1 = [ '#585858' , '#E4E4E4' , 59  , 188  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:I2 = [ '#E4E4E4' , '#47AF00' , 188 , 70  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:I3 = [ '#EEEEEE' , '#2E8700' , 231  , 28 ]$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:R1 = [ '#585858' , '#E4E4E4' , 59  , 188  ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:R2 = [ '#E4E4E4' , '#AF5F00' , 188 , 130  ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:R3 = [ '#EEEEEE' , '#875300' , 231  , 94  ]$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:V1 = [ '#585858' , '#E4E4E4' , 59 , 188 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:V2 = [ '#E4E4E4' , '#AF2800' , 188 , 124 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:V3 = [ '#EEEEEE' , '#872800' , 231  , 88  ]$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:IA1 = [ '#585858' , '#E4E4E4' , 59 , 188 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:IA2 = [ '#E4E4E4' , '#466D79' , 188 , 60 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:IA3 = [ '#EEEEEE' , '#324E59' , 231 , 59 , '' ]$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.terminal = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.normal.airline_term = s:N3$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.terminal.airline_term = s:I3$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.visual.airline_term = s:V3$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.accents = {$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette = {}$/;"	v
s:cterm_termbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_termbg    = 237         " Background for branch and file format blocks$/;"	v
s:gui_termbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_termbg      = '#3A3A3A'$/;"	v
s:cterm_termfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_termfg    = 144         " Foreground for branch and file format blocks$/;"	v
s:gui_termfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_termfg      = '#AFAF87'$/;"	v
s:cterm_termbg2	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_termbg2   = 234         " Background for middle block$/;"	v
s:gui_termbg2	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_termbg2     = '#1C1C1C'$/;"	v
s:cterm_termfg2	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_termfg2   = 39          " Foreground for middle block$/;"	v
s:gui_termfg2	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_termfg2     = '#00AFFF'$/;"	v
s:cterm_normalbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_normalbg  = 27          " Background for normal mode and file position blocks$/;"	v
s:gui_normalbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_normalbg    = '#005FFF'$/;"	v
s:cterm_normalfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_normalfg  = 15          " Foreground for normal mode and file position blocks$/;"	v
s:gui_normalfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_normalfg    = '#FFFFFF'$/;"	v
s:cterm_insertbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_insertbg  = 70          " Background for insert mode and file position blocks$/;"	v
s:gui_insertbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_insertbg    = '#5FAF00'$/;"	v
s:cterm_insertfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_insertfg  = 15          " Foreground for insert mode and file position blocks$/;"	v
s:gui_insertfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_insertfg    = '#FFFFFF'$/;"	v
s:cterm_visualbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_visualbg  = 166         " Background for visual mode and file position blocks$/;"	v
s:gui_visualbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_visualbg    = '#D75F00'$/;"	v
s:cterm_visualfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_visualfg  = 15          " Foreground for visual mode and file position blocks$/;"	v
s:gui_visualfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_visualfg    = '#FFFFFF'$/;"	v
s:cterm_replacebg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_replacebg = 160         " Background for replace mode and file position blocks$/;"	v
s:gui_replacebg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_replacebg   = '#D70000'$/;"	v
s:cterm_replacefg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_replacefg = 15          " Foreground for replace mode and file position blocks$/;"	v
s:gui_replacefg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_replacefg   = '#FFFFFF'$/;"	v
s:cterm_alert	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_alert     = 124         " Modified file alert color$/;"	v
s:gui_alert	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_alert       = '#AF0000'$/;"	v
s:cterm_warningbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_warningbg = 166         " Background for warning blocks$/;"	v
s:gui_warningbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_warningbg   = '#D75F00'$/;"	v
s:cterm_warningfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_warningfg = 15          " Foreground for warning blocks$/;"	v
s:gui_warningfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_warningfg   = '#FFFFFF'$/;"	v
s:cterm_errorbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_errorbg   = 160         " Background for error blocks$/;"	v
s:gui_errorbg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_errorbg     = '#D70000'$/;"	v
s:cterm_errorfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_errorfg   = 15          " Foreground for error blocks$/;"	v
s:gui_errorfg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_errorfg     = '#FFFFFF'$/;"	v
s:cterm_inactivebg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_inactivebg = 234        " Background for inactive mode$/;"	v
s:gui_inactivebg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_inactivebg   = '#1C1C1C'$/;"	v
s:cterm_inactivefg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:cterm_inactivefg = 239        " Foreground for inactive mode$/;"	v
s:gui_inactivefg	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:gui_inactivefg   = '#4E4E4E'$/;"	v
s:BB	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg]$/;"	v
s:W	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:W = [s:gui_warningfg, s:gui_warningbg, s:cterm_warningfg, s:cterm_warningbg, 'bold']$/;"	v
s:E	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:E = [s:gui_errorfg, s:gui_errorbg, s:cterm_errorfg, s:cterm_errorbg, 'bold']$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:N2 = s:BB$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:N3 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.normal =$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.normal.airline_warning = s:W$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.normal.airline_error = s:E$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:I2 = s:BB$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:I3 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.insert =$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.insert.airline_warning = s:W$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.insert.airline_error = s:E$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.insert_modified =$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:R2 = s:BB$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:R3 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.replace =$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.replace.airline_warning = s:W$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.replace.airline_error = s:E$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.replace_modified =$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:V2 = s:BB$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:V3 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.visual =$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.visual.airline_warning = s:W$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.visual.airline_error = s:E$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.visual_modified =$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.inactive =$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.inactive.airline_warning = s:IA2$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.inactive.airline_error =  s:IA2$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.inactive_modified =$/;"	v
g:airline#themes#ouo#palette	plugged/vim-airline-themes/autoload/airline/themes/ouo.vim	/^let g:airline#themes#ouo#palette.accents = {$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui00 = "#131513"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui01 = "#242924"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui02 = "#5e6e5e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui03 = "#687d68"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui04 = "#809980"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui05 = "#8ca68c"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui06 = "#cfe8cf"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui07 = "#f0fff0"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui08 = "#e6193c"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui09 = "#87711d"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0A = "#c3c322"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0B = "#29a329"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0C = "#1999b3"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0D = "#3d62f5"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0E = "#ad2bee"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0F = "#e619c3"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm01 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm03 = 65$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm05 = 108$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm08 = 161$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm09 = 94$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0C = 31$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0E = 129$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0F = 5$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui00 = "#303030" " ANSI Black$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui01 = "#af5f5f" " ANSI Red$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui02 = "#d75f5f" " ANSI Green$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui03 = "#afd7d7" " ANSI Yellow$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui04 = "#af8787" " ANSI Blue$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui05 = "#dfaf87" " ANSI Magenta$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui06 = "#ffafaf" " ANSI Cyan$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui07 = "#f7e4c0" " ANSI White$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui08 = "#686868"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui09 = "#af5f5f"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0A = "#d75f5f"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0B = "#afd7d7"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0C = "#af8787"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0D = "#dfaf87"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0E = "#ffb2af"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0F = "#ffffff"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm00 = "236"$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm01 = "131"$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm02 = "167"$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm03 = "152"$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm04 = "138"$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm05 = "180"$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm06 = "217"$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm07 = "222"$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm08 = "242"$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm09 = "131"$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0A = "167"$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0B = "152"$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0C = "138"$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0D = "180"$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0E = "217"$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0F = "231"$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiGray = "#666666"$/;"	v
s:guiDarkGray	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiDarkGray = "#545454"$/;"	v
s:guiAlmostBlack	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiAlmostBlack = "#2a2a2a"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermGray	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermGray = "243"$/;"	v
s:ctermDarkGray	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermDarkGray = "240"$/;"	v
s:ctermAlmostBlack	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermAlmostBlack = "235"$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette = {}$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:modified = { 'airline_c': [s:gui07, '', s:cterm07, '', ''] }$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:N1 = [s:guiWhite, s:gui0D, s:ctermWhite, s:cterm0D]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:N2 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:N3 = [s:gui02, s:guiDarkGray, s:cterm02, s:ctermDarkGray]$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.normal_modified = s:modified$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:I1 = [s:guiWhite, s:gui0B, s:ctermWhite, s:cterm0B]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:I2 = s:N2$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:I3 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.insert_modified = s:modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:V1 = [s:guiWhite, s:gui08, s:ctermWhite, s:cterm08]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:V2 = s:N2$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:V3 = s:I3$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.visual_modified = s:modified$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:R1 = [s:gui08, s:gui00, s:cterm08, s:cterm00]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:R2 = s:N2$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:R3 = s:I3$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.replace_modified = s:modified$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:IN1 = [s:guiGray, s:gui01, s:ctermGray, s:cterm01]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:IN2 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:IN3 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.inactive_modified = s:modified$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:CP1 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:CP2 = [s:guiWhite, s:gui03, s:ctermWhite, s:cterm01]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:CP3 = [s:guiWhite, s:gui0D, s:ctermWhite, s:cterm0D]$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette = {}$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.accents = {$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:N1 = [ '#080808' , '#e6db74' , 232 , 144 ] " mode$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:N2 = [ '#f8f8f0' , '#232526' , 253 , 208 ] " info$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:N2 = [ '#f8f8f0' , '#232526' , 253 , 16 ] " info$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:N3 = [ '#f8f8f0' , '#465457' , 253 , 67  ] " statusline$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:I1 = [ '#080808' , '#66d9ef' , 232 , 81  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:I2 = [ '#f8f8f0' , '#232526' , 253 , 208 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:I2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:I3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert_modified = {$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:R1 = [ '#080808' , '#f92672' , 232 , 161 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:R2 = [ '#f8f8f0' , '#232526' , 253 , 208 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:R2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:R3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace_modified = {$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:V1 = [ '#080808' , '#a6e22e' , 232 , 118 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:V2 = [ '#f8f8f0' , '#232526' , 253 , 208 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:V2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:V3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual_modified = {$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:IA = [ '#1b1d1e' , '#465457' , 233 , 67 , '' ]$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive_modified = {$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette = {}$/;"	v
s:guibg	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:guibg = '#080808'$/;"	v
s:termbg	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:termbg = 232$/;"	v
s:termsep	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:termsep = 236$/;"	v
s:guisep	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:guisep = '#303030'$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:N1 = [ '#00dfff' , s:guibg , 45  , s:termbg ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:N2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:N3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:I1 = [ '#5fff00' , s:guibg , 82  , s:termbg ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:I2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:I3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_paste = {$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace = {$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:V1 = [ '#dfdf00' , s:guibg , 184 , s:termbg ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:V2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:V3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:IA2 = [ '#4e4e4e' , s:guisep , 239 , s:termsep , '' ]$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:N1 = [ '#212733' , '#BBE67E' , 0   , 114 ] " guifg guibg ctermfg ctermbg$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:N2 = [ '#BBE67E' , '#212733' , 114 , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:N3 = [ '#E6E1CF' , '#212733' , 15  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:I1 = [ '#212733' , '#80D4FF' , 0   , 80  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:I2 = [ '#80D4FF' , '#212733' , 80  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:I3 = [ '#E6E1CF' , '#212733' , 15  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:V1 = [ '#212733' , '#FFAE57' , 0   , 173 ] " guifg guibg ctermfg ctermbg$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:V2 = [ '#FFAE57' , '#212733' , 173 , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:V3 = [ '#E6E1CF' , '#212733' , 15  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:RE = [ '#212733' , '#F07178' , 0   , 167 ] " guifg guibg ctermfg ctermbg$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette = {}$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.insert_replace = {$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.replace = copy(g:airline#themes#ayu_mirage#palette.normal)$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:IA = [ s:N1[1] , s:N3[1] , s:N1[3] , s:N3[3] , '' ]$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette = {}$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.accents = {$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:N1 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:N2 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:N3 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:I1 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:I2 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:I3 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified = {$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_paste = {$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace = copy(g:airline#themes#silver#palette.insert)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_a = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , '' ]$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_z = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , '' ]$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified = g:airline#themes#silver#palette.insert_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:V1 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:V2 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:V3 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified = {$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:IA = [ '#a1a1a1' , '#dddddd' , 145 , 188 , '' ]$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive_modified = {$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.tabline = {$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:WI = [ '#ff0000', '#e1e1e1', 196, 188 ]$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal.airline_warning = [$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#hybrid#palette	plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^let g:airline#themes#hybrid#palette = {}$/;"	v
airline#themes#hybrid#refresh	plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^function! airline#themes#hybrid#refresh()$/;"	f
g:airline#themes#tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^let g:airline#themes#tomorrow#palette = {}$/;"	v
airline#themes#tomorrow#refresh	plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^function! airline#themes#tomorrow#refresh()$/;"	f
s:improved_contrast	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:improved_contrast = get(g:, 'airline_base16_improved_contrast', 0)$/;"	v
s:gui_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_dark_gray = '#202020'$/;"	v
s:cterm_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_dark_gray = 234$/;"	v
s:gui_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_med_gray_hi = '#303030'$/;"	v
s:cterm_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_med_gray_hi = 236$/;"	v
s:gui_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:cterm_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:gui_light_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_light_gray = '#505050'$/;"	v
s:cterm_light_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_light_gray = 239$/;"	v
s:gui_lightlight_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_lightlight_gray = '#8A8A8A'$/;"	v
s:cterm_lightlight_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_lightlight_gray = 245$/;"	v
s:gui_green	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_green = '#99cc99'$/;"	v
s:cterm_green	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_green = 151$/;"	v
s:gui_blue	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_blue = '#6a9fb5'$/;"	v
s:cterm_blue	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_blue = 67$/;"	v
s:gui_purple	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_purple = '#aa759f'$/;"	v
s:cterm_purple	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_purple = 139$/;"	v
s:gui_orange	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_orange = '#d28445'$/;"	v
s:cterm_orange	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_orange = 173$/;"	v
s:gui_red	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_red = '#ac4142'$/;"	v
s:cterm_red	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_red = 131$/;"	v
s:gui_pink	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:cterm_pink	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_pink = 182$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:N2 = [s:gui_lightlight_gray, s:gui_med_gray_lo, s:cterm_lightlight_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_modified = copy(g:airline#themes#base16#palette.normal_modified)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_paste = {$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace = {$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_lightlight_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive_modified = {$/;"	v
airline#themes#base16#refresh	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  function! airline#themes#base16#refresh()$/;"	f
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui00 = "#002b36"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui01 = "#073642"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui02 = "#586e75"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui03 = "#657b83"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui04 = "#839496"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui05 = "#93a1a1"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui06 = "#eee8d5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui07 = "#fdf6e3"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui08 = "#dc322f"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui09 = "#cb4b16"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0A = "#b58900"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0B = "#859900"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0C = "#2aa198"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0D = "#268bd2"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0E = "#6c71c4"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0F = "#d33682"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm00 = 17$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm01 = 23$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm02 = 60$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm03 = 66$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm05 = 109$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm06 = 224$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm07 = 230$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm08 = 166$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm09 = 166$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0A = 136$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0B = 100$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0C = 36$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0D = 32$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0E = 12$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0F = 168$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui01 = "#262626"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui06 = "#cdd3de"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui07 = "#d8dee9"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui08 = "#870000"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0A = "#fac863"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0B = "#437019"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0C = "#5fb3b3"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0D = "#0d61ac"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0E = "#c594c5"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm00 = "234"$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm01 = "235"$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm02 = "239"$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm03 = "59"$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm04 = "145"$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm05 = "152"$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm06 = "188"$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm08 = "88"$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm09 = "209"$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0A = "221"$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0B = "28"$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0C = "73"$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0E = "176"$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0F = "137"$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:ctermBlack	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBlack = "00"$/;"	v
s:ctermRed	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermRed = "01"$/;"	v
s:ctermGreen	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermGreen = "02"$/;"	v
s:ctermPurple	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermPurple = "05"$/;"	v
s:ctermGrey	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermGrey = "08"$/;"	v
s:ctermIron	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermIron = "242"$/;"	v
s:ctermBrightRed	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBrightRed = "09"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermWhite = "15"$/;"	v
s:ctermBlood	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBlood = "88"$/;"	v
s:ctermCongealing	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermCongealing = "52"$/;"	v
s:ctermOrange	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermOrange = "166"$/;"	v
s:ctermBrown	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBrown = "94"$/;"	v
s:ctermAsh	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermAsh = "234"$/;"	v
s:ctermPoison	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermPoison = "58"$/;"	v
s:ctermBruise	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBruise = "53"$/;"	v
s:ctermWinter	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermWinter = "30"$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:N1 = [ s:gui07 , s:gui0D , s:ctermAsh , s:ctermBlood ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:N2 = [ s:guiWhite , s:gui01 , s:ctermIron , s:ctermCongealing  ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:N3 = [ s:gui02 , s:gui00 , s:ctermRed , s:ctermBlack  ]$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:I1 = [ s:guiWhite , s:gui0B , s:ctermOrange , s:ctermAsh  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:I2 = [ s:gui02 , s:gui01 , s:ctermAsh , s:ctermOrange  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:I3 = [ s:guiWhite , s:gui01 , s:ctermOrange , s:ctermBlack  ]$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:V1 = [ s:guiWhite , s:gui08 , s:ctermAsh , s:ctermWinter ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:V2 = [ s:gui02 , s:gui01 , s:ctermWinter , s:ctermAsh  ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:V3 = [ s:guiWhite , s:gui01 , s:ctermWinter , s:ctermBlack  ]$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:R1 = [ s:gui08 , s:gui01 , s:ctermBlood, s:ctermBlack ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:R2 = [ s:gui02 , s:gui01 , s:ctermRed , s:ctermBlack  ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:R3 = [ s:guiWhite , s:gui01 , s:ctermIron , s:ctermBlack  ]$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:IN1 = [ s:gui00 , s:gui01 , s:cterm00 , s:cterm01 ]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:IN2 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:IN3 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:CP1 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:CP2 = [ s:guiWhite , s:gui03 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:CP3 = [ s:guiWhite , s:gui0D , s:ctermWhite , s:cterm0D  ]$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP2, s:CP3)$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N1 = [ '#005f00' , '#f8f6f2','22','15']$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N2 = [ '#f8f6f2' , '#005f00','15','22']$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N3 = [ '#b88853' , '#242321' , 137, 235 ]$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N4 = [ '#005f00' , 22 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I1 = [ '#f8f6f2', '#e25a74','15','161']$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I2 = [ '#242321', '#c14c3d','235','160']$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I3 = [ '#f4cf86' , '#242321' , 222 , 235 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I4 = [ '#f4cf86' , 222 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V1 = [ '#416389', '#f8f6f2','18','15']$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V2 = [ '#416389', '#f4cf86','18','222']$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V3 = [ '#9a4820' , '#f8f6f2','88','15']$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V4 = [ '#9a4820' , 88 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:R1 = [ '#242321' , '#f8f6f2','235','15']$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:R2 = [ '#ffa724' , '#666462','214','241']$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:R3 = [ '#f8f6f2' , '#ff7400','15','215']$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:R4 = [ '#ffa724' , 214 ]$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:PA = [ '#f9ef6d' , 154 ]$/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:IM = [ '#242321' , 235 ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:IA = [ s:N2[1], s:N3[1], s:N2[3], s:N3[3], '' ]	$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.accents = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal_modified = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_modified = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual_modified = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace_modified = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_paste = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive_modified = {$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui04 = "#B0B0B0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui05 = "#D0D0D0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui06 = "#E0E0E0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui07 = "#FFFFFF"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui08 = "#FF0086"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui09 = "#FD8900"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0A = "#ABA800"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0B = "#00C918"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0C = "#1faaaa"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0D = "#3777E6"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0E = "#AD00A1"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0F = "#cc6633"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm00 = 233$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm01 = 234$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm02 = 236$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm03 = 239$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm04 = 249$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm05 = 252$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm06 = 253$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm08 = 198$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm09 = 208$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0A = 142$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0E = 127$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0F = 167$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:term_red	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_red = 1$/;"	v
s:term_green	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_green = 2$/;"	v
s:term_yellow	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_yellow = 3$/;"	v
s:term_blue	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_blue = 4$/;"	v
s:term_purple	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_purple = 5$/;"	v
s:term_white	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_white = 7$/;"	v
s:term_black	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_black = 0$/;"	v
s:term_grey	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_grey = 8$/;"	v
s:term_red	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_red = 204$/;"	v
s:term_green	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_green = 114$/;"	v
s:term_yellow	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_yellow = 180$/;"	v
s:term_blue	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_blue = 39$/;"	v
s:term_purple	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_purple = 170$/;"	v
s:term_white	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_white = 145$/;"	v
s:term_black	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_black = 235$/;"	v
s:term_grey	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_grey = 236$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette = {}$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.accents = {$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:N1 = [ '#282C34', '#98C379', s:term_black, s:term_green ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:N2 = [ '#ABB2BF', '#3E4452', s:term_white, s:term_grey ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:N3 = [ '#98C379', '#282C34', s:term_green, '' ]$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
group	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let group = airline#themes#get_highlight('vimCommand')$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:I1 = [ '#282C34', '#61AFEF', s:term_black, s:term_blue ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:I2 = s:N2$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:I3 = [ '#61AFEF', '#282C34', s:term_blue, '' ]$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert_modified = g:airline#themes#deus#palette.normal_modified$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:R1 = [ '#282C34', '#E06C75', s:term_black, s:term_red ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:R2 = s:N2$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:R3 = [ '#E06C75', '#282C34', s:term_red, '' ]$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace_modified = g:airline#themes#deus#palette.normal_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:V1 = [ '#282C34', '#C678DD', s:term_black, s:term_purple ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:V2 = s:N2$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:V3 = [ '#C678DD', '#282C34', s:term_purple, '' ]$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual_modified = g:airline#themes#deus#palette.normal_modified$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:IA1 = [ '#282C34', '#ABB2BF', s:term_black, s:term_white ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:IA2 = [ '#ABB2BF', '#3E4452', s:term_white, s:term_grey ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:IA3 = s:N2$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.inactive_modified = {$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:WI = [ '#282C34', '#E5C07B', s:term_black, s:term_yellow ]$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal.airline_warning = [$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace_modified.airline_warning =$/;"	v
s:ER	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:ER = [ '#282C34', '#E06C75', s:term_black, s:term_red ]$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal.airline_error = [$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette = {}$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.accents = {$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:N1 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:N2 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:N3 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:I1 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:I2 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:I3 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified = {$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_paste = {$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace = copy(g:airline#themes#raven#palette.insert)$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_a = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '' ]$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_z = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '' ]$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified = g:airline#themes#raven#palette.insert_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:V1 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:V2 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:V3 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified = {$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:IA = [ '#5e5e5e' , '#222222' , 59 , 235 , '' ]$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive_modified = {$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.tabline = {$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:WI = [ '#ff0000', '#2e2e2e', 196, 235 ]$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal.airline_warning = [$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:N1 = [ '#bcbcbc' , '#875faf' , 250 , 97  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:N2 = [ '#d75fd7' , '#4e4e4e' , 170 , 239 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:N3 = [ '#c6c6c6' , '#3a3a3a' , 251 , 237 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:I1 = [ '#CACFD2' , '#009966' , 253 , 35  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:I2 = [ '#d75fd7' , '#4e4e4e' , 170 , 239 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:I3 = [ '#c6c6c6' , '#3a3a3a' , 251 , 237 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:V1 = [ '#5f0000' , '#ff5faf' , 52 , 205 ]$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:RE = [ '#c6c6c6' , '#ce537a' , 251, 168 ]$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette = {}$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.insert_replace = {$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.visual = {$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.replace = copy(g:airline#themes#violet#palette.normal)$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:IA = [ s:N1[1] , s:N3[1] , s:N1[3] , s:N3[3] , '' ]$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:N1 = ['#FFFFFF', '#5F87FF', 15, 69]  " Outside blocks in normal mode (mode and file position)$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:N2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:N3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal_modified = {'airline_c': ['#ffffff', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:I1 = ['#FFFFFF', '#87AF5F', 15, 107] " Outside blocks in normal mode (mode and file position)$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:I2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:I3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_paste = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, ''] ,}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace.airline_a = ['#FFFFFF', '#870000', 15, 88, '']$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V1 = ['#FFFFFF', '#AF5F00', 15, 130]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V2 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V3 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual_modified = {'airline_c': [ '#AFAF87', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V1 = ['#080808', '#FFAF00', 232, 214]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:IA1 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:IA2 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:IA3 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive_modified = {'airline_c': ['#4E4E4E', '', 239, '', 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.accents = {'red': ['#FF0000', '', 88, '']}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette = {}$/;"	v
s:guibg	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:guibg2 = '#1c1c1c'$/;"	v
s:termbg	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:termbg = 232$/;"	v
s:termbg2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:termbg2= 234$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:N1 = [ s:guibg , '#00dfff' , s:termbg , 45 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:N2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:N3 = [ '#767676' , s:guibg, 243 , s:termbg]$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:I1 = [ s:guibg, '#5fff00' , s:termbg , 82 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:I2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:I3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_paste = {$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace = {$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:V1 = [ s:guibg, '#dfdf00' , s:termbg , 184 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:V2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:V3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:IA2 = [ '#4e4e4e' , s:guibg2 , 239 , s:termbg2 , '' ]$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive_modified = {$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:N1 = [ '#121212', '#5f87ff', 233, 69  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:N2 = [ '#5f87ff', '#262626', 69 , 235 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:N3 = [ '#5f87ff', '#1c1c1c', 69 , 234, 'bold' ]$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:I1 = [ '#121212', '#00ff87', 233, 48  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:I2 = s:N2$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:I3 = s:N3$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_modified = g:airline#themes#behelit#palette.normal_modified$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_paste = {$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace = copy(g:airline#themes#behelit#palette.insert)$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace.airline_a = [ s:I1[0], '#d70057', s:I1[2], 161, '' ]$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace_modified = g:airline#themes#behelit#palette.insert_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:V1 = [ '#121212', '#5fff5f', 233, 83 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:V2 = s:N2$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:V3 = s:N3$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual_modified = g:airline#themes#behelit#palette.normal_modified$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:IA1 = [ '#4e4e4e', '#1c1c1c', 239, 234, '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:IA2 = [ '#4e4e4e', '#262626', 239, 235, '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:IA3 = [ '#4e4e4e', '#1c1c1c', 239, 234, 'bold' ]$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.inactive_modified = {$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.accents = {$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:WI = [ '#121212', '#d7005f', 233, 161 ]$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal_modified.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_modified.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_paste.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual_modified.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace_modified.airline_warning = s:WI$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette = {}$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.accents = {$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:N1 = [ '#ffffff' , '#005252' , 231  , 36 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:N2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:N3 = [ '#ffffff' , '#002b2b' , 231  , 23 ]$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:I1 = [ '#ffffff' , '#789f00' , 231 , 106 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:I2 = [ '#ffffff' , '#003f3f' , 231 , 29  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:I3 = [ '#ffffff' , '#002b2b' , 231 , 23  ]$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified = {$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_paste = {$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace = copy(g:airline#themes#luna#palette.insert)$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_a = [ s:I2[0]   , '#920000' , s:I2[2] , 88     , ''     ]$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified = g:airline#themes#luna#palette.insert_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:V1 = [ '#ffff9a' , '#ff8036' , 222 , 208 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:V2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:V3 = [ '#ffffff' , '#002b2b' , 231  , 23  ]$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified = {$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:IA = [ '#4e4e4e' , '#002b2b' , 59 , 23 , '' ]$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive_modified = {$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.tabline = {$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:WI = [ '#ffffff', '#5f0000', 231, 88 ]$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal.airline_warning = [$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui00 = "#0b1c2c"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui01 = "#223b54"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui02 = "#405c79"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui03 = "#627e99"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui04 = "#aabcce"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui05 = "#cbd6e2"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui06 = "#e5ebf1"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui07 = "#f7f9fb"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui08 = "#bf8b56"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui09 = "#bfbf56"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0A = "#8bbf56"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0B = "#56bf8b"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0C = "#568bbf"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0D = "#8b56bf"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0E = "#bf568b"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0F = "#bf5656"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm01 = 23$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm02 = 60$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm03 = 66$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm04 = 146$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm05 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm06 = 189$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm08 = 137$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm09 = 143$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0A = 107$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0B = 72$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0C = 67$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0D = 97$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0E = 132$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0F = 131$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
airline#themes#base16_shell#refresh	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^function! airline#themes#base16_shell#refresh()$/;"	f
g:airline#themes#monochrome#palette	plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^let g:airline#themes#monochrome#palette = {}$/;"	v
airline#themes#monochrome#refresh	plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^function! airline#themes#monochrome#refresh()$/;"	f
g:airline#themes#base16_adwaita#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui00 = "#2D3234"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui01 = "#33393B"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui02 = "#4B5356"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui03 = "#566164"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui04 = "#919494"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui05 = "#C5C6C5"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui06 = "#D3D4D5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui07 = "#EEEEEC"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui08 = "#FFA500"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui09 = "#FFFF60"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0A = "#91EE6F"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0B = "#6FEE91"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0C = "#6F91B4"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0D = "#916FB4"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0E = "#EE6F91"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:gui0F = "#EE6F6F"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm01 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm03 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm04 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm05 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm06 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm08 = 180$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm09 = 186$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0A = 150$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0B = 115$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0C = 110$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0D = 140$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0E = 175$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:cterm0F = 174$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_adwaita#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_adwaita#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_adwaita#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_adwaita#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_adwaita#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_adwaita#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_adwaita.vim	/^let g:airline#themes#base16_adwaita#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui00 = "#2f1e2e"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui01 = "#41323f"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui02 = "#4f424c"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui03 = "#776e71"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui04 = "#8d8687"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui05 = "#a39e9b"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui06 = "#b9b6b0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui07 = "#e7e9db"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui08 = "#ef6155"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui09 = "#f99b15"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0A = "#fec418"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0B = "#48b685"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0C = "#5bc4bf"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0D = "#06b6ef"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0E = "#815ba4"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0F = "#e96ba8"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm01 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm02 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm03 = 95$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm05 = 144$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm06 = 145$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm07 = 188$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm08 = 203$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm09 = 208$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0B = 72$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0C = 79$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0D = 39$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0F = 169$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui00 = "#151718"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui01 = "#282a2b"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui02 = "#3B758C"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui03 = "#41535B"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui04 = "#43a5d5"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui05 = "#d6d6d6"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui06 = "#eeeeee"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui08 = "#Cd3f45"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui09 = "#db7b55"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0A = "#e6cd69"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0B = "#9fca56"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0C = "#55dbbe"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0D = "#55b5db"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0E = "#a074c4"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0F = "#8a553f"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm01 = 18$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm02 = 19$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm03 = 8$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm04 = 20$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm05 = 7$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm06 = 21$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm08 = 1$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm09 = 16$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0F = 17$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui04 = "#b0b0b0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui05 = "#d0d0d0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui08 = "#eb008a"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui09 = "#f29333"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0A = "#f8ca12"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0B = "#37b349"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0C = "#00aabb"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0D = "#0e5a94"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0E = "#b31e8d"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0F = "#7a2d00"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm00 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm01 = 234$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm02 = 236$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm03 = 239$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm04 = 249$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm05 = 252$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm06 = 253$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm07 = 15$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm08 = 162$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm09 = 209$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0D = 24$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0E = 126$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0F = 88$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#lucius#palette	plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^let g:airline#themes#lucius#palette = {}$/;"	v
airline#themes#lucius#refresh	plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^function! airline#themes#lucius#refresh()$/;"	f
g:airline#themes#biogoo#palette	plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^let g:airline#themes#biogoo#palette = {}$/;"	v
airline#themes#biogoo#refresh	plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^function! airline#themes#biogoo#refresh()$/;"	f
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:N1 = [ '#e2e2e2' , '#4f3598' , 254 , 56  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:N2 = [ '#ff5fd7' , '#242322' , 206 , 234 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:N3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:I1 = [ '#242322' , '#7eaefd' , 234 , 111 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:I2 = [ '#75d7d8' , '#242322' , 80  , 234 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:I3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert_modified = {$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace = copy(g:airline#themes#kolor#palette.insert)$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace.airline_a = [ s:I2[0]   , '#005154' , s:I2[2] , 23      , ''     ]$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace_modified = {$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:V1 = [ '#242322' , '#e6987a' , 234 , 180 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:V2 = [ '#dbc570' , '#242322' , 186 , 234 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:V3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual_modified = {$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:IA1 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:IA2 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:IA3 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive_modified = {$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.accents = {$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui00 = "#232c31"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui01 = "#1c3657"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui02 = "#2a343a"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui03 = "#3f4944"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui04 = "#84898c"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui05 = "#9ea7a6"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui06 = "#a7cfa3"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui07 = "#b5d8f6"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui08 = "#2a5491"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui09 = "#43820d"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0A = "#a03b1e"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0B = "#237986"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0C = "#b02f30"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0D = "#484d79"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0E = "#c59820"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0F = "#c98344"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm00 = 17$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm01 = 23$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm02 = 23$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm03 = 59$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm04 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm05 = 145$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm06 = 151$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm07 = 153$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm08 = 24$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm09 = 64$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0A = 130$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0B = 30$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0C = 125$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0D = 60$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0E = 172$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0F = 173$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:N1 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:N2 = [ '#000087' , '#00dfff' , 18  , 45  ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:N3 = [ '#005fff' , '#afffff' , 27  , 159 ]$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:I2 = [ '#005f00' , '#00df87' , 22  , 42  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:I3 = [ '#005f5f' , '#afff87' , 23  , 156 ]$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_modified = {$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_paste = {$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace = copy(g:airline#themes#light#palette.insert)$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace.airline_a = [ s:I2[0]   , '#ff0000' , s:I1[2] , 196     , ''     ]$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace_modified = g:airline#themes#light#palette.insert_modified$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:V1 = [ '#ffffff' , '#ff5f00' , 255 , 202 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:V2 = [ '#5f0000' , '#ffaf00' , 52  , 214 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:V3 = [ '#df5f00' , '#ffff87' , 166 , 228 ]$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual_modified = {$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:IA1 = [ '#666666' , '#b2b2b2' , 242 , 249 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:IA2 = [ '#8a8a8a' , '#d0d0d0' , 245 , 252 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:IA3 = [ '#a8a8a8' , '#ffffff' , 248 , 255 , '' ]$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive_modified = {$/;"	v
s:gui_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:cterm_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:gui_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:cterm_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:gui_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:cterm_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:gui_light_gray	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:cterm_light_gray	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_light_gray = 249$/;"	v
s:gui_green	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_green = '#005f87'$/;"	v
s:cterm_green	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_green = 150$/;"	v
s:gui_blue	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:cterm_blue	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_blue = 110$/;"	v
s:gui_purple	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:cterm_purple	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_purple = 146$/;"	v
s:gui_orange	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_orange = '#ffaf87'$/;"	v
s:cterm_orange	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_orange = 216$/;"	v
s:gui_red	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_red = '#d78787'$/;"	v
s:cterm_red	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_red = 174$/;"	v
s:gui_pink	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:cterm_pink	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_pink = 182$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:N3 = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi] " inside text$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal_modified = {$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi] " inside text$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_modified = copy(g:airline#themes#angr#palette.normal_modified)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_paste = {$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace = {$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace_modified = copy(g:airline#themes#angr#palette.insert_modified)$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual_modified = copy(g:airline#themes#angr#palette.insert_modified)$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.inactive_modified = {$/;"	v
s:ER	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:ER = airline#themes#get_highlight2(['ErrorMsg', 'bg'], ['ErrorMsg', 'fg'], 'bold')$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal.airline_warning = [$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal.airline_error = [$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:save_cpo	plugged/vim-airline/plugin/airline.vim	/^let s:save_cpo = &cpo$/;"	v
g:loaded_airline	plugged/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
s:airline_initialized	plugged/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
init	plugged/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
s:active_winnr	plugged/vim-airline/plugin/airline.vim	/^let s:active_winnr = -1$/;"	v
on_window_changed	plugged/vim-airline/plugin/airline.vim	/^function! s:on_window_changed(event)$/;"	f
on_focus_gained	plugged/vim-airline/plugin/airline.vim	/^function! s:on_focus_gained()$/;"	f
on_cursor_moved	plugged/vim-airline/plugin/airline.vim	/^function! s:on_cursor_moved()$/;"	f
on_colorscheme_changed	plugged/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
airline#cmdwinenter	plugged/vim-airline/plugin/airline.vim	/^function! airline#cmdwinenter(...)$/;"	f
airline_toggle	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
get_airline_themes	plugged/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
airline_theme	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
airline_refresh	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_refresh(...)$/;"	f
FocusGainedHandler	plugged/vim-airline/plugin/airline.vim	/^function! s:FocusGainedHandler(timer)$/;"	f
airline_extensions	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_extensions()$/;"	f
rand	plugged/vim-airline/plugin/airline.vim	/^function! s:rand(max) abort$/;"	f
random_theme	plugged/vim-airline/plugin/airline.vim	/^function! s:random_theme() abort$/;"	f
AirlineTheme	plugged/vim-airline/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airline_theme(<f-args>)$/;"	c
AirlineToggleWhitespace	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AirlineToggle	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggle  call s:airline_toggle()$/;"	c
AirlineRefresh	plugged/vim-airline/plugin/airline.vim	/^command! -bar -bang AirlineRefresh call s:airline_refresh(<q-bang>)$/;"	c
AirlineExtensions	plugged/vim-airline/plugin/airline.vim	/^command! AirlineExtensions   call s:airline_extensions()$/;"	c
SectionSpec	plugged/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['ffenc','%{strftime("%H:%M")}'])$/;"	v
g:airline_theme	plugged/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
s:builder	plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
s:builder	plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
g:airline_theme	plugged/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
MyFuncref	plugged/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	plugged/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
MyAppend1	plugged/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	plugged/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
g:airline_statusline_funcrefs	plugged/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_section_a	plugged/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
c	plugged/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
g:airline_inactive_collapse	plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_inactive_collapse	plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
colors	plugged/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
colors	plugged/vim-airline/t/themes.vim	/^      let colors = airline#themes#get_highlight('Foo')$/;"	v
colors	plugged/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
colors	plugged/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
hl	plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
map	plugged/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
map	plugged/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
s:sections	plugged/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
clear	plugged/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
g:airline_section_	plugged/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline#extensions#default#layout	plugged/vim-airline/t/extensions_default.vim	/^let g:airline#extensions#default#layout = [$/;"	v
s:builder	plugged/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
stl	plugged/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
g:airline#extensions#tabline#enabled	plugged/vim-airline/t/extensions_tabline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline_theme	plugged/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
hl	plugged/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	plugged/vim-airline/t/highlighter.vim	/^      let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
Util1	plugged/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	plugged/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	plugged/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
g:count	plugged/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:airline_statusline_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
s:sections	plugged/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z', 'error', 'warning']$/;"	v
s:inactive_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:contexts	plugged/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:core_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
airline#add_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#remove_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#add_inactive_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#load_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#switch_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name, ...)$/;"	f
airline#switch_matching_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#update_statusline	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#update_statusline_focuslost	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_focuslost()$/;"	f
airline#update_statusline_inactive	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline_inactive(range)$/;"	f
invoke_funcrefs	plugged/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
airline#statusline	plugged/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#check_mode	plugged/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#update_tabline	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_tabline()$/;"	f
airline#mode_changed	plugged/vim-airline/autoload/airline.vim	/^function! airline#mode_changed()$/;"	f
s:spc	plugged/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
wrap_accent	plugged/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
create	plugged/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
airline#section#create	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#debug#profile1	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
s:untracked_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:untracked_jobs = {}$/;"	v
s:mq_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:mq_jobs        = {}$/;"	v
s:po_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:po_jobs        = {}$/;"	v
s:clean_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:clean_jobs     = {}$/;"	v
untracked_output	plugged/vim-airline/autoload/airline/async.vim	/^function! s:untracked_output(dict, buf)$/;"	f
airline#async#mq_output	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#mq_output(buf, file)$/;"	f
po_output	plugged/vim-airline/autoload/airline/async.vim	/^function! s:po_output(buf, file)$/;"	f
valid_dir	plugged/vim-airline/autoload/airline/async.vim	/^function! s:valid_dir(dir)$/;"	f
airline#async#vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_untracked(config, file, vcs)$/;"	f
set_clean_variables	plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_variables(file, vcs, val)$/;"	f
set_clean_jobs_variable	plugged/vim-airline/autoload/airline/async.vim	/^function! s:set_clean_jobs_variable(vcs, file, id)$/;"	f
on_exit_clean	plugged/vim-airline/autoload/airline/async.vim	/^function! s:on_exit_clean(...) dict abort$/;"	f
airline#async#vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vcs_clean(cmd, file, vcs)$/;"	f
on_stdout	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
on_exit_mq	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_mq(channel) dict abort$/;"	f
on_exit_untracked	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_untracked(channel) dict abort$/;"	f
on_exit_po	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_po(channel) dict abort$/;"	f
airline#async#get_mq_async	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_mq_async(cmd, file)$/;"	f
airline#async#get_msgfmt_stat	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_msgfmt_stat(cmd, file)$/;"	f
airline#async#vim_vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#vim_vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#vim_vcs_untracked(config, file)$/;"	f
nvim_output_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_output_handler(job_id, data, event) dict$/;"	f
nvim_untracked_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_untracked_job_handler(job_id, data, event) dict$/;"	f
nvim_mq_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_mq_job_handler(job_id, data, event) dict$/;"	f
nvim_po_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_po_job_handler(job_id, data, event) dict$/;"	f
airline#async#nvim_get_mq_async	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_mq_async(cmd, file)$/;"	f
airline#async#nvim_get_msgfmt_stat	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_msgfmt_stat(cmd, file)$/;"	f
airline#async#nvim_vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_vcs_clean(cmd, file, vcs)$/;"	f
airline#async#nvim_vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#nvim_vcs_untracked(cfg, file, vcs)$/;"	f
airline#async#vim7_vcs_clean	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#vim7_vcs_clean(cmd, file, vcs)$/;"	f
s:prototype	plugged/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
prototype.split	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...) dict$/;"	f
prototype.add_section_spaced	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents) dict$/;"	f
prototype.add_section	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents) dict$/;"	f
prototype.add_raw	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text) dict$/;"	f
prototype.insert_section	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_section(group, contents, position) dict$/;"	f
prototype.insert_raw	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_raw(text, position) dict$/;"	f
prototype.get_position	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.get_position() dict$/;"	f
airline#builder#get_prev_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_prev_group(sections, i)$/;"	f
airline#builder#get_next_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_next_group(sections, i)$/;"	f
prototype.build	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build() dict$/;"	f
airline#builder#should_change_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#should_change_group(group1, group2)$/;"	f
get_transitioned_seperator	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
get_seperator	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
get_accented_line	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
section_is_empty	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:section_is_empty(self, content)$/;"	f
airline#builder#new	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#themes#generate_color_map	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#patch	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
check_defined	plugged/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
s:loaded	plugged/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
airline#init#bootstrap	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#sections	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline_lsp_count	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_count(cnt, symbol) abort$/;"	f
airline_lsp_get_line_number	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! s:airline_lsp_get_line_number(cnt, type) abort$/;"	f
airline#extensions#lsp#get	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get(type) abort$/;"	f
airline#extensions#lsp#get_warning	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_warning() abort$/;"	f
airline#extensions#lsp#get_error	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#get_error() abort$/;"	f
s:lsp_progress	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^let s:lsp_progress = []$/;"	v
airline#extensions#lsp#progress	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#progress() abort$/;"	f
s:timer	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^let s:timer = 0$/;"	v
s:ignore_time	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^let s:ignore_time = 0$/;"	v
airline#extensions#lsp#update	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#update() abort$/;"	f
airline#extensions#lsp#init	plugged/vim-airline/autoload/airline/extensions/lsp.vim	/^function! airline#extensions#lsp#init(ext) abort$/;"	f
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:error_symbol = get(g:, 'airline#extensions#neomake#error_symbol', 'E:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#neomake#warning_symbol', 'W:')$/;"	v
get_counts	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! s:get_counts()$/;"	f
airline#extensions#neomake#get_warnings	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_warnings()$/;"	f
airline#extensions#neomake#get_errors	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_errors()$/;"	f
airline#extensions#neomake#init	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#init(ext)$/;"	f
s:tmuxline_snapshot_file	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
airline#extensions#tmuxline#init	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
airline#extensions#poetv#init	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#init(ext)$/;"	f
airline#extensions#poetv#apply	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#apply(...)$/;"	f
airline#extensions#poetv#update	plugged/vim-airline/autoload/airline/extensions/poetv.vim	/^function! airline#extensions#poetv#update()$/;"	f
s:denite_ver	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^let s:denite_ver = (exists('*denite#get_status_mode') ? 2 : 3)$/;"	v
airline#extensions#denite#check_denite_mode	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#check_denite_mode(bufnr) abort$/;"	f
airline#extensions#denite#apply	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#apply(...) abort$/;"	f
airline#extensions#denite#init	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#init(ext) abort$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^let s:spc = g:airline_symbols.space$/;"	v
g:airline#extensions#obsession#indicator_text	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^  let g:airline#extensions#obsession#indicator_text = '$'$/;"	v
airline#extensions#obsession#init	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#init(ext)$/;"	f
airline#extensions#obsession#get_status	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#get_status()$/;"	f
g:loaded_vim_airline_zoomwintab	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let g:loaded_vim_airline_zoomwintab = 1$/;"	v
s:zoomwintab_status_zoomed_in	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_in =$/;"	v
s:zoomwintab_status_zoomed_out	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^let s:zoomwintab_status_zoomed_out =$/;"	v
airline#extensions#zoomwintab#apply	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#apply(...) abort$/;"	f
airline#extensions#zoomwintab#init	plugged/vim-airline/autoload/airline/extensions/zoomwintab.vim	/^function! airline#extensions#zoomwintab#init(ext) abort$/;"	f
s:non_zero_only	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:hunk_symbols	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
coc_git_enabled	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:coc_git_enabled() abort$/;"	f
get_hunks_signify	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify() abort$/;"	f
get_hunks_coc	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_coc() abort$/;"	f
is_branch_empty	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty() abort$/;"	f
get_hunks_gitgutter	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter() abort$/;"	f
get_hunks_changes	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes() abort$/;"	f
get_hunks_empty	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty() abort$/;"	f
airline#extensions#hunks#get_raw_hunks	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_raw_hunks() abort$/;"	f
airline#extensions#hunks#get_hunks	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks() abort$/;"	f
airline#extensions#hunks#init	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext) abort$/;"	f
airline#extensions#gen_tags#status	plugged/vim-airline/autoload/airline/extensions/gen_tags.vim	/^function! airline#extensions#gen_tags#status(...) abort$/;"	f
airline#extensions#gen_tags#init	plugged/vim-airline/autoload/airline/extensions/gen_tags.vim	/^function! airline#extensions#gen_tags#init(ext) abort$/;"	f
airline#extensions#gutentags#status	plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#status()$/;"	f
airline#extensions#gutentags#init	plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#init(ext)$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:section_a	plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_a = airline#section#create_left(['terminal', 'tmode'])$/;"	v
s:section_z	plugged/vim-airline/autoload/airline/extensions/term.vim	/^let s:section_z = airline#section#create(['linenr', 'maxlinenr'])$/;"	v
airline#extensions#term#apply	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#apply(...) abort$/;"	f
airline#extensions#term#inactive_apply	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#inactive_apply(...) abort$/;"	f
airline#extensions#term#termmode	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#termmode() abort$/;"	f
termname	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:termname(bufnr) abort$/;"	f
neoterm_id	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! s:neoterm_id(bufnr) abort$/;"	f
airline#extensions#term#init	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#init(ext) abort$/;"	f
airline#extensions#po#shorten	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#shorten()$/;"	f
airline#extensions#po#on_winenter	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#on_winenter()$/;"	f
airline#extensions#po#apply	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#apply(...)$/;"	f
airline#extensions#po#stats	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#stats()$/;"	f
airline#extensions#po#init	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#init(ext)$/;"	f
g:loaded_cursormode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let g:loaded_cursormode = 1$/;"	v
s:is_win	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_iTerm	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_iTerm = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'iTerm.app'$/;"	v
s:is_AppleTerminal	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_AppleTerminal = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'Apple_Terminal'$/;"	v
s:is_good	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_good = !has('gui_running') && !s:is_win && !s:is_AppleTerminal$/;"	v
s:last_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:last_mode = ''$/;"	v
g:cursormode_exit_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^  let g:cursormode_exit_mode='n'$/;"	v
airline#extensions#cursormode#tmux_escape	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#tmux_escape(escape)$/;"	f
s:iTerm_escape_template	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:iTerm_escape_template = '\\033]Pl%s\\033\\\\'$/;"	v
s:xterm_escape_template	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:xterm_escape_template = '\\033]12;%s\\007'$/;"	v
get_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_mode()$/;"	f
airline#extensions#cursormode#set	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#set(...)$/;"	f
set_cursor_color_for	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:set_cursor_color_for(mode)$/;"	f
build_command	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:build_command(color)$/;"	f
get_color_map	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_color_map()$/;"	f
airline	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^augroup airline#extensions#cursormode$/;"	a
airline#extensions#cursormode#activate	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#activate()$/;"	f
airline#extensions#cursormode#apply	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#apply(...)$/;"	f
airline#extensions#cursormode#init	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#init(ext)$/;"	f
airline#extensions#wordcount#formatters#default#update_fmt	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#update_fmt(...)$/;"	f
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = '.'$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^  let s:decimal_group = ''$/;"	v
airline#extensions#wordcount#formatters#default#to_string	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#to_string(wordcount)$/;"	f
airline#extensions#wordcount#formatters#readingtime#update_fmt	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#update_fmt(...) abort$/;"	f
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ','$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = '.'$/;"	v
s:decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^  let s:decimal_group = ''$/;"	v
airline#extensions#wordcount#formatters#readingtime#to_string	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/readingtime.vim	/^function! airline#extensions#wordcount#formatters#readingtime#to_string(wordcount) abort$/;"	f
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:error_symbol = get(g:, 'airline#extensions#coc#error_symbol', 'E:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#coc#warning_symbol', 'W:')$/;"	v
airline#extensions#coc#get_warning	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_warning() abort$/;"	f
airline#extensions#coc#get_error	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_error() abort$/;"	f
airline#extensions#coc#get	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get(type) abort$/;"	f
airline#extensions#coc#get_status	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_status() abort$/;"	f
airline#extensions#coc#get_current_function	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#get_current_function() abort$/;"	f
airline#extensions#coc#init	plugged/vim-airline/autoload/airline/extensions/coc.vim	/^function! airline#extensions#coc#init(ext) abort$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
airline#extensions#virtualenv#init	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#virtualenv#apply	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#update	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#update()$/;"	f
s:prompt_snapshot_file	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
airline#extensions#promptline#init	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#keymap#status	plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#status()$/;"	f
airline#extensions#keymap#init	plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#init(ext)$/;"	f
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:error_symbol = get(g:, 'airline#extensions#languageclient#error_symbol', 'E:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#languageclient#warning_symbol', 'W:')$/;"	v
s:show_line_numbers	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:show_line_numbers = get(g:, 'airline#extensions#languageclient#show_line_numbers', 1)$/;"	v
s:severity_error	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_error = 1$/;"	v
s:severity_warning	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_warning = 2$/;"	v
s:severity_info	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_info = 3$/;"	v
s:severity_hint	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:severity_hint = 4$/;"	v
s:diagnostics	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^let s:diagnostics = {}$/;"	v
languageclient_refresh	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:languageclient_refresh()$/;"	f
record_diagnostics	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:record_diagnostics(state)$/;"	f
get_diagnostics	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:get_diagnostics()$/;"	f
diagnostics_for_buffer	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:diagnostics_for_buffer()$/;"	f
airline_languageclient_count	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_count(cnt, symbol)$/;"	f
airline_languageclient_get_line_number	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! s:airline_languageclient_get_line_number(type) abort$/;"	f
airline#extensions#languageclient#get	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get(type)$/;"	f
airline#extensions#languageclient#get_warning	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_warning()$/;"	f
airline#extensions#languageclient#get_error	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#get_error()$/;"	f
airline#extensions#languageclient#init	plugged/vim-airline/autoload/airline/extensions/languageclient.vim	/^function! airline#extensions#languageclient#init(ext)$/;"	f
s:flags	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:init	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:init=0$/;"	v
airline#extensions#tagbar#get_status	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
s:airline_tagbar_last_lookup_time	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
airline#extensions#tagbar#currenttag	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#init	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:error_symbol = get(g:, 'airline#extensions#syntastic#error_symbol', 'E:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#syntastic#warning_symbol', 'W:')$/;"	v
airline#extensions#syntastic#get_warning	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warning()$/;"	f
airline#extensions#syntastic#get_error	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_error()$/;"	f
airline#extensions#syntastic#get	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get(type)$/;"	f
airline#extensions#syntastic#init	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#unicode#apply	plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#apply(...)$/;"	f
airline#extensions#unicode#init	plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#init(ext)$/;"	f
airline#extensions#vista#currenttag	plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#currenttag() abort$/;"	f
airline#extensions#vista#init	plugged/vim-airline/autoload/airline/extensions/vista.vim	/^function! airline#extensions#vista#init(ext) abort$/;"	f
airline#extensions#gina#apply	plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#apply(...) abort$/;"	f
airline#extensions#gina#init	plugged/vim-airline/autoload/airline/extensions/gina.vim	/^function! airline#extensions#gina#init(ext) abort$/;"	f
airline#extensions#ctrlspace#statusline	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...) abort$/;"	f
airline#extensions#ctrlspace#init	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext) abort$/;"	f
airline#extensions#fern#apply	plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#apply(...) abort$/;"	f
airline#extensions#fern#init	plugged/vim-airline/autoload/airline/extensions/fern.vim	/^function! airline#extensions#fern#init(ext) abort$/;"	f
airline#extensions#fzf#init	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#init(ext) abort$/;"	f
airline#extensions#fzf#statusline	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#statusline(...) abort$/;"	f
airline#extensions#fzf#apply	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#apply(...) abort$/;"	f
airline#extensions#fzf#inactive_apply	plugged/vim-airline/autoload/airline/extensions/fzf.vim	/^function! airline#extensions#fzf#inactive_apply(...) abort$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^let s:spc = g:airline_symbols.space$/;"	v
SetDefault	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! s:SetDefault(var, val)$/;"	f
airline#extensions#vimtex#init	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#init(ext)$/;"	f
airline#extensions#vimtex#apply	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#apply(...)$/;"	f
airline#extensions#vimtex#get_scope	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#get_scope()$/;"	f
s:taboo	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
g:taboo_tabline	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
s:ctrlspace	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:ctrlspace = get(g:, 'CtrlSpaceLoaded', 0)$/;"	v
s:tabws	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:tabws = get(g:, 'tabws_loaded', 0)$/;"	v
airline#extensions#tabline#init	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
toggle_off	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
toggle_on	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
update_tabline	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:update_tabline(forceit)$/;"	f
airline#extensions#tabline#redraw	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#redraw()$/;"	f
airline#extensions#tabline#enable	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#enable()$/;"	f
airline#extensions#tabline#load_theme	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
s:current_tabcnt	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
airline#extensions#tabline#get	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#title	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tabline#get_buffer_name	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr, ...)$/;"	f
airline#extensions#tabline#new_builder	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#group_of_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#group_of_bufnr(tab_bufs, bufnr)$/;"	f
airline#extensions#tabline#add_label	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_label(dict, type, right)$/;"	f
airline#extensions#tabline#add_tab_label	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_tab_label(dict)$/;"	f
s:enabled	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:enabled = get(g:, 'airline#extensions#localsearch#enabled', 1)$/;"	v
g:airline#extensions#localsearch#loaded	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#loaded = 001$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:spc = g:airline_symbols.space$/;"	v
g:airline#extensions#localsearch#inverted	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#inverted = get(g:, 'airline#extensions#localsearch#inverted', 0)$/;"	v
airline#extensions#localsearch#load_theme	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#load_theme(palette) abort$/;"	f
airline#extensions#localsearch#init	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#init(ext) abort$/;"	f
airline#extensions#localsearch#apply	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#apply(...) abort$/;"	f
airline#extensions#battery#status	plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#status(...) abort$/;"	f
airline#extensions#battery#init	plugged/vim-airline/autoload/airline/extensions/battery.vim	/^function! airline#extensions#battery#init(ext) abort$/;"	f
airline_nvimlsp_count	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! s:airline_nvimlsp_count(cnt, symbol) abort$/;"	f
airline#extensions#nvimlsp#get	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get(type) abort$/;"	f
airline#extensions#nvimlsp#get_warning	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_warning() abort$/;"	f
airline#extensions#nvimlsp#get_error	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#get_error() abort$/;"	f
airline#extensions#nvimlsp#init	plugged/vim-airline/autoload/airline/extensions/nvimlsp.vim	/^function! airline#extensions#nvimlsp#init(ext) abort$/;"	f
airline#extensions#nrrwrgn#apply	plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
g:airline#extensions#example#number_of_cats	plugged/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
airline#extensions#example#init	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#example#apply	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#undotree#apply	plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#capslock#status	plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#capslock#init	plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
get_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^  function! s:get_wordcount(visual_mode_active)$/;"	f
get_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^  function! s:get_wordcount(visual_mode_active)$/;"	f
s:formatter	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:formatter = get(g:, 'airline#extensions#wordcount#formatter', 'default')$/;"	v
format_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:format_wordcount(wordcount)$/;"	f
s:formatter	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      let s:formatter = 'default'$/;"	v
format_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^      function! s:format_wordcount(_)$/;"	f
s:wordcount_cache	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:wordcount_cache = 0  " cache wordcount for performance when force_update=0$/;"	v
update_wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:update_wordcount(force_update)$/;"	f
airline#extensions#wordcount#get	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function airline#extensions#wordcount#get()$/;"	f
airline#extensions#wordcount#apply	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#apply(...)$/;"	f
airline#extensions#wordcount#init	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#init(ext)$/;"	f
s:column_display	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
airline#extensions#csv#get_column	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#apply	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#init	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#grepper#status	plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#status()$/;"	f
airline#extensions#grepper#init	plugged/vim-airline/autoload/airline/extensions/grepper.vim	/^function! airline#extensions#grepper#init(ext)$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^let s:spc = g:airline_symbols.space$/;"	v
airline#extensions#dirvish#init	plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#init(ext) abort$/;"	f
airline#extensions#dirvish#apply	plugged/vim-airline/autoload/airline/extensions/dirvish.vim	/^function! airline#extensions#dirvish#apply(...) abort$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
g:airline#extensions#windowswap#indicator_text	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
airline#extensions#windowswap#init	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#extensions#windowswap#get_status	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#bufferline#init	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ycm#error_symbol', 'E:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ycm#warning_symbol', 'W:')$/;"	v
airline#extensions#ycm#init	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#init(ext)$/;"	f
airline#extensions#ycm#get_error_count	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_error_count() abort$/;"	f
airline#extensions#ycm#get_warning_count	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_warning_count()$/;"	f
s:section_use_groups	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_use_groups     = get(g:, 'airline#extensions#default#section_use_groupitems', 1)$/;"	v
s:section_truncate_width	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:layout	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
get_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
build_sections	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
add_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
add_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
airline#extensions#default#apply	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#netrw#apply	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
s:prototype	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype = {}$/;"	v
prototype.insert_titles	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.insert_titles(current, first, last) dict$/;"	f
prototype.try_insert_title	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.try_insert_title(index, group, pos, sep_size, force) dict$/;"	f
get_separator_change	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change(new_group, old_group, end_group, sep_size, alt_sep_size)$/;"	f
get_separator_change_with_end	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change_with_end(new_group, old_group, new_end_group, old_end_group, sep_size, alt_sep_size)$/;"	f
prototype.build	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.build() dict$/;"	f
s:prototype	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype.overflow_group = 'airline_tab'$/;"	v
evaluate_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:evaluate_tabline(tabline)$/;"	f
tabline_evaluated_length	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:tabline_evaluated_length(tabline)$/;"	f
airline#extensions#tabline#builder#new	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! airline#extensions#tabline#builder#new(context)$/;"	f
s:show_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:buf_min_count	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:tab_min_count	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
airline#extensions#tabline#autoshow#off	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
show_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_bufnr = -1$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_modified = 0$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:current_tabline = ''$/;"	v
s:highlight_groups	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
airline#extensions#tabline#tabws#off	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#off()$/;"	f
airline#extensions#tabline#tabws#on	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#on()$/;"	f
airline#extensions#tabline#tabws#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#invalidate()$/;"	f
airline#extensions#tabline#tabws#add_buffer_section	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_buffer_section(builder, cur_tab, cur_buf, pull_right)$/;"	f
airline#extensions#tabline#tabws#add_tab_section	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#tabws#get	plugged/vim-airline/autoload/airline/extensions/tabline/tabws.vim	/^function! airline#extensions#tabline#tabws#get()$/;"	f
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_bufnr = -1$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_modified = 0$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabline = ''$/;"	v
s:highlight_groups	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:highlight_groups = ['hid', 0, '', 'sel', 'mod_unsel', 0, 'mod_unsel', 'mod']$/;"	v
airline#extensions#tabline#ctrlspace#off	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#off()$/;"	f
airline#extensions#tabline#ctrlspace#on	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#on()$/;"	f
airline#extensions#tabline#ctrlspace#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#invalidate()$/;"	f
airline#extensions#tabline#ctrlspace#add_buffer_section	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_buffer_section(builder, cur_tab, cur_buf, pull_right)$/;"	f
airline#extensions#tabline#ctrlspace#add_tab_section	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_tab_section(builder, pull_right)$/;"	f
airline#extensions#tabline#ctrlspace#get	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#get()$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_visible_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:number_map	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = {$/;"	v
s:number_map	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
airline#extensions#tabline#buffers#off	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buffers#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#get	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
b.get_pretitle	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_pretitle(i) dict$/;"	f
b.get_posttitle	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_posttitle(i) dict$/;"	f
b.get_title	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_title(i) dict$/;"	f
current_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let current_buffer = max([index(b.buffers, cur), 0])$/;"	v
last_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let last_buffer = len(b.buffers) - 1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_bufnr = cur$/;"	v
s:column_width	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:column_width = &columns$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_tabline = b.build()$/;"	v
s:current_visible_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_visible_buffers = copy(b.buffers)$/;"	v
get_number	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:get_number(index)$/;"	f
select_tab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
jump_to_tab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
map_keys	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:map_keys()$/;"	f
airline#extensions#tabline#buffers#clickbuf	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#clickbuf(minwid, clicks, button, modifiers) abort$/;"	f
s:skip_symbol	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
airline#extensions#tabline#formatters#unique_tail_improved#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#tabnr#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/tabnr.vim	/^function! airline#extensions#tabline#formatters#tabnr#format(tab_nr_type, nr)$/;"	f
s:fnamecollapse	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
airline#extensions#tabline#formatters#short_path#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/short_path.vim	/^function! airline#extensions#tabline#formatters#short_path#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#jsformatter#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/jsformatter.vim	/^function! airline#extensions#tabline#formatters#jsformatter#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#xtabline#init	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#init()$/;"	f
airline#extensions#tabline#xtabline#maps	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#maps()$/;"	f
<Plug>XTablineToggleTabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleTabs <SID>ToggleTabs$/;"	m
<SID>ToggleTabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleTabs :call airline#extensions#tabline#xtabline#toggle_tabs()<cr>$/;"	m
<Plug>XTablineToggleFiltering	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleFiltering <SID>ToggleFiltering$/;"	m
<SID>ToggleFiltering	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleFiltering :call airline#extensions#tabline#xtabline#toggle_buffers()<cr>$/;"	m
<Plug>XTablineSelectBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineSelectBuffer <SID>SelectBuffer$/;"	m
<SID>SelectBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>SelectBuffer g:xtabline_changing_buffer ? "\\<C-c>" : ":<C-u>call airline#extensions#tabline#xtabline#select_buffer(v:count)\\<cr>"$/;"	m
<Plug>XTablineNextBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineNextBuffer <SID>NextBuffer$/;"	m
<SID>NextBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>NextBuffer airline#extensions#tabline#xtabline#next_buffer(v:count1)$/;"	m
<Plug>XTablinePrevBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablinePrevBuffer <SID>PrevBuffer$/;"	m
<SID>PrevBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>PrevBuffer airline#extensions#tabline#xtabline#prev_buffer(v:count1)$/;"	m
<Plug>XTablineReopen	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineReopen <SID>ReopenLastTab$/;"	m
<SID>ReopenLastTab	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ReopenLastTab :XTabReopen<cr>$/;"	m
<leader>cdc	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdc <Plug>XTablineCdCurrent$/;"	m
<leader>cdd	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdd <Plug>XTablineCdDown1$/;"	m
<leader>cd2	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd2 <Plug>XTablineCdDown2$/;"	m
<leader>cd3	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd3 <Plug>XTablineCdDown3$/;"	m
<leader>cdh	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdh <Plug>XTablineCdHome$/;"	m
<Plug>XTablineCdCurrent	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdCurrent :cd %:p:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown1	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown1   :cd %:p:h:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown2	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown2   :cd %:p:h:h:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown3	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown3   :cd %:p:h:h:h:h<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdHome	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdHome    :cd ~<cr>:call airline#util#doautocmd('BufAdd')<cr>:pwd<cr>$/;"	m
airline#extensions#tabline#xtabline#toggle_tabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_tabs()$/;"	f
airline#extensions#tabline#xtabline#toggle_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_buffers()$/;"	f
airline#extensions#tabline#xtabline#reopen_last_tab	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	f
airline#extensions#tabline#xtabline#filter_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#filter_buffers()$/;"	f
airline#extensions#tabline#xtabline#next_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#next_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#prev_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#prev_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#select_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#select_buffer(nr)$/;"	f
TabBuffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:TabBuffers()$/;"	f
NotEnoughBuffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:NotEnoughBuffers()$/;"	f
RefreshTabline	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:RefreshTabline()$/;"	f
InitCwds	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:InitCwds()$/;"	f
airline#extensions#tabline#xtabline#update_obsession	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#update_obsession()$/;"	f
Do	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:Do(action)$/;"	f
s:spc	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
airline#extensions#tabline#tabs#off	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#tabs#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#get	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
b.get_title	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_title(i) dict$/;"	f
buffers	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^    let buffers = tabpagebuflist(curtab)$/;"	v
group	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^      let group = airline#extensions#tabline#group_of_bufnr(buffers, nr) . "_right"$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_bufnr = curbuf$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_tabnr = curtab$/;"	v
s:column_width	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:column_width = &columns$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_tabline = b.build()$/;"	v
airline#extensions#tabline#tabs#map_keys	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#map_keys()$/;"	f
airline#extensions#tabline#tabs#tabnr_formatter	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#tabnr_formatter(nr, i) abort$/;"	f
airline#extensions#tabline#buflist#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#clean	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#clean()$/;"	f
ExcludePaths	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludePaths(nr, exclude_paths)$/;"	f
ExcludeOther	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludeOther(nr, exclude_preview)$/;"	f
airline#extensions#tabline#buflist#list	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#unite#apply	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
s:show_message	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:symbol	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:default_checks	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing', 'mixed-indent-file', 'conflicts']$/;"	v
s:enabled	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:skip_check_ft	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:skip_check_ft = {'make': ['indent', 'mixed-indent-file'],$/;"	v
check_mixed_indent	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
check_mixed_indent_file	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent_file()$/;"	f
conflict_marker	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:conflict_marker()$/;"	f
airline#extensions#whitespace#check	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#toggle	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#whitespace#disable	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#disable()$/;"	f
airline#extensions#whitespace#init	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
ws_refresh	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:ws_refresh()$/;"	f
airline#extensions#searchcount#init	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#init(ext) abort$/;"	f
airline#extensions#searchcount#apply	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#apply(...) abort$/;"	f
search_term	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! s:search_term()$/;"	f
airline#extensions#searchcount#status	plugged/vim-airline/autoload/airline/extensions/searchcount.vim	/^function! airline#extensions#searchcount#status() abort$/;"	f
airline#extensions#vimcmake#init	plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#init(ext) abort$/;"	f
airline#extensions#vimcmake#apply	plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#apply(...) abort$/;"	f
airline#extensions#vimcmake#inactive_apply	plugged/vim-airline/autoload/airline/extensions/vimcmake.vim	/^function! airline#extensions#vimcmake#inactive_apply(...) abort$/;"	f
s:commit_mode	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^let s:commit_mode = {'ST': 'STAGING', 'CC': 'COMMIT', 'CA': 'AMEND'}$/;"	v
airline#extensions#vimagit#init	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#init(ext) abort$/;"	f
airline#extensions#vimagit#get_mode	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#get_mode() abort$/;"	f
airline#extensions#vimagit#apply	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#apply(...) abort$/;"	f
airline#extensions#xkblayout#status	plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#status()$/;"	f
airline#extensions#xkblayout#init	plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#init(ext)$/;"	f
airline#extensions#commandt#apply	plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#bookmark#currentbookmark	plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#currentbookmark() abort$/;"	f
airline#extensions#bookmark#init	plugged/vim-airline/autoload/airline/extensions/bookmark.vim	/^function! airline#extensions#bookmark#init(ext) abort$/;"	f
airline#extensions#omnisharp#server_status	plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#server_status(...) abort$/;"	f
airline#extensions#omnisharp#init	plugged/vim-airline/autoload/airline/extensions/omnisharp.vim	/^function! airline#extensions#omnisharp#init(ext) abort$/;"	f
ModifierFlags	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! s:ModifierFlags()$/;"	f
airline#extensions#fugitiveline#bufname	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#bufname()$/;"	f
airline#extensions#fugitiveline#init	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#init(ext)$/;"	f
g:airline#extensions#quickfix#quickfix_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#quickfix#location_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
airline#extensions#quickfix#apply	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#init	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#quickfix#inactive_qf_window	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#inactive_qf_window(...)$/;"	f
airline#extensions#quickfix#get_type	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#get_type()$/;"	f
s:vcs_config	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:vcs_config = {$/;"	v
init_buffer	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:init_buffer()$/;"	f
s:head_format	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
format_name	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
format_name	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
format_name	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
format_name	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
s:names	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:names = {'0': 'index', '1': 'orig', '2':'fetch', '3':'merge'}$/;"	v
s:sha1size	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:sha1size = get(g:, 'airline#extensions#branch#sha1_len', 7)$/;"	v
update_git_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_git_branch()$/;"	f
config_fugitive_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:config_fugitive_branch() abort$/;"	f
config_gina_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:config_gina_branch() abort$/;"	f
display_git_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_git_branch()$/;"	f
update_hg_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_hg_branch()$/;"	f
display_hg_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_hg_branch()$/;"	f
update_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_branch()$/;"	f
airline#extensions#branch#update_untracked_config	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#update_untracked_config(file, vcs)$/;"	f
update_untracked	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_untracked()$/;"	f
airline#extensions#branch#head	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#get_head	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
reset_untracked_cache	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:reset_untracked_cache(shellcmdpost)$/;"	f
airline#extensions#branch#init	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#eclim#creat_line	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline_ale_count	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_count(cnt, symbol)$/;"	f
legacy_airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:legacy_airline_ale_get_line_number(cnt, type) abort$/;"	f
new_airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:new_airline_ale_get_line_number(cnt, type) abort$/;"	f
airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_get_line_number(cnt, type) abort$/;"	f
airline#extensions#ale#get	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get(type)$/;"	f
airline#extensions#ale#get_warning	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_warning()$/;"	f
airline#extensions#ale#get_error	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_error()$/;"	f
airline#extensions#ale#init	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#init(ext)$/;"	f
ale_refresh	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:ale_refresh()$/;"	f
s:color_template	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
airline#extensions#ctrlp#generate_color_map	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#load_theme	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#apply	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#init	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
s:loaded_ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:loaded_ext = []$/;"	v
s:ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
ext.add_statusline_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
ext.add_statusline_funcref	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
ext.add_inactive_statusline_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
ext.add_theme_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
s:script_path	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = [ get(g:, 'NERDTreeStatusline', 'NERD'), '' ]$/;"	v
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^  let s:filetype_overrides['nerdtree'] = ['NERDTree', '']$/;"	v
s:filetype_regex_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
check_defined_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
airline#extensions#append_to_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#prepend_to_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#apply_left_override	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#apply	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
is_excluded_window	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
airline#extensions#load_theme	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#load	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#get_loaded_extensions	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#get_loaded_extensions()$/;"	f
airline#formatter#short_path#format	plugged/vim-airline/autoload/airline/formatter/short_path.vim	/^function! airline#formatter#short_path#format(val) abort$/;"	f
s:is_win32term	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) &&$/;"	v
s:separators	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:accents	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:hl_groups	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:hl_groups = {}$/;"	v
gui2cui	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback) abort$/;"	f
group_not_done	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:group_not_done(list, name) abort$/;"	f
get_syn	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what, mode) abort$/;"	f
get_array	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(guifg, guibg, ctermfg, ctermbg, opts) abort$/;"	f
airline#highlighter#reset_hlcache	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#reset_hlcache() abort$/;"	f
airline#highlighter#get_highlight	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...) abort$/;"	f
airline#highlighter#get_highlight2	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...) abort$/;"	f
hl_group_exists	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:hl_group_exists(group) abort$/;"	f
airline#highlighter#exec	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors) abort$/;"	f
CheckDefined	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:CheckDefined(colors) abort$/;"	f
GetHiCmd	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:GetHiCmd(list) abort$/;"	f
exec_separator	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix) abort$/;"	f
airline#highlighter#load_theme	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme() abort$/;"	f
airline#highlighter#add_separator	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse) abort$/;"	f
airline#highlighter#add_accent	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent) abort$/;"	f
airline#highlighter#highlight_modified_inactive	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr) abort$/;"	f
airline#highlighter#highlight	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes, ...) abort$/;"	f
s:spc	plugged/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:nomodeline	plugged/vim-airline/autoload/airline/util.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has("patch438"))) ? '<nomodeline>' : ''$/;"	v
s:has_strchars	plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strchars = exists('*strchars')$/;"	v
s:has_strcharpart	plugged/vim-airline/autoload/airline/util.vim	/^let s:has_strcharpart = exists('*strcharpart')$/;"	v
s:focusgained_ignore_time	plugged/vim-airline/autoload/airline/util.vim	/^let s:focusgained_ignore_time = 0$/;"	v
airline#util#winwidth	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#winwidth(...)$/;"	f
airline#util#shorten	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#shorten(text, winwidth, minwidth, ...)$/;"	f
airline#util#wrap	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline#util#append	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#warning	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#warning(msg)$/;"	f
airline#util#prepend	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#getbufvar	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getbufvar(bufnr, key, def)$/;"	f
airline#util#getbufvar	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getbufvar(bufnr, key, def)$/;"	f
airline#util#getwinvar	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#getwinvar	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#exec_funcrefs	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#exec_funcrefs	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#strchars	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strchars(str)$/;"	f
airline#util#strcharpart	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strcharpart(...)$/;"	f
airline#util#ignore_buf	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_buf(name)$/;"	f
airline#util#has_fugitive	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_fugitive()$/;"	f
airline#util#has_gina	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_gina()$/;"	f
airline#util#has_lawrencium	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_lawrencium()$/;"	f
airline#util#has_vcscommand	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_vcscommand()$/;"	f
airline#util#has_custom_scm	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#has_custom_scm()$/;"	f
airline#util#doautocmd	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#doautocmd(event)$/;"	f
airline#util#themes	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#themes(match)$/;"	f
airline#util#stl_disabled	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#stl_disabled(winnr)$/;"	f
airline#util#ignore_next_focusgain	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_next_focusgain()$/;"	f
airline#util#try_focusgained	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#try_focusgained()$/;"	f
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
s:airline_a_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_normal   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:airline_b_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_normal   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_c_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_normal   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:airline_a_normal, s:airline_b_normal, s:airline_c_normal)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
s:airline_a_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_insert = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:airline_b_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_insert = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:airline_c_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_insert = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:airline_a_insert, s:airline_b_insert, s:airline_c_insert)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.terminal = airline#themes#generate_color_map(s:airline_a_insert, s:airline_b_insert, s:airline_c_insert)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:airline_b_insert[0]   , '#af0000' , s:airline_b_insert[2] , 124     , ''     ]$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modified$/;"	v
s:airline_a_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_visual = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:airline_b_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_visual = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:airline_c_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_visual = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:airline_a_visual, s:airline_b_visual, s:airline_c_visual)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
s:airline_a_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_inactive = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:airline_b_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_inactive = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:airline_c_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_inactive = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:airline_a_inactive, s:airline_b_inactive, s:airline_c_inactive)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
s:airline_a_commandline	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_commandline = [ '#00005f' , '#00d700' , 17  , 40 ]$/;"	v
s:airline_b_commandline	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_commandline = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_c_commandline	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_commandline = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.commandline = airline#themes#generate_color_map(s:airline_a_commandline, s:airline_b_commandline, s:airline_c_commandline)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^  let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
s:parts	plugged/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
airline#parts#define	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_function	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_text	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#define_raw	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_minwidth	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_condition	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_accent	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_empty	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#get	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#mode	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#crypt	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#crypt()$/;"	f
airline#parts#paste	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#spell	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#spell()$/;"	f
airline#parts#iminsert	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#readonly	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#parts#filetype	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#ffenc	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
s:basic16	plugged/vim-airline/autoload/airline/msdos.vim	/^let s:basic16 = [$/;"	v
airline#msdos#round_msdos_colors	plugged/vim-airline/autoload/airline/msdos.vim	/^function! airline#msdos#round_msdos_colors(rgblist)$/;"	f
g:loaded_endwise	plugged/vim-endwise/plugin/endwise.vim	/^let g:loaded_endwise = 1$/;"	v
abbrev	plugged/vim-endwise/plugin/endwise.vim	/^function! s:abbrev()$/;"	f
teardownMappings	plugged/vim-endwise/plugin/endwise.vim	/^function! s:teardownMappings()$/;"	f
EndwiseDiscretionary	plugged/vim-endwise/plugin/endwise.vim	/^function! EndwiseDiscretionary()$/;"	f
EndwiseAlways	plugged/vim-endwise/plugin/endwise.vim	/^function! EndwiseAlways()$/;"	f
<SID>DiscretionaryEnd	plugged/vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>DiscretionaryEnd <C-R>=<SID>crend(0)<CR>$/;"	m
<SID>AlwaysEnd	plugged/vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>AlwaysEnd        <C-R>=<SID>crend(1)<CR>$/;"	m
<Plug>DiscretionaryEnd	plugged/vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>DiscretionaryEnd <SID>DiscretionaryEnd$/;"	m
<Plug>AlwaysEnd	plugged/vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>AlwaysEnd        <SID>AlwaysEnd$/;"	m
<C-X><CR>	plugged/vim-endwise/plugin/endwise.vim	/^    imap <script> <C-X><CR> <CR><SID>AlwaysEnd$/;"	m
<CR>	plugged/vim-endwise/plugin/endwise.vim	/^    imap <CR> <CR><Plug>DiscretionaryEnd$/;"	m
mysearchpair	plugged/vim-endwise/plugin/endwise.vim	/^function! s:mysearchpair(beginpat,endpat,synidpat)$/;"	f
crend	plugged/vim-endwise/plugin/endwise.vim	/^function! s:crend(always)$/;"	f
synid	plugged/vim-endwise/plugin/endwise.vim	/^function! s:synid()$/;"	f
RunTest	plugged/vim-rooter/test/runner.vim	/^function RunTest(test)$/;"	f
Log	plugged/vim-rooter/test/runner.vim	/^function Log(msg)$/;"	f
Debug	plugged/vim-rooter/test/runner.vim	/^function Debug(msg)$/;"	f
Shuffle	plugged/vim-rooter/test/runner.vim	/^function Shuffle(list)$/;"	f
Random	plugged/vim-rooter/test/runner.vim	/^function Random(min, max)$/;"	f
g:testname	plugged/vim-rooter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
s:errored	plugged/vim-rooter/test/runner.vim	/^let s:errored = 0$/;"	v
s:done	plugged/vim-rooter/test/runner.vim	/^let s:done = 0$/;"	v
s:fail	plugged/vim-rooter/test/runner.vim	/^let s:fail = 0$/;"	v
s:errors	plugged/vim-rooter/test/runner.vim	/^let s:errors = 0$/;"	v
s:messages	plugged/vim-rooter/test/runner.vim	/^let s:messages = []$/;"	v
s:errors	plugged/vim-rooter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:tests	plugged/vim-rooter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:tests	plugged/vim-rooter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:done	plugged/vim-rooter/test/runner.vim	/^  let s:done += 1$/;"	v
friendly_name	plugged/vim-rooter/test/runner.vim	/^  let friendly_name = substitute(test[5:-3], '_', ' ', 'g')$/;"	v
s:errors	plugged/vim-rooter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errored	plugged/vim-rooter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:fail	plugged/vim-rooter/test/runner.vim	/^      let s:fail += 1$/;"	v
summary	plugged/vim-rooter/test/runner.vim	/^let summary = [$/;"	v
SetUp	plugged/vim-rooter/test/test_rooter.vim	/^function SetUp()$/;"	f
TearDown	plugged/vim-rooter/test/test_rooter.vim	/^function TearDown()$/;"	f
Test_file_in_project	plugged/vim-rooter/test/test_rooter.vim	/^function Test_file_in_project()$/;"	f
Test_file_in_project_subdir	plugged/vim-rooter/test/test_rooter.vim	/^function Test_file_in_project_subdir()$/;"	f
Test_ignores_suffixesadd	plugged/vim-rooter/test/test_rooter.vim	/^function Test_ignores_suffixesadd()$/;"	f
Test_dir_in_project	plugged/vim-rooter/test/test_rooter.vim	/^function Test_dir_in_project()$/;"	f
Test_project_dir	plugged/vim-rooter/test/test_rooter.vim	/^function Test_project_dir()$/;"	f
Test_non_project_file_default	plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_default()$/;"	f
Test_non_project_file_change_to_parent	plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_change_to_parent()$/;"	f
Test_non_project_file_change_to_home	plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_change_to_home()$/;"	f
Test_target_directories_only	plugged/vim-rooter/test/test_rooter.vim	/^function Test_target_directories_only()$/;"	f
Test_target_some_files_only	plugged/vim-rooter/test/test_rooter.vim	/^function Test_target_some_files_only()$/;"	f
Test_resolve_symlinks	plugged/vim-rooter/test/test_rooter.vim	/^function Test_resolve_symlinks()$/;"	f
Test_user_autocmd	plugged/vim-rooter/test/test_rooter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_file_to_different_name	plugged/vim-rooter/test/test_rooter.vim	/^function Test_write_file_to_different_name()$/;"	f
Test_write_new_file	plugged/vim-rooter/test/test_rooter.vim	/^function Test_write_new_file()$/;"	f
Test_root_is_directory	plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_is_directory()$/;"	f
Test_root_has_ancestor	plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_has_ancestor()$/;"	f
Test_root_has_parent	plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_has_parent()$/;"	f
Test_glob	plugged/vim-rooter/test/test_rooter.vim	/^function Test_glob()$/;"	f
Test_has_file_in_subdirectory	plugged/vim-rooter/test/test_rooter.vim	/^function Test_has_file_in_subdirectory()$/;"	f
Test_toggle	plugged/vim-rooter/test/test_rooter.vim	/^function Test_toggle()$/;"	f
Test_exclude	plugged/vim-rooter/test/test_rooter.vim	/^function Test_exclude()$/;"	f
g:loaded_rooter	plugged/vim-rooter/plugin/rooter.vim	/^let g:loaded_rooter = 1$/;"	v
s:nomodeline	plugged/vim-rooter/plugin/rooter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
g:rooter_manual_only	plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_manual_only = 0$/;"	v
g:rooter_cd_cmd	plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_cd_cmd = 'lcd'$/;"	v
g:rooter_cd_cmd	plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_cd_cmd = 'cd'$/;"	v
g:rooter_patterns	plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_patterns = ['.git', '_darcs', '.hg', '.bzr', '.svn', 'Makefile']$/;"	v
g:rooter_targets	plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_targets = '\/,*'$/;"	v
g:rooter_change_directory_for_non_project_files	plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = ''$/;"	v
g:rooter_silent_chdir	plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_silent_chdir = 0$/;"	v
g:rooter_resolve_links	plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_resolve_links = 0$/;"	v
FindRootDirectory	plugged/vim-rooter/plugin/rooter.vim	/^function! FindRootDirectory()$/;"	f
Rooter	plugged/vim-rooter/plugin/rooter.vim	/^command! -bar Rooter call <SID>rooter()$/;"	c
RooterToggle	plugged/vim-rooter/plugin/rooter.vim	/^command! -bar RooterToggle call <SID>toggle()$/;"	c
rooter	plugged/vim-rooter/plugin/rooter.vim	/^augroup rooter$/;"	a
rooter	plugged/vim-rooter/plugin/rooter.vim	/^function! s:rooter()$/;"	f
activate	plugged/vim-rooter/plugin/rooter.vim	/^function! s:activate()$/;"	f
root	plugged/vim-rooter/plugin/rooter.vim	/^function! s:root()$/;"	f
match	plugged/vim-rooter/plugin/rooter.vim	/^function s:match(dir, pattern)$/;"	f
is	plugged/vim-rooter/plugin/rooter.vim	/^function! s:is(dir, identifier)$/;"	f
has	plugged/vim-rooter/plugin/rooter.vim	/^function! s:has(dir, identifier)$/;"	f
sub	plugged/vim-rooter/plugin/rooter.vim	/^function! s:sub(dir, identifier)$/;"	f
child	plugged/vim-rooter/plugin/rooter.vim	/^function! s:child(dir, identifier)$/;"	f
current	plugged/vim-rooter/plugin/rooter.vim	/^function! s:current()$/;"	f
parent	plugged/vim-rooter/plugin/rooter.vim	/^function! s:parent(dir)$/;"	f
cd	plugged/vim-rooter/plugin/rooter.vim	/^function! s:cd(dir)$/;"	f
rootless	plugged/vim-rooter/plugin/rooter.vim	/^function! s:rootless()$/;"	f
toggle	plugged/vim-rooter/plugin/rooter.vim	/^function! s:toggle()$/;"	f
g:svelte_indent_script	plugged/vim-svelte/indent/svelte.vim	/^  let g:svelte_indent_script = 1$/;"	v
g:svelte_indent_style	plugged/vim-svelte/indent/svelte.vim	/^  let g:svelte_indent_style = 1$/;"	v
b:html_indent_script1	plugged/vim-svelte/indent/svelte.vim	/^  let b:html_indent_script1 = "inc"$/;"	v
b:html_indent_script1	plugged/vim-svelte/indent/svelte.vim	/^  let b:html_indent_script1 = "zero"$/;"	v
b:html_indent_style1	plugged/vim-svelte/indent/svelte.vim	/^  let b:html_indent_style1 = "inc"$/;"	v
b:html_indent_style1	plugged/vim-svelte/indent/svelte.vim	/^  let b:html_indent_style1 = "zero"$/;"	v
s:html_indent	plugged/vim-svelte/indent/svelte.vim	/^let s:html_indent = &l:indentexpr$/;"	v
b:did_indent	plugged/vim-svelte/indent/svelte.vim	/^let b:did_indent = 1$/;"	v
GetSvelteIndent	plugged/vim-svelte/indent/svelte.vim	/^function! GetSvelteIndent()$/;"	f
b:did_ftplugin	plugged/vim-svelte/ftplugin/svelte.vim	/^let b:did_ftplugin = 1$/;"	v
b:match_ignorecase	plugged/vim-svelte/ftplugin/svelte.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-svelte/ftplugin/svelte.vim	/^  let b:match_words =$/;"	v
b:ale_fixers	plugged/vim-svelte/ftplugin/svelte.vim	/^    let b:ale_fixers = ['eslint', 'prettier', 'prettier_standard']$/;"	v
b:ale_linter_aliases	plugged/vim-svelte/ftplugin/svelte.vim	/^    let b:ale_linter_aliases = ['css', 'javascript']$/;"	v
b:ale_linters	plugged/vim-svelte/ftplugin/svelte.vim	/^    let b:ale_linters = ['stylelint', 'eslint']$/;"	v
enabled	plugged/vim-svelte/syntax/svelte.vim	/^function! s:enabled(language)$/;"	f
s:languages	plugged/vim-svelte/syntax/svelte.vim	/^let s:languages = [$/;"	v
s:languages	plugged/vim-svelte/syntax/svelte.vim	/^  let s:languages += g:svelte_preprocessor_tags$/;"	v
s:attr	plugged/vim-svelte/syntax/svelte.vim	/^  let s:attr = '\\(lang\\|type\\)=\\("\\|''\\)[^\\2]*' . s:language.name . '[^\\2]*\\2'$/;"	v
s:start	plugged/vim-svelte/syntax/svelte.vim	/^  let s:start = '<' . s:language.tag . '\\>\\_[^>]*' . s:attr . '\\_[^>]*>'$/;"	v
b:current_syntax	plugged/vim-svelte/syntax/svelte.vim	/^let b:current_syntax = "svelte"$/;"	v
b:did_indent	plugged/vim-elixir/indent/elixir.vim	/^let b:did_indent = 1$/;"	v
elixir#indent	plugged/vim-elixir/indent/elixir.vim	/^function! elixir#indent(lnum)$/;"	f
s:cpo_save	plugged/vim-elixir/indent/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
b:eelixir_subtype_indentexpr	plugged/vim-elixir/indent/eelixir.vim	/^let b:eelixir_subtype_indentexpr = &l:indentexpr$/;"	v
b:did_indent	plugged/vim-elixir/indent/eelixir.vim	/^let b:did_indent = 1$/;"	v
GetEelixirIndent	plugged/vim-elixir/indent/eelixir.vim	/^function! GetEelixirIndent(...)$/;"	f
b:did_ftplugin	plugged/vim-elixir/ftplugin/elixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:match_ignorecase	plugged/vim-elixir/ftplugin/elixir.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-elixir/ftplugin/elixir.vim	/^  let b:match_words = '\\:\\@<!\\<\\%(do\\|fn\\)\\:\\@!\\>' .$/;"	v
b:block_begin	plugged/vim-elixir/ftplugin/elixir.vim	/^let b:block_begin = '\\<\\(do$\\|fn\\>\\)'$/;"	v
b:block_end	plugged/vim-elixir/ftplugin/elixir.vim	/^let b:block_end = '\\<end\\>'$/;"	v
]]	plugged/vim-elixir/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
[[	plugged/vim-elixir/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
][	plugged/vim-elixir/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
[]	plugged/vim-elixir/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
]]	plugged/vim-elixir/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
[[	plugged/vim-elixir/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
][	plugged/vim-elixir/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
[]	plugged/vim-elixir/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
b:undo_ftplugin	plugged/vim-elixir/ftplugin/elixir.vim	/^let b:undo_ftplugin = 'setlocal sw< sts< et< isk< com< cms< path< inex< sua< def< fo<'.$/;"	v
s:save_cpo	plugged/vim-elixir/ftplugin/eelixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-elixir/ftplugin/eelixir.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-elixir/ftplugin/eelixir.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:match_words	plugged/vim-elixir/ftplugin/eelixir.vim	/^let s:match_words = ""$/;"	v
g:eelixir_default_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
s:lines	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let s:lines = join(getline(1, 5) + [getline('$')], "\\n")$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^leex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^sface\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.sface\\|\\.leex\\|\\.eelixir\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	plugged/vim-elixir/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
s:undo_ftplugin	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words$/;"	v
b:did_ftplugin	plugged/vim-elixir/ftplugin/eelixir.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:match_words	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
b:match_words	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let b:match_words = s:match_words$/;"	v
b:surround_45	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let b:surround_45 = "<% \\r %>"$/;"	v
b:surround_61	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let b:surround_61 = "<%= \\r %>"$/;"	v
b:surround_35	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let b:surround_35 = "<%# \\r %>"$/;"	v
b:surround_123	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let b:surround_123 = "{{ \\r }}"$/;"	v
b:surround_5	plugged/vim-elixir/ftplugin/eelixir.vim	/^  let b:surround_5 = "<% \\r %>\\n<% end %>"$/;"	v
b:undo_ftplugin	plugged/vim-elixir/ftplugin/eelixir.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
g:elixir_indent_debug	plugged/vim-elixir/test.init.vim	/^let g:elixir_indent_debug=1$/;"	v
bm	plugged/vim-elixir/bin/test_indent	/^def bm$/;"	f
detect_change	plugged/vim-elixir/bin/test_indent	/^def detect_change(f)$/;"	f
strip_doc_blocks	plugged/vim-elixir/bin/test_indent	/^def strip_doc_blocks(body)$/;"	f
DetectElixir	plugged/vim-elixir/ftdetect/elixir.vim	/^function! s:DetectElixir()$/;"	f
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func
some_other_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_other_func do$/;"	f	class:some_func.some_func.some_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func.some_func
some_other_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_other_func do$/;"	f	class:some_func.some_func.some_func.some_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func.some_func.some_func
some_other_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_other_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func
some_other_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_other_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func
some_other_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_other_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func
some_other_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_other_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func
some_func	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def some_func do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func
hello	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hello do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func
hello	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hello do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello
hello	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hello do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello
hello	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hello do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello.hello
hello	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hello do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello.hello.hello
hello	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hello do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello.hello.hello.hello
hello	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hello do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello.hello.hello.hello.hello
hello	plugged/vim-elixir/spec/indent/basic_spec.rb	/^      def hello do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello.hello.hello.hello.hello
hello	plugged/vim-elixir/spec/indent/basic_spec.rb	/^      def hello do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello.hello.hello.hello.hello
hi	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hi do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello.hello.hello.hello.hello
hello	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hello do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello.hello.hello.hello.hello
hi	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hi do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello.hello.hello.hello.hello
hi	plugged/vim-elixir/spec/indent/basic_spec.rb	/^    def hi do$/;"	f	class:some_func.some_func.some_func.some_func.some_func.some_func.some_other_func.some_func.some_other_func.some_func.some_other_func.hello.hello.hello.hello.hello.hello
hello	plugged/vim-elixir/spec/indent/binary_operator_spec.rb	/^  def hello do$/;"	f
hello	plugged/vim-elixir/spec/indent/binary_operator_spec.rb	/^  def hello do$/;"	f	class:hello
test	plugged/vim-elixir/spec/indent/if_spec.rb	/^  def test do$/;"	f
exec	plugged/vim-elixir/spec/indent/if_spec.rb	/^  def exec(command, progress_func \\\\ fn(_, state) -> state end, key \\\\ nil, output \\\\ nil) do$/;"	f	class:test
handle_call	plugged/vim-elixir/spec/indent/keyword_spec.rb	/^  def handle_call({:get_in_line_for_lock, key}, from, state) do$/;"	f
handle_call	plugged/vim-elixir/spec/indent/def_spec.rb	/^    def handle_call({:release_lock, key}, _from, state) do$/;"	f
hello	plugged/vim-elixir/spec/indent/def_spec.rb	/^  def hello do$/;"	f	class:handle_call
world	plugged/vim-elixir/spec/indent/def_spec.rb	/^  def world do$/;"	f	class:handle_call.hello
do	plugged/vim-elixir/spec/indent/anonymous_functions_spec.rb	/^  def do$/;"	f
do	plugged/vim-elixir/spec/indent/anonymous_functions_spec.rb	/^  def do$/;"	f
test	plugged/vim-elixir/spec/indent/anonymous_functions_spec.rb	/^  def test do$/;"	f
lol	plugged/vim-elixir/spec/indent/anonymous_functions_spec.rb	/^    def lol do$/;"	f
resend_confirmation	plugged/vim-elixir/spec/indent/with_spec.rb	/^  def resend_confirmation(username) when is_binary(username) do$/;"	f
create_user	plugged/vim-elixir/spec/indent/with_spec.rb	/^  def create_user(params) do$/;"	f	class:resend_confirmation
my_function	plugged/vim-elixir/spec/indent/with_spec.rb	/^  def my_function do$/;"	f	class:resend_confirmation.create_user
lol	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^    def lol do$/;"	f
name	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^    def name, do: IO.puts "bobmarley"$/;"	f
name	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^    def name(param) do$/;"	f	class:name
name	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^    def name, do: IO.puts "bobmarley"$/;"	f	class:name
name	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^    def name(param) do$/;"	f	class:name.name
f	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^  def f do$/;"	f	class:name.name
f	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^  def f do$/;"	f	class:name.name.f
test	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^    def test do$/;"	f	class:name.name.f.f
how_are_you	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^    def how_are_you do$/;"	f	class:name.name.f.f
how_are_you	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^    def how_are_you do$/;"	f	class:name.name.f.f
hello	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^    def hello do$/;"	f	class:name.name.f.f
handle_info	plugged/vim-elixir/spec/indent/blocks_spec.rb	/^  def handle_info(:tick, state = %{policy_iteration: []}) do$/;"	f	class:name.name.f.f.hello
do_query	plugged/vim-elixir/spec/indent/ecto_queries_spec.rb	/^    def do_query do$/;"	f
smth	plugged/vim-elixir/spec/indent/ecto_queries_spec.rb	/^  def smth do$/;"	f
do_query	plugged/vim-elixir/spec/indent/ecto_queries_spec.rb	/^  def do_query do$/;"	f	class:smth
alphabetical	plugged/vim-elixir/spec/indent/ecto_queries_spec.rb	/^  def alphabetical(query) do$/;"	f	class:smth.do_query
xpto	plugged/vim-elixir/spec/indent/tuples_spec.rb	/^  def xpto do$/;"	f
method	plugged/vim-elixir/spec/indent/tuples_spec.rb	/^  def method do$/;"	f	class:xpto
example	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def example do$/;"	f
project	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def project do$/;"	f	class:example
config	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def config do$/;"	f	class:example.project
test	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def test do$/;"	f	class:example.project.config
test	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def test do$/;"	f	class:example.project.config.test
test	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def test do$/;"	f	class:example.project.config.test.test
project	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def project do$/;"	f	class:example.project.config.test.test.test
test	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def test do$/;"	f	class:example.project.config.test.test.test.project
create	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def create(conn, %{$/;"	f	class:example.project.config.test.test.test.project.test
double	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def double(x) do$/;"	f	class:example.project.config.test.test.test.project.test.create
double	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def double(x) do$/;"	f	class:example.project.config.test.test.test.project.test.create.double
double	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def double(x) do$/;"	f	class:example.project.config.test.test.test.project.test.create.double.double
test_another_feature	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def test_another_feature do$/;"	f	class:example.project.config.test.test.test.project.test.create.double.double.double
test	plugged/vim-elixir/spec/indent/lists_spec.rb	/^    def test do$/;"	f	class:example.project.config.test.test.test.project.test.create.double.double.double.test_another_feature
fun	plugged/vim-elixir/spec/indent/lists_spec.rb	/^    def fun do$/;"	f	class:example.project.config.test.test.test.project.test.create.double.double.double.test_another_feature
fun	plugged/vim-elixir/spec/indent/lists_spec.rb	/^    def fun do$/;"	f	class:example.project.config.test.test.test.project.test.create.double.double.double.test_another_feature
init	plugged/vim-elixir/spec/indent/lists_spec.rb	/^  def init(_) do$/;"	f	class:example.project.config.test.test.test.project.test.create.double.double.double.test_another_feature
obtain_lock	plugged/vim-elixir/spec/indent/receive_spec.rb	/^  def obtain_lock(pid, key, timeout \\\\ 60_000) do$/;"	f
test	plugged/vim-elixir/spec/indent/pipeline_spec.rb	/^  def test do$/;"	f
test	plugged/vim-elixir/spec/indent/pipeline_spec.rb	/^  def test do$/;"	f	class:test
test	plugged/vim-elixir/spec/indent/pipeline_spec.rb	/^  def test do$/;"	f	class:test.test
export_info	plugged/vim-elixir/spec/indent/pipeline_spec.rb	/^    def export_info(users) do$/;"	f	class:test.test.test
build_command	plugged/vim-elixir/spec/indent/pipeline_spec.rb	/^  def build_command(input, output) do$/;"	f	class:test.test.test
build_command	plugged/vim-elixir/spec/indent/pipeline_spec.rb	/^  def build_command(input, output) do$/;"	f	class:test.test.test.build_command
build_command	plugged/vim-elixir/spec/indent/pipeline_spec.rb	/^  def build_command(input, output) do$/;"	f	class:test.test.test.build_command.build_command
build_command	plugged/vim-elixir/spec/indent/pipeline_spec.rb	/^    def build_command(input, output) do$/;"	f	class:test.test.test.build_command.build_command.build_command
hello	plugged/vim-elixir/spec/indent/pipeline_spec.rb	/^  def hello do$/;"	f	class:test.test.test.build_command.build_command.build_command
do_stuff	plugged/vim-elixir/spec/indent/pipeline_spec.rb	/^    def do_stuff do$/;"	f	class:test.test.test.build_command.build_command.build_command.hello
run	plugged/vim-elixir/spec/indent/comment_spec.rb	/^    def run do$/;"	f
run	plugged/vim-elixir/spec/indent/comment_spec.rb	/^    def run(task) when task in [:t1, :t2] do$/;"	f
Buffer	plugged/vim-elixir/spec/spec_helper.rb	/^class Buffer$/;"	c
initialize	plugged/vim-elixir/spec/spec_helper.rb	/^  def initialize(vim, type)$/;"	f	class:Buffer
reindent	plugged/vim-elixir/spec/spec_helper.rb	/^  def reindent(content)$/;"	f	class:Buffer
type	plugged/vim-elixir/spec/spec_helper.rb	/^  def type(content)$/;"	f	class:Buffer
syntax	plugged/vim-elixir/spec/spec_helper.rb	/^  def syntax(content, pattern)$/;"	f	class:Buffer
fold_and_replace	plugged/vim-elixir/spec/spec_helper.rb	/^  def fold_and_replace(content, fold_on_line)$/;"	f	class:Buffer
with_file	plugged/vim-elixir/spec/spec_helper.rb	/^  def with_file(content = nil)$/;"	f	class:Buffer
edit_file	plugged/vim-elixir/spec/spec_helper.rb	/^  def edit_file(content)$/;"	f	class:Buffer
Differ	plugged/vim-elixir/spec/spec_helper.rb	/^class Differ$/;"	c
diff	plugged/vim-elixir/spec/spec_helper.rb	/^  def self.diff(result, expected)$/;"	F	class:Differ
instance	plugged/vim-elixir/spec/spec_helper.rb	/^  def self.instance$/;"	F	class:Differ
initialize	plugged/vim-elixir/spec/spec_helper.rb	/^  def initialize$/;"	f	class:Differ
diff	plugged/vim-elixir/spec/spec_helper.rb	/^  def diff(result, expected)$/;"	f	class:Differ.initialize
ExBuffer	plugged/vim-elixir/spec/spec_helper.rb	/^module ExBuffer$/;"	m	class:Differ
new	plugged/vim-elixir/spec/spec_helper.rb	/^  def self.new$/;"	F	class:Differ.ExBuffer
EexBuffer	plugged/vim-elixir/spec/spec_helper.rb	/^module EexBuffer$/;"	m	class:Differ
new	plugged/vim-elixir/spec/spec_helper.rb	/^  def self.new$/;"	F	class:Differ.EexBuffer
LeexBuffer	plugged/vim-elixir/spec/spec_helper.rb	/^module LeexBuffer$/;"	m	class:Differ
new	plugged/vim-elixir/spec/spec_helper.rb	/^  def self.new$/;"	F	class:Differ.LeexBuffer
SurfaceBuffer	plugged/vim-elixir/spec/spec_helper.rb	/^module SurfaceBuffer$/;"	m	class:Differ
new	plugged/vim-elixir/spec/spec_helper.rb	/^  def self.new$/;"	F	class:Differ.SurfaceBuffer
i	plugged/vim-elixir/spec/spec_helper.rb	/^  def i(str)$/;"	f	class:Differ
ip	plugged/vim-elixir/spec/spec_helper.rb	/^  def ip(str)$/;"	f	class:Differ
gen_tests	plugged/vim-elixir/spec/spec_helper.rb	/^  def gen_tests(method, str)$/;"	f	class:Differ
fold	plugged/vim-elixir/spec/folding/basic_spec.rb	/^  def self.fold(content)$/;"	F
some_func	plugged/vim-elixir/spec/folding/basic_spec.rb	/^    def some_func do # fold$/;"	f
some_func	plugged/vim-elixir/spec/folding/basic_spec.rb	/^    def some_func do # fold$/;"	f
handle_call	plugged/vim-elixir/spec/syntax/variable_spec.rb	/^      def handle_call(:pop, _from, [h|stack]) do$/;"	f
handle_call	plugged/vim-elixir/spec/syntax/variable_spec.rb	/^    def handle_call(:pop)$/;"	f
handle_call	plugged/vim-elixir/spec/syntax/variable_spec.rb	/^      def handle_call(:pop,$/;"	f
call	plugged/vim-elixir/spec/syntax/variable_spec.rb	/^      def call(:pop, _, [h|stack]) do$/;"	f
sign_in	plugged/vim-elixir/spec/syntax/variable_spec.rb	/^    def sign_in(conn, %{$/;"	f
exec	plugged/vim-elixir/spec/syntax/anonymous_function_spec.rb	/^      def exec(func \\\\ fn(_, state) -> state end) do$/;"	f
exec	plugged/vim-elixir/spec/syntax/anonymous_function_spec.rb	/^        def exec(func \\\\ fn(_, state) -> state end) do$/;"	f
function	plugged/vim-elixir/spec/syntax/strings_spec.rb	/^      def function do$/;"	f
function	plugged/vim-elixir/spec/syntax/strings_spec.rb	/^      def function do$/;"	f
function	plugged/vim-elixir/spec/syntax/strings_spec.rb	/^      def function do$/;"	f
foo	plugged/vim-elixir/spec/syntax/operator_spec.rb	/^      def foo(bar \\\\ :baz)$/;"	f
foo	plugged/vim-elixir/spec/syntax/operator_spec.rb	/^      def foo(bar \/\/ :baz)$/;"	f	class:foo
some_fun	plugged/vim-elixir/spec/syntax/doc_spec.rb	/^        def some_fun(x), do: x$/;"	f
some_fun	plugged/vim-elixir/spec/syntax/doc_spec.rb	/^        def some_fun(x), do: x$/;"	f
some_fun	plugged/vim-elixir/spec/syntax/doc_spec.rb	/^        def some_fun(x), do: x$/;"	f
some_fun	plugged/vim-elixir/spec/syntax/doc_spec.rb	/^        def some_fun(x), do: x$/;"	f
init	plugged/vim-elixir/spec/syntax/atom_spec.rb	/^          def init(args) do$/;"	f
init	plugged/vim-elixir/spec/syntax/atom_spec.rb	/^          def init(args) do$/;"	f
project	plugged/vim-elixir/spec/syntax/atom_spec.rb	/^    def project do$/;"	f
foo	plugged/vim-elixir/spec/syntax/comments_spec.rb	/^    def foo(<<$/;"	f
MyTest	plugged/vim-elixir/spec/syntax/exunit_spec.rb	/^    module MyTest do$/;"	m
g:elixir_indent_max_lookbehind	plugged/vim-elixir/autoload/elixir/indent.vim	/^  let g:elixir_indent_max_lookbehind = 30$/;"	v
sw	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:sw()$/;"	f
elixir#indent#indent	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#indent(lnum)$/;"	f
debug	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:debug(str)$/;"	f
starts_with	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:starts_with(context, expr)$/;"	f
prev_starts_with	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:prev_starts_with(context, expr)$/;"	f
_starts_with	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:_starts_with(text, expr, lnum)$/;"	f
prev_ends_with	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:prev_ends_with(context, expr)$/;"	f
_ends_with	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:_ends_with(text, expr, lnum)$/;"	f
is_string_or_comment	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:is_string_or_comment(line, col)$/;"	f
syntax_name	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:syntax_name(line, col)$/;"	f
elixir#indent#searchpair_back_skip	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#searchpair_back_skip()$/;"	f
keyword	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:keyword(expr)$/;"	f
find_last_pos	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:find_last_pos(lnum, text, match)$/;"	f
elixir#indent#handle_top_of_file	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#handle_top_of_file(context)$/;"	f
elixir#indent#handle_starts_with_string_continuation	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_string_continuation(context)$/;"	f
elixir#indent#handle_follow_prev_nb	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#handle_follow_prev_nb(context)$/;"	f
get_base_indent	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:get_base_indent(lnum, text)$/;"	f
elixir#indent#handle_following_trailing_binary_operator	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_trailing_binary_operator(context)$/;"	f
elixir#indent#handle_starts_with_pipe	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_pipe(context)$/;"	f
elixir#indent#handle_starts_with_end	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_end(context)$/;"	f
elixir#indent#handle_starts_with_binary_operator	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_binary_operator(context)$/;"	f
elixir#indent#handle_inside_block	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_block(context)$/;"	f
handle_with	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:handle_with(start_lnum, start_col, context)$/;"	f
do_handle_pattern_match_block	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! s:do_handle_pattern_match_block(relative_line, context)$/;"	f
elixir#indent#handle_inside_generic_block	plugged/vim-elixir/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_generic_block(context)$/;"	f
elixir#util#get_filename	plugged/vim-elixir/autoload/elixir/util.vim	/^function! elixir#util#get_filename(word) abort$/;"	f
s:path	plugged/vim-elixir/autoload/db/adapter/ecto.vim	/^let s:path = expand('<sfile>:h')$/;"	v
s:cmd	plugged/vim-elixir/autoload/db/adapter/ecto.vim	/^let s:cmd = join(['mix', 'run', '--no-start', '--no-compile', shellescape(s:path.'\/get_repos.exs')])$/;"	v
repo_list	plugged/vim-elixir/autoload/db/adapter/ecto.vim	/^function! s:repo_list() abort$/;"	f
db#adapter#ecto#canonicalize	plugged/vim-elixir/autoload/db/adapter/ecto.vim	/^function! db#adapter#ecto#canonicalize(url) abort$/;"	f
db#adapter#ecto#complete_opaque	plugged/vim-elixir/autoload/db/adapter/ecto.vim	/^function! db#adapter#ecto#complete_opaque(url) abort$/;"	f
main_syntax	plugged/vim-elixir/syntax/elixir.vim	/^  let main_syntax = "elixir"$/;"	v
s:cpo_save	plugged/vim-elixir/syntax/elixir.vim	/^let s:cpo_save = &cpo$/;"	v
g:elixir_use_markdown_for_docs	plugged/vim-elixir/syntax/elixir.vim	/^  let g:elixir_use_markdown_for_docs = 0$/;"	v
b:current_syntax	plugged/vim-elixir/syntax/elixir.vim	/^let b:current_syntax = "elixir"$/;"	v
s:cpo_save	plugged/vim-elixir/syntax/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
main_syntax	plugged/vim-elixir/syntax/eelixir.vim	/^  let main_syntax = 'eelixir'$/;"	v
g:eelixir_default_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
s:lines	plugged/vim-elixir/syntax/eelixir.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^leex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^sface\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.sface\\|\\.leex\\|\\.eelixir\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	plugged/vim-elixir/syntax/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:current_syntax	plugged/vim-elixir/syntax/eelixir.vim	/^let b:current_syntax = 'eelixir'$/;"	v
current_compiler	plugged/vim-elixir/compiler/credo.vim	/^let current_compiler = 'credo'$/;"	v
CompilerSet	plugged/vim-elixir/compiler/credo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-elixir/compiler/exunit.vim	/^let current_compiler = "exunit"$/;"	v
CompilerSet	plugged/vim-elixir/compiler/exunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-elixir/compiler/exunit.vim	/^let s:cpo_save = &cpo$/;"	v
current_compiler	plugged/vim-elixir/compiler/mix.vim	/^let current_compiler = 'mix'$/;"	v
CompilerSet	plugged/vim-elixir/compiler/mix.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
g:jsx_ext_required	plugged/vim-jsx/ftdetect/javascript.vim	/^  let g:jsx_ext_required = 0$/;"	v
g:jsx_pragma_required	plugged/vim-jsx/ftdetect/javascript.vim	/^  let g:jsx_pragma_required = 0$/;"	v
s:jsx_pragma_pattern	plugged/vim-jsx/ftdetect/javascript.vim	/^let s:jsx_pragma_pattern = '\\%^\\_s*\\\/\\*\\*\\%(\\_.\\%(\\*\\\/\\)\\@!\\)*@jsx\\_.\\{-}\\*\\\/'$/;"	v
EnableJSX	plugged/vim-jsx/ftdetect/javascript.vim	/^fu! <SID>EnableJSX()$/;"	f
b:jsx_js_indentexpr	plugged/vim-jsx/after/indent/jsx.vim	/^let b:jsx_js_indentexpr = &indentexpr$/;"	v
s:did_indent	plugged/vim-jsx/after/indent/jsx.vim	/^  let s:did_indent=b:did_indent$/;"	v
b:did_indent	plugged/vim-jsx/after/indent/jsx.vim	/^  let b:did_indent=s:did_indent$/;"	v
s:endtag	plugged/vim-jsx/after/indent/jsx.vim	/^let s:endtag = '^\\s*\\\/\\?>\\s*;\\='$/;"	v
SynSOL	plugged/vim-jsx/after/indent/jsx.vim	/^fu! SynSOL(lnum)$/;"	f
SynEOL	plugged/vim-jsx/after/indent/jsx.vim	/^fu! SynEOL(lnum)$/;"	f
SynAttrXMLish	plugged/vim-jsx/after/indent/jsx.vim	/^fu! SynAttrXMLish(synattr)$/;"	f
SynXMLish	plugged/vim-jsx/after/indent/jsx.vim	/^fu! SynXMLish(syns)$/;"	f
SynJSXBlockEnd	plugged/vim-jsx/after/indent/jsx.vim	/^fu! SynJSXBlockEnd(syns)$/;"	f
SynJSXDepth	plugged/vim-jsx/after/indent/jsx.vim	/^fu! SynJSXDepth(syns)$/;"	f
SynJSXContinues	plugged/vim-jsx/after/indent/jsx.vim	/^fu! SynJSXContinues(cursyn, prevsyn)$/;"	f
GetJsxIndent	plugged/vim-jsx/after/indent/jsx.vim	/^fu! GetJsxIndent()$/;"	f
b:match_ignorecase	plugged/vim-jsx/after/ftplugin/jsx.vim	/^  let b:match_ignorecase = 0$/;"	v
s:jsx_match_words	plugged/vim-jsx/after/ftplugin/jsx.vim	/^  let s:jsx_match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-jsx/after/ftplugin/jsx.vim	/^  let b:match_words = exists('b:match_words')$/;"	v
s:current_syntax	plugged/vim-jsx/after/syntax/jsx.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
b:current_syntax	plugged/vim-jsx/after/syntax/jsx.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
g:loaded_fzf_vim	plugged/fzf.vim/plugin/fzf.vim	/^let g:loaded_fzf_vim = 1$/;"	v
s:cpo_save	plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:is_win	plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
defs	plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
history	plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, extra, bang)$/;"	f
fzf#complete	plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf_restore_colors	plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
fzf_vim_term	plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
_fzf_statusline	plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
g:fzf#vim#buffers	plugged/fzf.vim/plugin/fzf.vim	/^  let g:fzf#vim#buffers = {}$/;"	v
fzf_buffers	plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
<plug>(fzf-complete-word)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-complete-path)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-file)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-path)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -print \\| sed '1d;s:^..::'")$/;"	m
<plug>(fzf-complete-file)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -type f -print -o -type l -print \\| sed 's:^..::'")$/;"	m
<plug>(fzf-complete-file-ag)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-buffer-line)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-maps-n)	plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-i)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
s:cpo_save	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:is_win	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
extend	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
function	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
function	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
fzf#vim#complete#word	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
file_split_prefix	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
file_source	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
file_options	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
fname_prefix	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
fzf#vim#complete#path	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
reduce_line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
fzf#vim#complete#line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#buffer_line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
s:cpo_save	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:min_version	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:min_version = '0.23.0'$/;"	v
s:is_win	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:layout_keys	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:bin_dir	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:TYPE	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': type([])}$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "\\n")[0]$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = fnamemodify(s:bin.preview, ':8')$/;"	v
s:wide	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:warned	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:warned = 0$/;"	v
s:checked	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:checked = 0$/;"	v
version_requirement	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:version_requirement(val, min)$/;"	f
check_requirements	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:check_requirements()$/;"	f
extend_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
merge_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
prepend_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
fzf#vim#with_preview	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
remove_layout	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
reverse_list	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:reverse_list(opts)$/;"	f
wrap	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
strip	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
chomp	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
escape	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
function	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
function	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
get_color	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
s:ansi	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cyan': 36}$/;"	v
csi	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
ansi	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
buflisted	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
fzf	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
s:default_action	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
action_for	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
open	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
align_lists	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
warn	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
fill_quickfix	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fill_quickfix(list, ...)$/;"	f
fzf#vim#_uniq	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
shortpath	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
fzf#vim#files	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
line_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
fzf#vim#_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
buffer_line_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
buffer_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines(query)$/;"	f
fzf#vim#buffer_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#colors	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#locate	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#_recent_files	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_recent_files()$/;"	f
history_source	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
<plug>(-fzf-vim-do)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(-fzf-/)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-:) :$/;"	m
history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
cmd_history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
fzf#vim#command_history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
search_history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
fzf#vim#search_history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
get_git_root	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
fzf#vim#gitfiles	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
wrapped	plugged/fzf.vim/autoload/fzf/vim.vim	/^  let wrapped['sink*'] = remove(wrapped, 'newsink')$/;"	v
find_open_window	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
jump	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
bufopen	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
fzf#vim#_format_buffer	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_format_buffer(b)$/;"	f
sort_buffers	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
fzf#vim#_buflisted_sorted	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_buflisted_sorted()$/;"	f
fzf#vim#buffers	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
ag_to_qf	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, has_column)$/;"	f
ag_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, has_column)$/;"	f
fzf#vim#ag	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#grep	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, has_column, ...)$/;"	f
opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^  let opts['sink*'] = remove(opts, 'sink')$/;"	v
prev_default_command	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let prev_default_command = $FZF_DEFAULT_COMMAND$/;"	v
$FZF_DEFAULT_COMMAND	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let $FZF_DEFAULT_COMMAND = a:grep_command$/;"	v
$FZF_DEFAULT_COMMAND	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let $FZF_DEFAULT_COMMAND = prev_default_command$/;"	v
btags_source	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
btags_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
fzf#vim#buffer_tags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
tags_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
fzf#vim#tags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
inject_snippet	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
fzf#vim#snippets	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
s:nbs	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
format_cmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
command_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
s:fmt_excmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
format_excmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
excmds	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
fzf#vim#commands	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
format_mark	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
mark_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
fzf#vim#marks	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
helptag_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
fzf#vim#helptags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#filetypes	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
format_win	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
windows_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
fzf#vim#windows	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
yank_to_register	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
commits_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(buffer_local, args)$/;"	f
fzf#vim#commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...)$/;"	f
fzf#vim#buffer_commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...)$/;"	f
align_pairs	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
highlight_keys	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
key_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
fzf#vim#maps	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
<Plug>(-fzf-complete-trigger)	plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
pluck	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
complete_trigger	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
first_line	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
complete_insert	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
<Plug>(-fzf-complete-finish)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <silent> <Plug>(-fzf-complete-finish) a$/;"	m
<Plug>(-fzf-complete-finish)	plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-finish) <c-o>l$/;"	m
eval	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
fzf#vim#complete	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
b:did_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/ultisnips/ftplugin/snippets.vim	/^let s:save_cpo = &cpo$/;"	v
ultisnips_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^augroup ultisnips_snippets.vim$/;"	a
b:match_ignorecase	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
set_match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  function! s:set_match_words() abort$/;"	f
b:match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = s:set_match_words()$/;"	v
s:set_match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
g:tagbar_type_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^let g:tagbar_type_snippets = {$/;"	v
b:undo_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:undo_ftplugin = "$/;"	v
UltiSnippetTextObj	plugged/ultisnips/ftplugin/snippets.vim	/^fun! s:UltiSnippetTextObj(inner) abort$/;"	f
iS	plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> iS :<C-U>call <SID>UltiSnippetTextObj(1)<CR>$/;"	m
aS	plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> aS :<C-U>call <SID>UltiSnippetTextObj(0)<CR>$/;"	m
g:UltiSnipsExpandTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsListSnippets	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsListSnippets="9"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpForwardTrigger="2"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpBackwardTrigger="1"$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
Base	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^from deoplete.base.source import Base$/;"	i
Source	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^class Source(Base):$/;"	c
__init__	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def __init__(self, vim):$/;"	m	class:Source
gather_candidates	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
wraps	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^from functools import wraps$/;"	i
traceback	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^import traceback$/;"	i
re	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^import re$/;"	i
sys	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^import sys$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^from UltiSnips import vim_helper$/;"	i
wrap	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def wrap(func):$/;"	f
wrapper	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:wrap
vim	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^import vim$/;"	i
_vim_dec	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_dec(string):$/;"	f
_vim_enc	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_enc(bytearray):$/;"	f
col2byte	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def col2byte(line, col):$/;"	f
byte2col	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def byte2col(line, nbyte):$/;"	f
vim_helper	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^from UltiSnips import vim_helper$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^from UltiSnips.position import Position, JumpDirection$/;"	i
JumpDirection	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^from UltiSnips.position import Position, JumpDirection$/;"	i
EditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^from UltiSnips.text_objects.base import EditableTextObject, NoneditableTextObject$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^from UltiSnips.text_objects.base import EditableTextObject, NoneditableTextObject$/;"	i
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^from UltiSnips.text_objects.tabstop import TabStop$/;"	i
SnippetInstance	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__($/;"	m	class:SnippetInstance
replace_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replace_initial_text(self, buf):$/;"	m	class:SnippetInstance
_place_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	function:SnippetInstance.replace_initial_text
replay_user_edits	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replay_user_edits(self, cmds, ctab=None):$/;"	m	class:SnippetInstance
update_textobjects	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def update_textobjects(self, buf):$/;"	m	class:SnippetInstance
_find_recursive	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	function:SnippetInstance.update_textobjects
select_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def select_next_tab(self, jump_direction: JumpDirection):$/;"	m	class:SnippetInstance
has_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def has_next_tab(self, jump_direction: JumpDirection):$/;"	m	class:SnippetInstance
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
get_tabstops	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def get_tabstops(self):$/;"	m	class:SnippetInstance
_VimCursor	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
to_vim	plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
re	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^import re$/;"	i
sys	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^import sys$/;"	i
unescape	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^from UltiSnips.text import unescape, fill_in_whitespace$/;"	i
fill_in_whitespace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^from UltiSnips.text import unescape, fill_in_whitespace$/;"	i
Mirror	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^from UltiSnips.text_objects.mirror import Mirror$/;"	i
_find_closing_brace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _find_closing_brace(string, start_pos):$/;"	f
_split_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _split_conditional(string):$/;"	f
_replace_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _replace_conditional(match, string):$/;"	f
_ONE_CHAR_CASE_SWITCH	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_ONE_CHAR_CASE_SWITCH = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v
_LONG_CASEFOLDINGS	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v
_DOLLAR	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v
_CONDITIONAL	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v
_CleverReplace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class _CleverReplace:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, expression):$/;"	m	class:_CleverReplace
replace	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
_one_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _one_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_multi_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _multi_char_case_change(match):$/;"	f	function:_CleverReplace.replace
UNIDECODE_ALERT_RAISED	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
TextObjectTransformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class TextObjectTransformation:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
_transform	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
unidecode	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^                import unidecode$/;"	i
Transformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^from UltiSnips.text_objects.base import NoneditableTextObject$/;"	i
Mirror	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _update(self, done, buf):$/;"	m	class:Mirror
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
os	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^import os$/;"	i
platform	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^import platform$/;"	i
Popen	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^from subprocess import Popen, PIPE$/;"	i
PIPE	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^from subprocess import Popen, PIPE$/;"	i
stat	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^import stat$/;"	i
tempfile	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^import tempfile$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^from UltiSnips.text_objects.base import NoneditableTextObject$/;"	i
_chomp	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _chomp(string):$/;"	f
_run_shell_command	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_get_tmp	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _get_tmp():$/;"	f
ShellCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def _update(self, done, buf):$/;"	m	class:ShellCode
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects.escaped_char import EscapedChar$/;"	i
Mirror	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects.mirror import Mirror$/;"	i
PythonCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects.python_code import PythonCode$/;"	i
ShellCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects.shell_code import ShellCode$/;"	i
SnippetInstance	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects.snippet_instance import SnippetInstance$/;"	i
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects.tabstop import TabStop$/;"	i
Transformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects.transformation import Transformation$/;"	i
VimLCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects.viml_code import VimLCode$/;"	i
Visual	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects.visual import Visual$/;"	i
Choices	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects.choices import Choices$/;"	i
EditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^from UltiSnips.text_objects.base import EditableTextObject$/;"	i
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __init__(self, parent, token, start=None, end=None):$/;"	m	class:TabStop
number	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def number(self):$/;"	m	class:TabStop
is_killed	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __repr__(self):$/;"	m	class:TabStop	file:
os	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^import os$/;"	i
namedtuple	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^from collections import namedtuple$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^from UltiSnips import vim_helper$/;"	i
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^from UltiSnips.indent_util import IndentUtil$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^from UltiSnips.text_objects.base import NoneditableTextObject$/;"	i
_Placeholder	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^from UltiSnips.vim_state import _Placeholder$/;"	i
UltiSnips	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^import UltiSnips.snippet_manager$/;"	i
snippet_manager	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^import UltiSnips.snippet_manager$/;"	i
_Tabs	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class _Tabs:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__getitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs	file:
__setitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __setitem__(self, no, value):$/;"	m	class:_Tabs	file:
_VisualContent	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^_VisualContent = namedtuple("_VisualContent", ["mode", "text"])$/;"	v
SnippetUtilForAction	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtilForAction(dict):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
expand_anon	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def expand_anon(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
SnippetUtil	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtil:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, initial_indent, vmode, vtext, context, parent):$/;"	m	class:SnippetUtil
_reset	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
shift	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
unshift	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
mkline	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def mkline(self, line="", indent=None):$/;"	m	class:SnippetUtil
reset_indent	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
fn	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
basename	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
ft	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
_rv_changed	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
c	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
v	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
p	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def p(self):$/;"	m	class:SnippetUtil
context	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def context(self):$/;"	m	class:SnippetUtil
opt	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
__add__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil	file:
__lshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil	file:
__rshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil	file:
snippet_start	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_start(self):$/;"	m	class:SnippetUtil
snippet_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_end(self):$/;"	m	class:SnippetUtil
buffer	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def buffer(self):$/;"	m	class:SnippetUtil
PythonCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _update(self, done, buf):$/;"	m	class:PythonCode
vim_helper	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^from UltiSnips import vim_helper$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^from UltiSnips.text_objects.base import NoneditableTextObject$/;"	i
VimLCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def _update(self, done, buf):$/;"	m	class:VimLCode
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/escaped_char.py	/^from UltiSnips.text_objects.base import NoneditableTextObject$/;"	i
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/text_objects/escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
re	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^import re$/;"	i
textwrap	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^import textwrap$/;"	i
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^from UltiSnips.indent_util import IndentUtil$/;"	i
TextObjectTransformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^from UltiSnips.text_objects.transformation import TextObjectTransformation$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^from UltiSnips.text_objects.base import NoneditableTextObject$/;"	i
_REPLACE_NON_WS	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^_REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v
Visual	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^class Visual(NoneditableTextObject, TextObjectTransformation):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def _update(self, done, buf):$/;"	m	class:Visual
vim_helper	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^from UltiSnips import vim_helper$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^from UltiSnips.position import Position$/;"	i
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^from UltiSnips.text_objects.tabstop import TabStop$/;"	i
ChoicesToken	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^from UltiSnips.snippet.parsing.lexer import ChoicesToken$/;"	i
Choices	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^class Choices(TabStop):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __init__(self, parent, token: ChoicesToken):$/;"	m	class:Choices
_get_choices_placeholder	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _get_choices_placeholder(self) -> str:$/;"	m	class:Choices
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _update(self, done, buf):$/;"	m	class:Choices
_do_edit	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:Choices
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __repr__(self):$/;"	m	class:Choices	file:
vim_helper	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^from UltiSnips import vim_helper$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^from UltiSnips.position import Position$/;"	i
_calc_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _calc_end(text, start):$/;"	f
_replace_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _replace_text(buf, start, end, text):$/;"	f
TextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class TextObject:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__($/;"	m	class:TextObject
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
__lt__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject	file:
__le__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __le__(self, other):$/;"	m	class:TextObject	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __repr__(self):$/;"	m	class:TextObject	file:
current_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def current_text(self):$/;"	m	class:TextObject
start	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def start(self):$/;"	m	class:TextObject
end	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def end(self):$/;"	m	class:TextObject
overwrite_with_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite_with_initial_text(self, buf):$/;"	m	class:TextObject
overwrite	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite(self, buf, gtext):$/;"	m	class:TextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:TextObject
EditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class EditableTextObject(TextObject):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
children	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def children(self):$/;"	m	class:EditableTextObject
_editable_children	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _editable_children(self):$/;"	m	class:EditableTextObject
find_parent_for_new_to	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
_do_edit	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:EditableTextObject
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_child_has_moved	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_get_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_next_tab(self, number):$/;"	m	class:EditableTextObject
_get_prev_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_prev_tab(self, number):$/;"	m	class:EditableTextObject
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_tabstop(self, requester, number):$/;"	m	class:EditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:EditableTextObject
_add_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _add_child(self, child):$/;"	m	class:EditableTextObject
_del_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _del_child(self, child):$/;"	m	class:EditableTextObject
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class NoneditableTextObject(TextObject):$/;"	c
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:NoneditableTextObject
contextmanager	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from contextlib import contextmanager$/;"	i
os	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^import os$/;"	i
platform	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^import platform$/;"	i
normalize_file_path	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from UltiSnips.snippet.source.file.common import normalize_file_path$/;"	i
col2byte	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from UltiSnips.compatibility import col2byte, byte2col$/;"	i
byte2col	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from UltiSnips.compatibility import col2byte, byte2col$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from UltiSnips.position import Position$/;"	i
error	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
pylint	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
disable	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
import	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
error	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
unused	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
import	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
vim	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^import vim  # pylint:disable=import-error$/;"	i
pylint	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^import vim  # pylint:disable=import-error$/;"	i
disable	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^import vim  # pylint:disable=import-error$/;"	i
import	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^import vim  # pylint:disable=import-error$/;"	i
error	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^import vim  # pylint:disable=import-error$/;"	i
VimBuffer	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^class VimBuffer:$/;"	c
__getitem__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer	file:
__setitem__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer	file:
__len__	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __len__(self):$/;"	m	class:VimBuffer	file:
line_till_cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def line_till_cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
number	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def number(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
filetypes	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def filetypes(self):$/;"	m	class:VimBuffer
cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self, pos):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
buf	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^buf = VimBuffer()  # pylint:disable=invalid-name$/;"	v
option_set_to	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def option_set_to(name, new_value):$/;"	f
save_mark	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def save_mark(name):$/;"	f
escape	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def escape(inp):$/;"	f
conv	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def conv(obj):$/;"	f	function:escape
command	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def command(cmd):$/;"	f
eval	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def eval(text):$/;"	f
bindeval	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def bindeval(text):$/;"	f
feedkeys	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def feedkeys(keys, mode="n"):$/;"	f
new_scratch_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def new_scratch_buffer(text):$/;"	f
virtual_position	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def virtual_position(line, col):$/;"	f
select	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def select(start, end):$/;"	f
get_dot_vim	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_dot_vim():$/;"	f
set_mark_from_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_mark_from_pos(name, pos):$/;"	f
get_mark_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_mark_pos(name):$/;"	f
set_cursor_from_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_cursor_from_pos(pos):$/;"	f
get_cursor_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_cursor_pos():$/;"	f
delete_mark	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def delete_mark(name):$/;"	f
_set_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _set_pos(name, pos):$/;"	f
_get_pos	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _get_pos(name):$/;"	f
_is_pos_zero	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _is_pos_zero(pos):$/;"	f
_unmap_select_mode_mapping	plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _unmap_select_mode_mapping():$/;"	f
defaultdict	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from collections import defaultdict$/;"	i
glob	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^import glob$/;"	i
os	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^import os$/;"	i
Set	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from typing import Set, List$/;"	i
List	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from typing import Set, List$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from UltiSnips import vim_helper$/;"	i
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from UltiSnips.snippet.definition import UltiSnipsSnippetDefinition$/;"	i
SnippetFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from UltiSnips.snippet.source.file.base import SnippetFileSource$/;"	i
LineIterator	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
head_tail	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
find_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_snippet_files(ft, directory: str) -> Set[str]:$/;"	f
find_all_snippet_directories	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_directories() -> List[str]:$/;"	f
find_all_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_files(ft) -> Set[str]:$/;"	f
_handle_snippet_or_global	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _handle_snippet_or_global($/;"	f
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _parse_snippets_file(data, filename):$/;"	f
UltiSnipsFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^class UltiSnipsFileSource(SnippetFileSource):$/;"	c
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:UltiSnipsFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:UltiSnipsFileSource
os	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^import os$/;"	i
glob	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^import glob$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips import vim_helper$/;"	i
SnipMateSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.snippet.definition import SnipMateSnippetDefinition$/;"	i
SnippetFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.snippet.source.file.base import SnippetFileSource$/;"	i
handle_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.snippet.source.file.common import handle_extends, normalize_file_path$/;"	i
normalize_file_path	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.snippet.source.file.common import handle_extends, normalize_file_path$/;"	i
LineIterator	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
head_tail	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
_splitall	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _splitall(path):$/;"	f
_snipmate_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _snipmate_files_for(ft):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet_file(content, full_filename):$/;"	f
_parse_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet(line, lines, filename):$/;"	f
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippets_file(data, filename):$/;"	f
SnipMateFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^class SnipMateFileSource(SnippetFileSource):$/;"	c
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnipMateFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnipMateFileSource
os	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^import os.path$/;"	i
path	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^import os.path$/;"	i
normalize_file_path	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def normalize_file_path(path: str) -> str:$/;"	f
handle_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_extends(tail, line_index):$/;"	f
handle_action	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_action(head, tail, line_index):$/;"	f
handle_context	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_context(tail, line_index):$/;"	f
defaultdict	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^from collections import defaultdict$/;"	i
os	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^import os$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^from UltiSnips import vim_helper$/;"	i
compatibility	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^from UltiSnips import compatibility$/;"	i
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^from UltiSnips.snippet.source.base import SnippetSource$/;"	i
SnippetSyntaxError	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetSyntaxError(RuntimeError):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self, filename, line_index, msg):$/;"	m	class:SnippetSyntaxError
SnippetFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetFileSource(SnippetSource):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self):$/;"	m	class:SnippetFileSource
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetFileSource
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def refresh(self):$/;"	m	class:SnippetFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnippetFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnippetFileSource
_needs_update	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetFileSource
_load_snippets_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetFileSource
_parse_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippets(self, ft, filename):$/;"	m	class:SnippetFileSource
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/__init__.py	/^from UltiSnips.snippet.source.base import SnippetSource$/;"	i
AddedSnippetsSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/__init__.py	/^from UltiSnips.snippet.source.added import AddedSnippetsSource$/;"	i
SnipMateFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/__init__.py	/^from UltiSnips.snippet.source.file.snipmate import SnipMateFileSource$/;"	i
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^from UltiSnips.snippet.source.base import SnippetSource$/;"	i
AddedSnippetsSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^class AddedSnippetsSource(SnippetSource):$/;"	c
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^    def add_snippet(self, ft, snippet):$/;"	m	class:AddedSnippetsSource
SnippetDictionary	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^class SnippetDictionary:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __init__(self):$/;"	m	class:SnippetDictionary
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def add_snippet(self, snippet):$/;"	m	class:SnippetDictionary
get_matching_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def get_matching_snippets($/;"	m	class:SnippetDictionary
clear_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def clear_snippets(self, priority, triggers):$/;"	m	class:SnippetDictionary
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __len__(self):$/;"	m	class:SnippetDictionary	file:
defaultdict	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^from collections import defaultdict$/;"	i
SnippetDictionary	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^from UltiSnips.snippet.source.snippet_dictionary import SnippetDictionary$/;"	i
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^class SnippetSource:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def __init__(self):$/;"	m	class:SnippetSource
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetSource
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def refresh(self):$/;"	m	class:SnippetSource
_get_existing_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def _get_existing_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
get_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_snippets($/;"	m	class:SnippetSource
get_clear_priority	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_clear_priority(self, filetypes):$/;"	m	class:SnippetSource
get_cleared	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_cleared(self, filetypes):$/;"	m	class:SnippetSource
update_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def update_extends(self, child_ft, parent_fts):$/;"	m	class:SnippetSource
get_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
SnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^from UltiSnips.snippet.definition.base import SnippetDefinition$/;"	i
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^from UltiSnips.snippet.parsing.ulti_snips import parse_and_instantiate$/;"	i
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^class UltiSnipsSnippetDefinition(SnippetDefinition):$/;"	c
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:UltiSnipsSnippetDefinition
SnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^from UltiSnips.snippet.definition.base import SnippetDefinition$/;"	i
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^from UltiSnips.snippet.parsing.snipmate import parse_and_instantiate$/;"	i
SnipMateSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^class SnipMateSnippetDefinition(SnippetDefinition):$/;"	c
SNIPMATE_SNIPPET_PRIORITY	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    SNIPMATE_SNIPPET_PRIORITY = -1000$/;"	v	class:SnipMateSnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def __init__(self, trigger, value, description, location):$/;"	m	class:SnipMateSnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnipMateSnippetDefinition
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/__init__.py	/^from UltiSnips.snippet.definition.ulti_snips import UltiSnipsSnippetDefinition$/;"	i
SnipMateSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/__init__.py	/^from UltiSnips.snippet.definition.snipmate import SnipMateSnippetDefinition$/;"	i
re	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^import re$/;"	i
vim	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^import vim$/;"	i
textwrap	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^import textwrap$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^from UltiSnips import vim_helper$/;"	i
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^from UltiSnips.indent_util import IndentUtil$/;"	i
escape	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^from UltiSnips.text import escape$/;"	i
SnippetInstance	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^from UltiSnips.text_objects import SnippetInstance$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^from UltiSnips.position import Position$/;"	i
SnippetUtilForAction	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^from UltiSnips.text_objects.python_code import SnippetUtilForAction$/;"	i
__WHITESPACE_SPLIT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^__WHITESPACE_SPLIT = re.compile(r"\\s")$/;"	v
_SnippetUtilCursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class _SnippetUtilCursor:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__(self, cursor):$/;"	m	class:_SnippetUtilCursor
preserve	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def preserve(self):$/;"	m	class:_SnippetUtilCursor
is_set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def is_set(self):$/;"	m	class:_SnippetUtilCursor
set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def set(self, line, column):$/;"	m	class:_SnippetUtilCursor
to_vim_cursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def to_vim_cursor(self):$/;"	m	class:_SnippetUtilCursor
__getitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __getitem__(self, index):$/;"	m	class:_SnippetUtilCursor	file:
__setitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __setitem__(self, index, value):$/;"	m	class:_SnippetUtilCursor	file:
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __len__(self):$/;"	m	class:_SnippetUtilCursor	file:
__str__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __str__(self):$/;"	m	class:_SnippetUtilCursor	file:
split_at_whitespace	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def split_at_whitespace(string):$/;"	f
_words_for_line	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def _words_for_line(trigger, before, num_words=None):$/;"	f
SnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class SnippetDefinition:$/;"	c
_INDENT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:SnippetDefinition
_TABS	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:SnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__($/;"	m	class:SnippetDefinition
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __repr__(self):$/;"	m	class:SnippetDefinition	file:
_re_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _re_match(self, trigger):$/;"	m	class:SnippetDefinition
_context_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _context_match(self, visual_content):$/;"	m	class:SnippetDefinition
_eval_code	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _eval_code(self, code, additional_locals={}):$/;"	m	class:SnippetDefinition
_execute_action	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _execute_action(self, action, context, additional_locals={}):$/;"	m	class:SnippetDefinition
_make_debug_exception	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _make_debug_exception(self, e, code=""):$/;"	m	class:SnippetDefinition
has_option	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def has_option(self, opt):$/;"	m	class:SnippetDefinition
description	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def description(self):$/;"	m	class:SnippetDefinition
priority	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def priority(self):$/;"	m	class:SnippetDefinition
trigger	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def trigger(self):$/;"	m	class:SnippetDefinition
matched	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matched(self):$/;"	m	class:SnippetDefinition
location	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def location(self):$/;"	m	class:SnippetDefinition
context	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def context(self):$/;"	m	class:SnippetDefinition
matches	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matches(self, before, visual_content=None):$/;"	m	class:SnippetDefinition
could_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def could_match(self, before):$/;"	m	class:SnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnippetDefinition
do_pre_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_pre_expand(self, visual_content, snippets_stack):$/;"	m	class:SnippetDefinition
do_post_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_expand(self, start, end, snippets_stack):$/;"	m	class:SnippetDefinition
do_post_jump	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_jump($/;"	m	class:SnippetDefinition
launch	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:SnippetDefinition
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^__ALLOWED_TOKENS = [$/;"	v
_create_transformations	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def _create_transformations(all_tokens, seen_ts):$/;"	f
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
Mirror	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
VimLCode	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
Visual	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS_IN_TABSTOPS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS_IN_TABSTOPS = [$/;"	v
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
string	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^import string$/;"	i
re	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^import re$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^from UltiSnips.position import Position$/;"	i
unescape	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^from UltiSnips.text import unescape$/;"	i
_TextIterator	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class _TextIterator:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__iter__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator	file:
__next__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __next__(self):$/;"	m	class:_TextIterator	file:
peek	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def peek(self, count=1):$/;"	m	class:_TextIterator
pos	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
_parse_number	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_number(stream):$/;"	f
_parse_till_closing_brace	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
Token	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class Token:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:Token
TabStopToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TabStopToken(Token):$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+[:}]")$/;"	v	class:TabStopToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TabStopToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken	file:
VisualToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VisualToken(Token):$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VisualToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken	file:
TransformationToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TransformationToken(Token):$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\\/")$/;"	v	class:TransformationToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TransformationToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken	file:
MirrorToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class MirrorToken(Token):$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\$\\d+")$/;"	v	class:MirrorToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:MirrorToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken	file:
ChoicesToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ChoicesToken(Token):$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\|")$/;"	v	class:ChoicesToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ChoicesToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ChoicesToken
_get_unescaped_choice_item	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _get_unescaped_choice_item(self, escaped_choice_item):$/;"	m	class:ChoicesToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ChoicesToken	file:
EscapeCharToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EscapeCharToken(Token):$/;"	c
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream, chars=r"{}\\$`"):$/;"	m	class:EscapeCharToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken	file:
ShellCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ShellCodeToken(Token):$/;"	c
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ShellCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken	file:
PythonCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class PythonCodeToken(Token):$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!p\\s")$/;"	v	class:PythonCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:PythonCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken	file:
VimLCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VimLCodeToken(Token):$/;"	c
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!v\\s")$/;"	v	class:VimLCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VimLCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken	file:
EndOfTextToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EndOfTextToken(Token):$/;"	c
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken	file:
tokenize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def tokenize(text, indent, offset, allowed_tokens):$/;"	f
Position	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^from UltiSnips.position import Position$/;"	i
tokenize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^from UltiSnips.snippet.parsing.lexer import tokenize, TabStopToken$/;"	i
TabStopToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^from UltiSnips.snippet.parsing.lexer import tokenize, TabStopToken$/;"	i
TabStop	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^from UltiSnips.text_objects import TabStop$/;"	i
Mirror	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^from UltiSnips.text_objects import Mirror$/;"	i
MirrorToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^from UltiSnips.snippet.parsing.lexer import MirrorToken$/;"	i
resolve_ambiguity	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def resolve_ambiguity(all_tokens, seen_ts):$/;"	f
tokenize_snippet_text	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def tokenize_snippet_text($/;"	f
_do_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^    def _do_parse(parent, text, allowed_tokens):$/;"	f	function:tokenize_snippet_text
finalize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def finalize(all_tokens, seen_ts, snippet_instance):$/;"	f
UltiSnips_Manager	plugged/ultisnips/pythonx/UltiSnips/__init__.py	/^from UltiSnips.snippet_manager import UltiSnips_Manager$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^from UltiSnips import vim_helper$/;"	i
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^class IndentUtil:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
reset	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def reset(self):$/;"	m	class:IndentUtil
ntabs_to_proper_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
indent_to_spaces	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
spaces_to_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
unittest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^import unittest$/;"	i
diff	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^from diff import diff, guess_edit$/;"	i
guess_edit	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^from diff import diff, guess_edit$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^from position import Position$/;"	i
List	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^from typing import List$/;"	i
transform	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^def transform(a, cmds):$/;"	f
_BaseGuessing	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _BaseGuessing:$/;"	c
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
TestGuessing_Noop0	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
TestGuessing_InsertOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 6, " "),)$/;"	v	class:TestGuessing_InsertOneChar
TestGuessing_InsertOneChar1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 7, " "),)$/;"	v	class:TestGuessing_InsertOneChar1
TestGuessing_BackspaceOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 6, " "),)$/;"	v	class:TestGuessing_BackspaceOneChar
TestGuessing_DeleteOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " "),)$/;"	v	class:TestGuessing_DeleteOneChar
_Base	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _Base:$/;"	c
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
TestEmptyString	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
TestAllMatch	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
TestLotsaNewlines	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
TestCrash	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 1, 6, "kjsdhfjksdhfkjhsdfkh"), ("I", 1, 6, "b"))$/;"	v	class:TestCrash
TestRealLife	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hallo End Beginning"$/;"	v	class:TestRealLife
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hallo End t"$/;"	v	class:TestRealLife
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 10, "Beginning"), ("I", 0, 10, "t"))$/;"	v	class:TestRealLife
TestRealLife1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestRealLife1
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne hallo  Hinten"$/;"	v	class:TestRealLife1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 11, " "),)$/;"	v	class:TestRealLife1
TestWithNewline	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "First Line\\nSecond Line"$/;"	v	class:TestWithNewline
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "n"$/;"	v	class:TestWithNewline
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
TestCheapDelete	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestCheapDelete
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne Hinten"$/;"	v	class:TestCheapDelete
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " hallo"),)$/;"	v	class:TestCheapDelete
TestNoSubstring	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 0, "abc"), ("I", 0, 0, "def"))$/;"	v	class:TestNoSubstring
TestCommonCharacters	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "asomelongertextb"), ("I", 0, 1, "o"))$/;"	v	class:TestCommonCharacters
TestUltiSnipsProblem	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "this is it this is it this is it"$/;"	v	class:TestUltiSnipsProblem
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "this is it a this is it"$/;"	v	class:TestUltiSnipsProblem
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 11, "this is it"), ("I", 0, 11, "a"))$/;"	v	class:TestUltiSnipsProblem
MatchIsTooCheap	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "stdin.h"$/;"	v	class:MatchIsTooCheap
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "s"$/;"	v	class:MatchIsTooCheap
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "tdin.h"),)$/;"	v	class:MatchIsTooCheap
MultiLine	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:MultiLine
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hi first line\\nsecond line k world"$/;"	v	class:MultiLine
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
deque	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from collections import deque, namedtuple$/;"	i
namedtuple	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from collections import deque, namedtuple$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from UltiSnips import vim_helper$/;"	i
byte2col	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from UltiSnips.compatibility import byte2col$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from UltiSnips.position import Position$/;"	i
_Placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^_Placeholder = namedtuple("_FrozenPlaceholder", ["current_text", "start", "end"])$/;"	v
VimPosition	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimPosition(Position):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimPosition
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VimPosition
VimState	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimState:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimState
remember_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_unnamed_register(self, text_to_expect):$/;"	m	class:VimState
restore_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def restore_unnamed_register(self):$/;"	m	class:VimState
remember_position	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
diff_in_buffer_length	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
pos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def pos(self):$/;"	m	class:VimState
ppos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def ppos(self):$/;"	m	class:VimState
remembered_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
VisualContentPreserver	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VisualContentPreserver:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
reset	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
conserve	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
conserve_placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve_placeholder(self, placeholder):$/;"	m	class:VisualContentPreserver
text	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def placeholder(self):$/;"	m	class:VisualContentPreserver
sys	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^import sys$/;"	i
DUMP_FILENAME	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^DUMP_FILENAME = ($/;"	v
echo_to_hierarchy	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def echo_to_hierarchy(text_object):$/;"	f
_do_print	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    def _do_print(text_object, indent=""):$/;"	f	function:echo_to_hierarchy
debug	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def debug(msg):$/;"	f
print_stack	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def print_stack():$/;"	f
traceback	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    import traceback$/;"	i
Enum	plugged/ultisnips/pythonx/UltiSnips/position.py	/^from enum import Enum$/;"	i
JumpDirection	plugged/ultisnips/pythonx/UltiSnips/position.py	/^class JumpDirection(Enum):$/;"	c
FORWARD	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    FORWARD = 1$/;"	v	class:JumpDirection
BACKWARD	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    BACKWARD = 2$/;"	v	class:JumpDirection
Position	plugged/ultisnips/pythonx/UltiSnips/position.py	/^class Position:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __init__(self, line, col):$/;"	m	class:Position
move	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def move(self, pivot, delta):$/;"	m	class:Position
delta	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def delta(self, pos):$/;"	m	class:Position
__add__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __add__(self, pos):$/;"	m	class:Position	file:
__sub__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __sub__(self, pos):$/;"	m	class:Position	file:
__eq__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __eq__(self, other):$/;"	m	class:Position	file:
__ne__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __ne__(self, other):$/;"	m	class:Position	file:
__lt__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __lt__(self, other):$/;"	m	class:Position	file:
__le__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __le__(self, other):$/;"	m	class:Position	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __repr__(self):$/;"	m	class:Position	file:
__getitem__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __getitem__(self, index):$/;"	m	class:Position	file:
unescape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def unescape(text):$/;"	f
escape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def escape(text, chars):$/;"	f
fill_in_whitespace	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def fill_in_whitespace(text):$/;"	f
head_tail	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def head_tail(line):$/;"	f
LineIterator	plugged/ultisnips/pythonx/UltiSnips/text.py	/^class LineIterator:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __init__(self, text):$/;"	m	class:LineIterator
__iter__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __iter__(self):$/;"	m	class:LineIterator	file:
__next__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __next__(self):$/;"	m	class:LineIterator	file:
line_index	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def line_index(self):$/;"	m	class:LineIterator
peek	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def peek(self):$/;"	m	class:LineIterator
defaultdict	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^from collections import defaultdict$/;"	i
sys	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^import sys$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^from UltiSnips import vim_helper$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^from UltiSnips.position import Position$/;"	i
is_complete_edit	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def is_complete_edit(initial_line, original, wanted, cmds):$/;"	f
guess_edit	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def guess_edit(initial_line, last_text, current_text, vim_state):$/;"	f
diff	plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def diff(a, b, sline=0):$/;"	f
defaultdict	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from collections import defaultdict$/;"	i
contextmanager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from contextlib import contextmanager$/;"	i
os	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^import os$/;"	i
Set	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from typing import Set$/;"	i
Path	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from pathlib import Path$/;"	i
vim	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^import vim$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips import vim_helper$/;"	i
err_to_scratch_buffer	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips import err_to_scratch_buffer$/;"	i
diff	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.diff import diff, guess_edit$/;"	i
guess_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.diff import diff, guess_edit$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.position import Position, JumpDirection$/;"	i
JumpDirection	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.position import Position, JumpDirection$/;"	i
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.snippet.definition import UltiSnipsSnippetDefinition$/;"	i
escape	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.text import escape$/;"	i
VimState	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.vim_state import VimState, VisualContentPreserver$/;"	i
VisualContentPreserver	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.vim_state import VimState, VisualContentPreserver$/;"	i
use_proxy_buffer	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.buffer_proxy import use_proxy_buffer, suspend_proxy_edits$/;"	i
suspend_proxy_edits	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.buffer_proxy import use_proxy_buffer, suspend_proxy_edits$/;"	i
_ask_user	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_user(a, formatted):$/;"	f
_show_user_warning	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _show_user_warning(msg):$/;"	f
_ask_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_snippets(snippets):$/;"	f
_select_and_create_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _select_and_create_file_to_edit(potentials: Set[str]) -> str:$/;"	f
_get_potential_snippet_filenames_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _get_potential_snippet_filenames_to_edit($/;"	f
SnippetManager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^class SnippetManager:$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def __init__(self, expand_trigger, forward_trigger, backward_trigger):$/;"	m	class:SnippetManager
jump_forwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
jump_backwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand_or_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
snippets_in_current_scope	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def snippets_in_current_scope(self, search_all):$/;"	m	class:SnippetManager
list_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_snippet($/;"	m	class:SnippetManager
expand_anon	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_anon($/;"	m	class:SnippetManager
register_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def register_snippet_source(self, name, snippet_source):$/;"	m	class:SnippetManager
unregister_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def unregister_snippet_source(self, name):$/;"	m	class:SnippetManager
get_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def get_buffer_filetypes(self):$/;"	m	class:SnippetManager
add_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_buffer_filetypes(self, filetypes: str):$/;"	m	class:SnippetManager
_cursor_moved	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _cursor_moved(self):$/;"	m	class:SnippetManager
_setup_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _setup_inner_state(self):$/;"	m	class:SnippetManager
_teardown_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _teardown_inner_state(self):$/;"	m	class:SnippetManager
_save_last_visual_selection	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _save_last_visual_selection(self):$/;"	m	class:SnippetManager
_leaving_buffer	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_buffer(self):$/;"	m	class:SnippetManager
_reinit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_check_if_still_inside_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _jump(self, jump_direction: JumpDirection):$/;"	m	class:SnippetManager
_leaving_insert_mode	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_insert_mode(self):$/;"	m	class:SnippetManager
_handle_failure	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_snips	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _snips(self, before, partial, autotrigger_only=False):$/;"	m	class:SnippetManager
_do_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _do_snippet(self, snippet, before):$/;"	m	class:SnippetManager
_can_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _can_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_try_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _try_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
can_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
can_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump(self, direction):$/;"	m	class:SnippetManager
can_jump_forwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump_forwards(self):$/;"	m	class:SnippetManager
can_jump_backwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump_backwards(self):$/;"	m	class:SnippetManager
_current_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet(self):$/;"	m	class:SnippetManager
_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _file_to_edit(self, requested_ft, bang):$/;"	m	class:SnippetManager
_action_context	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _action_context(self):$/;"	m	class:SnippetManager
_track_change	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _track_change(self):$/;"	m	class:SnippetManager
_refresh_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _refresh_snippets(self):$/;"	m	class:SnippetManager
UltiSnips_Manager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^UltiSnips_Manager = SnippetManager(  # pylint:disable=invalid-name$/;"	v
unittest	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^import unittest$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^from position import Position$/;"	i
_MPBase	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class _MPBase:$/;"	c
runTest	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    def runTest(self):$/;"	m	class:_MPBase
MovePosition_DelSameLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 1), (0, -8), (0, 1)), ((0, 1), (0, 1), (0, 2)))$/;"	v	class:MovePosition_DelSameLine
MovePosition_DelSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_DelSameLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 4), (0, -3), (0, 3)), ((0, 8), (0, -1), (0, 3)))$/;"	v	class:MovePosition_DelSameLine1
MovePosition_InsSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
MovePosition_InsSameLine2	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 3), (0, 3), (0, 12)),)$/;"	v	class:MovePosition_InsSameLine2
MovePosition_DelSecondLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 12), (0, -4), (1, 0)), ((0, 12), (-1, 0), (0, 12)))$/;"	v	class:MovePosition_DelSecondLine
MovePosition_DelSecondLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
vim	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^import vim$/;"	i
vim_helper	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^from UltiSnips import vim_helper$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^from UltiSnips.position import Position$/;"	i
diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^from UltiSnips.diff import diff$/;"	i
contextmanager	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^from contextlib import contextmanager$/;"	i
use_proxy_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def use_proxy_buffer(snippets_stack, vstate):$/;"	f
suspend_proxy_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def suspend_proxy_edits():$/;"	f
VimBufferProxy	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^class VimBufferProxy(vim_helper.VimBuffer):$/;"	c
__init__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __init__(self, snippets_stack, vstate):$/;"	m	class:VimBufferProxy
is_buffer_changed_outside	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def is_buffer_changed_outside(self):$/;"	m	class:VimBufferProxy
validate_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def validate_buffer(self):$/;"	m	class:VimBufferProxy
__setitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setitem__(self, key, value):$/;"	m	class:VimBufferProxy	file:
__setslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBufferProxy	file:
__getitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getitem__(self, key):$/;"	m	class:VimBufferProxy	file:
__getslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBufferProxy	file:
__len__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __len__(self):$/;"	m	class:VimBufferProxy	file:
append	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def append(self, line, line_number=-1):$/;"	m	class:VimBufferProxy
__delitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __delitem__(self, key):$/;"	m	class:VimBufferProxy	file:
_get_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_diff(self, start, end, new_value):$/;"	m	class:VimBufferProxy
_get_line_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_line_diff(self, line_number, before, after):$/;"	m	class:VimBufferProxy
_apply_change	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _apply_change(self, change):$/;"	m	class:VimBufferProxy
_disable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _disable_edits(self):$/;"	m	class:VimBufferProxy
_enable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _enable_edits(self):$/;"	m	class:VimBufferProxy
os	plugged/ultisnips/test_all.py	/^import os$/;"	i
platform	plugged/ultisnips/test_all.py	/^import platform$/;"	i
subprocess	plugged/ultisnips/test_all.py	/^import subprocess$/;"	i
unittest	plugged/ultisnips/test_all.py	/^import unittest$/;"	i
plugin_cache_dir	plugged/ultisnips/test_all.py	/^def plugin_cache_dir():$/;"	f
clone_plugin	plugged/ultisnips/test_all.py	/^def clone_plugin(plugin):$/;"	f
setup_other_plugins	plugged/ultisnips/test_all.py	/^def setup_other_plugins(all_plugins):$/;"	f
optparse	plugged/ultisnips/test_all.py	/^    import optparse$/;"	i
sys	plugged/ultisnips/test_all.py	/^    import sys$/;"	i
parse_args	plugged/ultisnips/test_all.py	/^    def parse_args():$/;"	f	function:setup_other_plugins
flatten_test_suite	plugged/ultisnips/test_all.py	/^    def flatten_test_suite(suite):$/;"	f	function:setup_other_plugins
main	plugged/ultisnips/test_all.py	/^    def main():$/;"	f	function:setup_other_plugins
os	plugged/ultisnips/test/test_Interpolation.py	/^import os$/;"	i
_VimTest	plugged/ultisnips/test/test_Interpolation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
EX	plugged/ultisnips/test/test_Interpolation.py	/^from test.constant import EX, JF, ESC$/;"	i
JF	plugged/ultisnips/test/test_Interpolation.py	/^from test.constant import EX, JF, ESC$/;"	i
ESC	plugged/ultisnips/test/test_Interpolation.py	/^from test.constant import EX, JF, ESC$/;"	i
running_on_windows	plugged/ultisnips/test/test_Interpolation.py	/^from test.util import running_on_windows$/;"	i
TabStop_Shell_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo` you!")$/;"	v	class:TabStop_Shell_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo you!and more"$/;"	v	class:TabStop_Shell_SimpleExample
TabStop_Shell_WithUmlauts	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_WithUmlauts(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_WithUmlauts
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo höüäh` you!")$/;"	v	class:TabStop_Shell_WithUmlauts
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_WithUmlauts
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi höüäh you!and more"$/;"	v	class:TabStop_Shell_WithUmlauts
TabStop_Shell_TextInNextLine	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo`\\nWeiter")$/;"	v	class:TabStop_Shell_TextInNextLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo\\nWeiterand more"$/;"	v	class:TabStop_Shell_TextInNextLine
TabStop_Shell_InDefValue_Leave	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now fromecho endand more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
TabStop_Shell_InDefValue_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "overwrite" + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo overwrite endand more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
TabStop_Shell_TestEscapedChars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "$hi"$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "blah"$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
TabStop_Shell_ShebangPython	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_ShebangPython
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:TabStop_Shell_ShebangPython
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now Hallo Welt endand more"$/;"	v
TabStop_VimScriptInterpolation_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    hi 4 End"$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
PythonCodeOld_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCodeOld_SimpleExample
PythonCodeOld_ReferencePlaceholderAfter	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
PythonCodeOld_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
PythonCodeOld_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "egal Hallo End"$/;"	v
PythonCodeOld_IndentedMultiline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_IndentedMultiline
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    start b isbigger a end"$/;"	v
PythonCode_UseNewOverOld	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_UseNewOverOld
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi New End"$/;"	v
PythonCode_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCode_SimpleExample
PythonCode_SimpleExample_ReturnValueIsEmptyString	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hiEnd"$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
PythonCode_ReferencePlaceholder	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCode_ReferencePlaceholder
PythonCode_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
PythonCode_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "egal Hallo End"$/;"	v
PythonCode_MultilineIndented	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultilineIndented
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    start b isbigger a end"$/;"	v
PythonCode_SimpleAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2 End"$/;"	v
PythonCode_MultiAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2\\nHallo3 End"$/;"	v
PythonCode_MultiAppendSimpleIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendSimpleIndent
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v
PythonCode_SimpleMkline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleMkline
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v
PythonCode_MultiAppendShift	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShift
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v
PythonCode_MultiAppendShiftMethods	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShiftMethods
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v
PythonCode_ResetIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_ResetIndent
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v
PythonCode_IndentEtSw	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSw
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSw
PythonCode_IndentEtSwOffset	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSwOffset
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSwOffset
PythonCode_IndentNoetSwTs	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentNoetSwTs
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentNoetSwTs
PythonCode_OptExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_OptExists
PythonCode_OptNoExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_IndentProblem	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentProblem
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = " " * 8 + "test" + EX  # < 8 works.$/;"	v
PythonCode_TrickyReferences	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "ups test" + EX$/;"	v	class:PythonCode_TrickyReferences
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ups egal hi hi"$/;"	v	class:PythonCode_TrickyReferences
PythonCode_Locals	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_Locals(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_Locals
PythonCode_LongerTextThanSource_Chars	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
PythonCode_LongerTextThanSource_MultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + 100 * "\\n" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
PythonCode_AccessKilledTabstop_OverwriteSecond	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "okay"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "OKAYhokayoOKAY"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
PythonCode_AccessKilledTabstop_OverwriteFirst	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
PythonCode_CanOverwriteTabstop	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_CanOverwriteTabstop(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_CanOverwriteTabstop
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "blah" + ", bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "bl-\\n\\tah, bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
PythonVisual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "abc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hbabc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
PythonVisual_SelectOneWord	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_SelectOneWord
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:PythonVisual_SelectOneWord
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hvblablubb"$/;"	v	class:PythonVisual_SelectOneWord
PythonVisual_LineSelect_Simple	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hVhello\\nnice\\nworld\\nb"$/;"	v	class:PythonVisual_LineSelect_Simple
PythonVisual_HasAccessToSelectedPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToSelectedPlaceholders(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + ESC$/;"	v
PythonVisual_HasAccessToZeroPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToZeroPlaceholders(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + JF + JF + JF$/;"	v
Python_SnipRvCanBeNonText	plugged/ultisnips/test/test_Interpolation.py	/^class Python_SnipRvCanBeNonText(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "`!p snip.rv = 5`")$/;"	v	class:Python_SnipRvCanBeNonText
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:Python_SnipRvCanBeNonText
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "5"$/;"	v	class:Python_SnipRvCanBeNonText
_VimTest	plugged/ultisnips/test/test_Editing.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
check_required_vim_version	plugged/ultisnips/test/test_Editing.py	/^def check_required_vim_version(test):$/;"	f
Undo_RemoveMultilineSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveMultilineSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:Undo_RemoveMultilineSnippet
Undo_RemoveEditInTabstop	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1 Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveEditInTabstop
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "hello test" + EX + "upsi" + ESC + "hh" + "iabcdef" + ESC + "u"$/;"	v	class:Undo_RemoveEditInTabstop
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello upsi Hello\\naaa upsi bbb\\nWorld"$/;"	v	class:Undo_RemoveEditInTabstop
Undo_RemoveWholeSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\n${1:Hello}World")$/;"	v	class:Undo_RemoveWholeSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "first line\\n\\n\\n\\n\\n\\nthird line" + ESC + "3k0itest" + EX + ESC + "u6j"$/;"	v	class:Undo_RemoveWholeSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "first line\\n\\n\\ntest\\n\\n\\nthird line"$/;"	v	class:Undo_RemoveWholeSnippet
Undo_RemoveOneSnippetByTime	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "u"$/;"	v	class:Undo_RemoveOneSnippetByTime
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\ti"$/;"	v	class:Undo_RemoveOneSnippetByTime
Undo_RemoveOneSnippetByTime2	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime2(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "uu"$/;"	v	class:Undo_RemoveOneSnippetByTime2
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\t"$/;"	v	class:Undo_RemoveOneSnippetByTime2
Undo_ChangesInPlaceholder	plugged/ultisnips/test/test_Editing.py	/^class Undo_ChangesInPlaceholder(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_ChangesInPlaceholder
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + ESC + "u"$/;"	v	class:Undo_ChangesInPlaceholder
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if :\\n\\t"$/;"	v	class:Undo_ChangesInPlaceholder
Undo_CompletelyUndoSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_CompletelyUndoSnippet(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_CompletelyUndoSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + "feh" + ESC + "uuuu"$/;"	v	class:Undo_CompletelyUndoSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = ""$/;"	v	class:Undo_CompletelyUndoSnippet
JumpForward_DefSnippet	plugged/ultisnips/test/test_Editing.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1}\\n`!p snip.rv = '\\\\n'.join(t[1].split())`\\n\\n${0:pass}")$/;"	v	class:JumpForward_DefSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a b c" + JF + "shallnot"$/;"	v	class:JumpForward_DefSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "a b c\\na\\nb\\nc\\n\\nshallnot"$/;"	v	class:JumpForward_DefSnippet
DeleteSnippetInsertion0	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hello} $1")$/;"	v	class:DeleteSnippetInsertion0
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "Vkx" + "i\\nworld\\n"$/;"	v	class:DeleteSnippetInsertion0
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "world"$/;"	v	class:DeleteSnippetInsertion0
DeleteSnippetInsertion1	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:DeleteSnippetInsertion1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:DeleteSnippetInsertion1
DoNotCrashOnUndoAndJumpInNestedSnippet	plugged/ultisnips/test/test_Editing.py	/^class DoNotCrashOnUndoAndJumpInNestedSnippet(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"if $1: $2")$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + "test" + EX + ESC + "u" + JF$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "if a: test"$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
DeleteLastTwoLinesInSnippet	plugged/ultisnips/test/test_Editing.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1hello\\nnice\\nworld")$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "j2dd"$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello"$/;"	v	class:DeleteLastTwoLinesInSnippet
DeleteCurrentTabStop1_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\nend")$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "ddi" + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "end"$/;"	v	class:DeleteCurrentTabStop1_JumpBack
DeleteCurrentTabStop2_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddi" + JB + "hello"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nend"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
DeleteCurrentTabStop3_JumpAround	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddkji" + JB + "hello" + JF + "world"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nendworld"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
Backspace_TabStop_Zero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${0:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_Zero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_Zero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_Zero
Backspace_TabStop_NotZero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${2:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_NotZero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_NotZero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_NotZero
UpdateModifiedSnippetWithoutCursorMove1	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove1(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:one}(${2:xxx})${3:three}")$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "aaaaa" + JF + BS + JF + "3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = "aaaaa()3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
UpdateModifiedSnippetWithoutCursorMove2	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove2(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ($/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + BS + JF + "Int" + JF + "body"$/;"	v
_VimTest	plugged/ultisnips/test/test_Chars.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
running_on_windows	plugged/ultisnips/test/test_Chars.py	/^from test.util import running_on_windows$/;"	i
_snip_quote	plugged/ultisnips/test/test_Chars.py	/^def _snip_quote(qt):$/;"	f
Snippet_With_SingleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
Snippet_With_SingleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
Snippet_With_DoubleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote
Snippet_With_DoubleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote_List
RemoveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:RemoveTrailingWhitespace
TrimSpacesAtEndOfLines	plugged/ultisnips/test/test_Chars.py	/^class TrimSpacesAtEndOfLines(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:TrimSpacesAtEndOfLines
DoNotTrimSpacesAtEndOfLinesByDefault	plugged/ultisnips/test/test_Chars.py	/^class DoNotTrimSpacesAtEndOfLinesByDefault(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
LeaveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:LeaveTrailingWhitespace
TrailingNewline_TabStop_NLInsideStuffBehind	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v
TrailingNewline_TabStop_JustNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_JustNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v
TrailingNewline_TabStop_EndNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v
TrailingNewline_TabStop_StartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_StartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v
TrailingNewline_TabStop_EndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v
TrailingNewline_TabStop_NotEndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v
TrailingNewline_TabStop_ExtraNL_ECR	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v
_MultiLineDefault	plugged/ultisnips/test/test_Chars.py	/^class _MultiLineDefault(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:_MultiLineDefault
MultiLineDefault_Jump	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + JF + "y"$/;"	v	class:MultiLineDefault_Jump
MultiLineDefault_Type	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "z" + JF + "y"$/;"	v	class:MultiLineDefault_Type
MultiLineDefault_BS	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "y"$/;"	v	class:MultiLineDefault_BS
_UmlautsBase	plugged/ultisnips/test/test_Chars.py	/^class _UmlautsBase(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Chars.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:_UmlautsBase
Snippet_With_Umlauts_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_Umlauts_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts_List
Snippet_With_Umlauts	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "teüst" + EX$/;"	v	class:Snippet_With_Umlauts
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts
Snippet_With_Umlauts_TypeOn	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üüüüüßßßß")$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üüüüüßßßßmore text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
Snippet_With_Umlauts_OverwriteFirst	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text" + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü more text üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
Snippet_With_Umlauts_OverwriteSecond	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + "more text" + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü more textßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
Snippet_With_Umlauts_OverwriteNone	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
Snippet_With_Umlauts_Mirrors	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü $1")$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hello üü hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
Snippet_With_Umlauts_Python	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hüüll"$/;"	v	class:Snippet_With_Umlauts_Python
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hüüll üü aaaaa"$/;"	v	class:Snippet_With_Umlauts_Python
UmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class UmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "ööuu trig b" + 2 * ARR_L + EX$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "ööuu success b"$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
NoUmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class NoUmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "oouu trig b" + 2 * ARR_L + EX$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "oouu success b"$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
_VimTest	plugged/ultisnips/test/test_MultipleMatches.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_MultipleMatches	plugged/ultisnips/test/test_MultipleMatches.py	/^class _MultipleMatches(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:_MultipleMatches
Multiple_SimpleCaseSelectFirst_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "1\\n"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case1"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
Multiple_SimpleCaseSelectSecond_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "2\\n"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
Multiple_SimpleCaseSelectTooHigh_ESelectLast	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "5\\n"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
Multiple_SimpleCaseSelectZero_EEscape	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "0\\n" + "hi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
Multiple_SimpleCaseEscapeOut_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + ESC + "hi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
Multiple_ManySnippetsOneTrigger_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + " " + ESC + ESC + "ahi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
_VimTest	plugged/ultisnips/test/test_SnipMate.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
snipMate_SimpleSnippet	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippet(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippet
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet\\n# With a comment"$/;"	v
snipMate_Disabled	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Disabled(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Disabled
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX$/;"	v
_extra_vim_config	plugged/ultisnips/test/test_SnipMate.py	/^    def _extra_vim_config(self, vim_config):$/;"	f
snipMate_OtherFiletype	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OtherFiletype(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OtherFiletype
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX + "\\nworked"$/;"	v
snipMate_MultiMatches	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_MultiMatches(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_MultiMatches
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "2\\n"$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "two"$/;"	v
snipMate_SimpleSnippetSubDirectory	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetSubDirectory(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetSubDirectory
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet"$/;"	v
snipMate_SimpleSnippetInSnippetFile	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetInSnippetFile(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "\\nhello1" + EX + "\\nhello2" + EX$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a stand alone snippet\\nThis is two stand alone snippet\\nThree"$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
snipMate_Interpolation	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Interpolation(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Interpolation
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "lac03lu"$/;"	v
snipMate_InterpolationWithSystem	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_InterpolationWithSystem(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_InterpolationWithSystem
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "laöäülu"$/;"	v
snipMate_TestMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrors(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "for" + EX + "blub" + JF + "j" + JF + "hi"$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "for (j; j < blub; blub++) {\\n\\thi\\n}"$/;"	v
snipMate_TestNoBraceTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstops(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + "blub" + JF + "blah"$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blah"$/;"	v
snipMate_TestNoBraceTabstopsAndMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstopsAndMirrors(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + "blub" + JF + "blah"$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blub, blah is blah"$/;"	v
snipMate_TestMirrorsInPlaceholders	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + JF + "ende"$/;"	v
snipMate_TestMirrorsInPlaceholders_Overwrite	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders_Overwrite(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + "not" + JF + "ende"$/;"	v
snipMate_Visual_Simple	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Visual_Simple(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Visual_Simple
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "v" + EX$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hblablubb"$/;"	v
snipMate_NoNestedTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_NoNestedTabstops(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_NoNestedTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + JF + "hi"$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "h$${2:blub}$$hi"$/;"	v
snipMate_Extends	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Extends(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Extends
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blah"$/;"	v
snipMate_EmptyLinesContinueSnippets	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_EmptyLinesContinueSnippets(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_EmptyLinesContinueSnippets
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub\\n\\nblah\\n"$/;"	v
snipMate_OverwrittenByRegExpTrigger	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OverwrittenByRegExpTrigger(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = "def" + EX$/;"	v
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "ultisnips"$/;"	v
snipMate_Issue658	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue658(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue658
sys	plugged/ultisnips/test/test_Plugin.py	/^import sys$/;"	i
_VimTest	plugged/ultisnips/test/test_Plugin.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
Plugin_SuperTab_SimpleTest	plugged/ultisnips/test/test_Plugin.py	/^class Plugin_SuperTab_SimpleTest(_VimTest):$/;"	c
plugins	plugged/ultisnips/test/test_Plugin.py	/^    plugins = ["ervandew\/supertab"]$/;"	v	class:Plugin_SuperTab_SimpleTest
snippets	plugged/ultisnips/test/test_Plugin.py	/^    snippets = ("long", "Hello", "", "w")$/;"	v	class:Plugin_SuperTab_SimpleTest
keys	plugged/ultisnips/test/test_Plugin.py	/^    keys = ($/;"	v	class:Plugin_SuperTab_SimpleTest
wanted	plugged/ultisnips/test/test_Plugin.py	/^    wanted = "longtextlongtext\\nlongtextlongtext\\nHello"$/;"	v	class:Plugin_SuperTab_SimpleTest
_before_test	plugged/ultisnips/test/test_Plugin.py	/^    def _before_test(self):$/;"	m	class:Plugin_SuperTab_SimpleTest
_extra_vim_config	plugged/ultisnips/test/test_Plugin.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Plugin_SuperTab_SimpleTest
_VimTest	plugged/ultisnips/test/test_Visual.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
Visual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Visual.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "abc"$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbabc"$/;"	v	class:Visual_NoVisualSelection_Ignore
Visual_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:Visual_SelectOneWord
Visual_SelectOneWordInclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordInclusive(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordInclusive
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordInclusive
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyyybxxx"$/;"	v	class:Visual_SelectOneWordInclusive
Visual_SelectOneWordExclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordExclusive(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordExclusive
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordExclusive
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyybyxxx"$/;"	v	class:Visual_SelectOneWordExclusive
_extra_vim_config	plugged/ultisnips/test/test_Visual.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Visual_SelectOneWordExclusive
Visual_SelectOneWord_ProblemAfterTab	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "\\tblablub" + ESC + "5hv3l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "\\tbhlablbub"$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
VisualWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hworldbhi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
VisualWithDefaultWithSlashes_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "h\/\/ bodybhi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
VisualWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:VisualWithDefault_ExpandWithVisual
Visual_ExpandTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_ExpandTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "\\ntest" + EX$/;"	v	class:Visual_ExpandTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb\\nhb"$/;"	v	class:Visual_ExpandTwice
Visual_SelectOneWord_TwiceVisual	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b${VISUAL}a")$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbblabluba"$/;"	v	class:Visual_SelectOneWord_TwiceVisual
Visual_SelectOneWord_Inword	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_Inword
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0lv4l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_Inword
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "bhlablubb"$/;"	v	class:Visual_SelectOneWord_Inword
Visual_SelectOneWord_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v$" + EX + "test" + EX + ESC + "o"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablub\\nb"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
Visual_SelectOneWordWithTabstop_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${2:ahh}${VISUAL}${1:ups}b", "Description", "i")$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hnblablub\\nmmmbdone"$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
Visual_InDefaultText_SelectOneWord_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + JF + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbhello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
Visual_InDefaultText_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhellob"$/;"	v	class:Visual_InDefaultText_SelectOneWord
Visual_CrossOneLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_CrossOneLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "bla blub\\n  helloi" + ESC + "0k4lvjll" + EX + "test" + EX$/;"	v	class:Visual_CrossOneLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "bla hblub\\n  hellobi"$/;"	v	class:Visual_CrossOneLine
Visual_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhello\\n nice\\n worldb"$/;"	v	class:Visual_LineSelect_Simple
Visual_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefhello\\n    nice\\n    worldaftbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
Visual_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
Visual_LineSelect_CheckIndentSimple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentSimple
Visual_LineSelect_CheckIndentTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "    hello\\n    nice\\n\\tworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentTwice
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeahello\\n\\tnice\\n\\tworldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "ups" + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hupsbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforeaaa${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "hello\\n\\t ${1:${VISUAL}}\\nend")$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
Visual_LineSelect_WithTabStop	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend")$/;"	v	class:Visual_LineSelect_WithTabStop
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "super" + JF + "done"$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone"$/;"	v	class:Visual_LineSelect_WithTabStop
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${0:${VISUAL}}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
Visual_LineSelect_DedentLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_DedentLine(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("if", "if {\\n\\t${VISUAL}$0\\n}")$/;"	v	class:Visual_LineSelect_DedentLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_LineSelect_DedentLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "if {\\n\\tif {\\n\\t\\tone\\n\\t\\ttwo\\n\\t}\\n\\tthree\\n}"$/;"	v	class:Visual_LineSelect_DedentLine
VisualTransformation_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformation_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformation_SelectOneWord
VisualTransformationWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hWORLDbhi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
VisualTransformationWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
VisualTransformation_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hHELLO\\n NICE\\n WORLDb"$/;"	v	class:VisualTransformation_LineSelect_Simple
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefHELLO\\n    NICE\\n    WORLDaftbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
VisualTransformation_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
_VimTest	plugged/ultisnips/test/test_Movement.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
CursorMovement_Multiline_ECR	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this is something\\nvery nice\\nnot" + JF + "more text"$/;"	v	class:CursorMovement_Multiline_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = ($/;"	v	class:CursorMovement_Multiline_ECR
CursorMovement_BS_InEditMode	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Movement.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:CursorMovement_BS_InEditMode
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("<trh", "<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3")$/;"	v	class:CursorMovement_BS_InEditMode
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "<trh" + EX + "blah" + JF + BS + BS + JF + "end"$/;"	v	class:CursorMovement_BS_InEditMode
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend"$/;"	v	class:CursorMovement_BS_InEditMode
IMMoving_CursorsKeys_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Some}")$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "text" + 3 * ARR_U + 6 * ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "text"$/;"	v	class:IMMoving_CursorsKeys_ECR
IMMoving_AcceptInputWhenMoved_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this" + 2 * ARR_L + "hallo\\nwelt"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "thhallo\\nweltis thhallo\\nweltis"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
IMMoving_NoExiting_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 7 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NoExiting_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExiting_ECR
IMMoving_NoExitingEventAtEnd_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + JF + "hallo"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
IMMoving_ExitWhenOutsideRight_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + ARR_R + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab blub tab " + JF + "hallothis"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 3 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo this"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
IMMoving_ExitWhenOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 4 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello" + JF + "hallo tab blub this"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
IMMoving_ExitWhenOutsideAbove_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = JF + "hallo\\nhello tab\\nblub this"$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
IMMoving_ExitWhenOutsideBelow_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab\\nblub this\\n" + JF + "testhallo"$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
platform	plugged/ultisnips/test/util.py	/^import platform$/;"	i
unidecode	plugged/ultisnips/test/util.py	/^    import unidecode$/;"	i
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = True$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = False$/;"	v
running_on_windows	plugged/ultisnips/test/util.py	/^def running_on_windows():$/;"	f
no_unidecode_available	plugged/ultisnips/test/util.py	/^def no_unidecode_available():$/;"	f
_VimTest	plugged/ultisnips/test/test_Autotrigger.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
check_required_vim_version	plugged/ultisnips/test/test_Autotrigger.py	/^def check_required_vim_version(test):$/;"	f
Autotrigger_CanMatchSimpleTrigger	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchSimpleTrigger(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
Autotrigger_CanMatchContext	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchContext(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchContext
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchContext
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a\\na"$/;"	v	class:Autotrigger_CanMatchContext
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered\\na"$/;"	v	class:Autotrigger_CanMatchContext
Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "abc"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
Autotrigger_WillProduceNoExceptionWithVimLowerThan214	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_WillProduceNoExceptionWithVimLowerThan214(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = ($/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "abc"$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "abc"$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
Autotrigger_CanMatchPreviouslySelectedPlaceholder	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchPreviouslySelectedPlaceholder(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
files	plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
_VimTest	plugged/ultisnips/test/test_ListSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_ListAllSnippets	plugged/ultisnips/test/test_ListSnippets.py	/^class _ListAllSnippets(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_ListSnippets.py	/^    snippets = ($/;"	v	class:_ListAllSnippets
ListAllAvailable_NothingTyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NothingTyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "" + LS + "3\\n"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "BLAAH"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
ListAllAvailable_SpaceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_SpaceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = " " + LS + "3\\n"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = " BLAAH"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
ListAllAvailable_BraceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_BraceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "} " + LS + "3\\n"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "} BLAAH"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
ListAllAvailable_testtyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo BLAAH"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult(_ListAllSnippets):$/;"	c
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "1\\n"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo TEST ONE"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
ListAllAvailable_NonDefined_NoExpectionShouldBeRaised	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NonDefined_NoExpectionShouldBeRaised(_ListAllSnippets):$/;"	c
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo qualle" + LS + "Hi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo qualleHi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
ListAllAvailable_Disabled_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_Disabled_ExpectCorrectResult(_ListAllSnippets):$/;"	c
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_ListSnippets.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ListAllAvailable_Disabled_ExpectCorrectResult
_VimTest	plugged/ultisnips/test/test_Autocommands.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
Autocommands	plugged/ultisnips/test/test_Autocommands.py	/^class Autocommands(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Autocommands.py	/^    snippets = ("test", "[ ${1:foo} ]")$/;"	v	class:Autocommands
args	plugged/ultisnips/test/test_Autocommands.py	/^    args = ""$/;"	v	class:Autocommands
keys	plugged/ultisnips/test/test_Autocommands.py	/^    keys = ($/;"	v	class:Autocommands
wanted	plugged/ultisnips/test/test_Autocommands.py	/^    wanted = "[ [ bar ] ] done M1U1"$/;"	v	class:Autocommands
_extra_vim_config	plugged/ultisnips/test/test_Autocommands.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autocommands
_VimTest	plugged/ultisnips/test/test_TabStop.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
TabStopSimpleReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplace_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} ${1:Beginning}")$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Du Nase na"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r":latex:\\`$1\\`$0")$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
TabStopSimpleReplaceReversed_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceReversed_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${1:End} ${0:Beginning}")$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo na Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
TabStopSimpleReplaceSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
TabStopSimpleReplaceSurrounded1_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded1_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
TabStop_Exit_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Exit_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "$0 run")$/;"	v	class:TabStop_Exit_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX + "test"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "test run"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
TabStopNoReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNoReplace_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "echo ${1:Hallo}")$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "echo Hallo"$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
TabStop_EscapingCharsBackticks	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip ` literal"$/;"	v	class:TabStop_EscapingCharsBackticks
TabStop_EscapingCharsDollars	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hi"$/;"	v	class:TabStop_EscapingCharsDollars
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip $0 $hi end"$/;"	v	class:TabStop_EscapingCharsDollars
TabStop_EscapingCharsDollars1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "a${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars1
TabStop_EscapingCharsDollars_BeginningOfLine	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\n\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "\\n${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
TabStop_EscapingChars_Backslash	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "This \\\\ is a backslash!"$/;"	v	class:TabStop_EscapingChars_Backslash
TabStop_EscapingChars_Backslash2	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
TabStop_EscapingChars_Backslash3	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
TabStop_EscapingChars_Backslash4	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hello" + JF + "world"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
TabStop_EscapingChars_RealLife	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "[ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "usage: `basename $0` [ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
TabStopEscapingWhenSelected_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:default}")$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip default"$/;"	v	class:TabStopEscapingWhenSelected_ECR
TabStopEscapingWhenSelectedSingleCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:i}")$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip i"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
TabStopEscapingWhenSelectedNoCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip $1")$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip "$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
TabStopWithOneChar_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopWithOneChar_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "nothing ${1:i} hups")$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "ship"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "nothing ship hups"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
TabStopTestJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte ${1:Beginning}")$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test mitte BeginningHi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
TabStopTestJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping2_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "each_byte { |${1:byte}| $0 }")$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Blah"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "each_byte { |byte| Blah }"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 $1")$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Test" + JF + "Hi" + JF + JF + "du"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Hi" + 2 * JF + "du Test"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
TabStopTestBackwardJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte${1:Beginning}")$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah mitteLets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
TabStopTestBackwardJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping2_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah Lets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
TabStopTestMultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestMultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work")$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + " blah" + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
TabStop_TSInDefaultTextRLExample_DeleteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
TabStop_TSInDefaultTextRLExample_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End" + JB + "yes" + JF + "Begin" + JF + "Hi"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
TabStop_TSInDefaultText_ZeroLengthZerothTabstop	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: snippet start\\nNested tabstop: hello\\nsnippet end\\nTrailing text"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "blub" + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: blub\\nTrailing texthello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	plugged/ultisnips/test/test_TabStop.py	/^):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	plugged/ultisnips/test/test_TabStop.py	/^):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	plugged/ultisnips/test/test_TabStop.py	/^):$/;"	c
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
TabStop_TSInDefaultNested_OverwriteOneJumpAround	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JB + JB + "Blah" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Blah Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
TabStop_TSInDefault_MirrorsOutside_DoNothing	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second second"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
TabStop_TSInDefault_MirrorsOutside_Overwrite0	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
TabStop_TSInDefault_MirrorsOutside_Overwrite1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo: Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
TabStop_Multiline_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_Leave
TabStop_Multiline_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing world"$/;"	v	class:TabStop_Multiline_Overwrite
TabStop_Multiline_MirrorInFront_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
TabStop_Multiline_MirrorInFront_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing Nothing world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world")$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Nothing"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi  Nothing  Nothing world"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
TabStopNavigatingInInsertModeSimple_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNavigatingInInsertModeSimple_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "Hallo ${1:WELT} ups")$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "haselnut" + 2 * ARR_L + "hips" + JF + "end"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo haselnhipsut upsend"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
TabStop_CROnlyOnSelectedNear	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_CROnlyOnSelectedNear(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "t$1t${2: }t{\\n\\t$0\\n}")$/;"	v	class:TabStop_CROnlyOnSelectedNear
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "\\n" + JF + "t"$/;"	v	class:TabStop_CROnlyOnSelectedNear
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "tt\\nt{\\n\\tt\\n}"$/;"	v	class:TabStop_CROnlyOnSelectedNear
TabStop_AdjacentTabStopAddText_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_AdjacentTabStopAddText_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "[ $1$2 ] $1")$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World" + JF$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "[ HelloWorld ] Hello"$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
_VimTest	plugged/ultisnips/test/test_Expand.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_SimpleExpands	plugged/ultisnips/test/test_Expand.py	/^class _SimpleExpands(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!")$/;"	v	class:_SimpleExpands
SimpleExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX$/;"	v	class:SimpleExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!"$/;"	v	class:SimpleExpand_ExpectCorrectResult
SimpleExpandTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTwice_ExpectCorrectResult(_SimpleExpands):$/;"	c
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nhallo" + EX$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo Welt!"$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
SimpleExpandNewLineAndBackspae_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandNewLineAndBackspae_ExpectCorrectResult(_SimpleExpands):$/;"	c
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo We"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
SimpleExpandTypeAfterExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAfterExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
SimpleExpandTypeAndDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAndDelete_ExpectCorrectResult(_SimpleExpands):$/;"	c
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "na du hallo" + EX + "and again\\b\\b\\b\\b\\bblub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "na du Hallo Welt!and blub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
DoNotExpandAfterSpace_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class DoNotExpandAfterSpace_ExpectCorrectResult(_SimpleExpands):$/;"	c
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
ExitSnippetModeAfterTabstopZero	plugged/ultisnips/test/test_Expand.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", "SimpleText")$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "SimpleText" + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
ExpandInTheMiddleOfLine_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class ExpandInTheMiddleOfLine_ExpectCorrectResult(_SimpleExpands):$/;"	c
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt! gehts"$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
MultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:MultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehts gehts"$/;"	v	class:MultilineExpand_ExpectCorrectResult
MultilineExpandTestTyping_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpandTestTyping_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX + "Huiui!"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
SimpleExpandEndingWithNewline_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandEndingWithNewline_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt\\n")$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt\\n\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
SimpleExpand_DoNotClobberDefaultRegister	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_DoNotClobberDefaultRegister(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo ${1:Welt}")$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + BS + ESC + "o" + ESC + "P"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo \\n"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
_extra_vim_config	plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpand_DoNotClobberDefaultRegister
os	plugged/ultisnips/test/vim_test_case.py	/^import os$/;"	i
subprocess	plugged/ultisnips/test/vim_test_case.py	/^import subprocess$/;"	i
tempfile	plugged/ultisnips/test/vim_test_case.py	/^import tempfile$/;"	i
textwrap	plugged/ultisnips/test/vim_test_case.py	/^import textwrap$/;"	i
time	plugged/ultisnips/test/vim_test_case.py	/^import time$/;"	i
unittest	plugged/ultisnips/test/vim_test_case.py	/^import unittest$/;"	i
SEQUENCES	plugged/ultisnips/test/vim_test_case.py	/^from test.constant import SEQUENCES, EX$/;"	i
EX	plugged/ultisnips/test/vim_test_case.py	/^from test.constant import SEQUENCES, EX$/;"	i
create_directory	plugged/ultisnips/test/vim_test_case.py	/^from test.vim_interface import create_directory, TempFileManager$/;"	i
TempFileManager	plugged/ultisnips/test/vim_test_case.py	/^from test.vim_interface import create_directory, TempFileManager$/;"	i
plugin_cache_dir	plugged/ultisnips/test/vim_test_case.py	/^def plugin_cache_dir():$/;"	f
VimTestCase	plugged/ultisnips/test/vim_test_case.py	/^class VimTestCase(unittest.TestCase, TempFileManager):$/;"	c
snippets	plugged/ultisnips/test/vim_test_case.py	/^    snippets = ()$/;"	v	class:VimTestCase
files	plugged/ultisnips/test/vim_test_case.py	/^    files = {}$/;"	v	class:VimTestCase
text_before	plugged/ultisnips/test/vim_test_case.py	/^    text_before = " --- some text before --- \\n\\n"$/;"	v	class:VimTestCase
text_after	plugged/ultisnips/test/vim_test_case.py	/^    text_after = "\\n\\n --- some text after --- "$/;"	v	class:VimTestCase
expected_error	plugged/ultisnips/test/vim_test_case.py	/^    expected_error = ""$/;"	v	class:VimTestCase
wanted	plugged/ultisnips/test/vim_test_case.py	/^    wanted = ""$/;"	v	class:VimTestCase
keys	plugged/ultisnips/test/vim_test_case.py	/^    keys = ""$/;"	v	class:VimTestCase
sleeptime	plugged/ultisnips/test/vim_test_case.py	/^    sleeptime = 0.00$/;"	v	class:VimTestCase
output	plugged/ultisnips/test/vim_test_case.py	/^    output = ""$/;"	v	class:VimTestCase
plugins	plugged/ultisnips/test/vim_test_case.py	/^    plugins = []$/;"	v	class:VimTestCase
skip_if	plugged/ultisnips/test/vim_test_case.py	/^    skip_if = lambda self: None$/;"	v	class:VimTestCase
version	plugged/ultisnips/test/vim_test_case.py	/^    version = None  # Will be set to vim --version output$/;"	v	class:VimTestCase
maxDiff	plugged/ultisnips/test/vim_test_case.py	/^    maxDiff = None  # Show all diff output, always.$/;"	v	class:VimTestCase
vim_flavor	plugged/ultisnips/test/vim_test_case.py	/^    vim_flavor = None  # will be 'vim' or 'neovim'.$/;"	v	class:VimTestCase
expected_python_version	plugged/ultisnips/test/vim_test_case.py	/^    expected_python_version = ($/;"	v	class:VimTestCase
__init__	plugged/ultisnips/test/vim_test_case.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:VimTestCase
runTest	plugged/ultisnips/test/vim_test_case.py	/^    def runTest(self):$/;"	m	class:VimTestCase
_extra_vim_config	plugged/ultisnips/test/vim_test_case.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VimTestCase
_before_test	plugged/ultisnips/test/vim_test_case.py	/^    def _before_test(self):$/;"	m	class:VimTestCase
_create_file	plugged/ultisnips/test/vim_test_case.py	/^    def _create_file(self, file_path, content):$/;"	m	class:VimTestCase
_link_file	plugged/ultisnips/test/vim_test_case.py	/^    def _link_file(self, source, relative_destination):$/;"	m	class:VimTestCase
setUp	plugged/ultisnips/test/vim_test_case.py	/^    def setUp(self):$/;"	m	class:VimTestCase
UltiSnips_Manager	plugged/ultisnips/test/vim_test_case.py	/^        vim_config.append("from UltiSnips import UltiSnips_Manager\\n")$/;"	i
n	plugged/ultisnips/test/vim_test_case.py	/^        vim_config.append("from UltiSnips import UltiSnips_Manager\\n")$/;"	i
vim	plugged/ultisnips/test/vim_test_case.py	/^        vim_config.append("import vim\\n")$/;"	i
n	plugged/ultisnips/test/vim_test_case.py	/^        vim_config.append("import vim\\n")$/;"	i
tearDown	plugged/ultisnips/test/vim_test_case.py	/^    def tearDown(self):$/;"	m	class:VimTestCase
_VimTest	plugged/ultisnips/test/test_Selection.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_SelectModeMappings	plugged/ultisnips/test/test_Selection.py	/^class _SelectModeMappings(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "${1:World}")$/;"	v	class:_SelectModeMappings
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "Hello"$/;"	v	class:_SelectModeMappings
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:_SelectModeMappings
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("", "")$/;"	v	class:_SelectModeMappings
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("", "")$/;"	v	class:_SelectModeMappings
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_SelectModeMappings
SelectModeMappings_RemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
SelectModeMappings_IgnoreMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e"]$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
SelectModeMappings_IgnoreMappings1_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["H"]$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
SelectModeMappings_IgnoreMappings2_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e", "H"]$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ("e", "l"), ("H", "x")$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
SelectModeMappings_BufferLocalMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("H", "blah")$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
_ES_Base	plugged/ultisnips/test/test_Selection.py	/^class _ES_Base(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ES_Base
ExclusiveSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
ExclusiveSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:ExclusiveSelection_RealWorldCase_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "for" + EX + "k" + JF$/;"	v
_OS_Base	plugged/ultisnips/test/test_Selection.py	/^class _OS_Base(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_OS_Base
OldSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_SimpleTabstop_Test(_OS_Base):$/;"	c
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:OldSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:OldSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:OldSelection_SimpleTabstop_Test
OldSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_RealWorldCase_Test(_OS_Base):$/;"	c
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:OldSelection_RealWorldCase_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = "for" + EX + "k" + JF$/;"	v
_VimTest	plugged/ultisnips/test/test_UltiSnipFunc.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
running_on_windows	plugged/ultisnips/test/test_UltiSnipFunc.py	/^from test.util import running_on_windows$/;"	i
_AddFuncBase	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class _AddFuncBase(_VimTest):$/;"	c
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = ""$/;"	v	class:_AddFuncBase
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:_AddFuncBase
AddFunc_Simple	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '"test", "simple expand", "desc", "", "all", 0'$/;"	v	class:AddFunc_Simple
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Simple
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "abc simple expand"$/;"	v	class:AddFunc_Simple
AddFunc_Opt	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '".*test", "simple expand", "desc", "r", "all", 0'$/;"	v	class:AddFunc_Opt
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Opt
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "simple expand"$/;"	v	class:AddFunc_Opt
TestNonEmptyLangmap_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmap_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	f
TestNonEmptyLangmapWithSemi_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmapWithSemi_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi;" + JF + "hi2" + JF + "hi3" + JF + "hi4" + ESC + ";Hello"$/;"	v
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	f
TestLangmapWithUtf8_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestLangmapWithUtf8_ExpectCorrectResult(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	f
VerifyVimDict1	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict1(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("testâ", "abc123ά", "123'êabc")$/;"	v	class:VerifyVimDict1
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict1
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "test41123'êabc0"$/;"	v	class:VerifyVimDict1
VerifyVimDict2	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict2(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('te"stâ', "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict2
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
VerifyVimDict3	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict3(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("te'stâ", "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict3
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
AddNewSnippetSource	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddNewSnippetSource(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:AddNewSnippetSource
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "blumba" + EX + "\\n" + "this is a dynamic snippet" + "\\n" + "blumba" + EX$/;"	v	class:AddNewSnippetSource
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:AddNewSnippetSource
_VimTest	plugged/ultisnips/test/test_AnonymousExpansion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_AnonBase	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class _AnonBase(_VimTest):$/;"	c
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = ""$/;"	v	class:_AnonBase
_extra_vim_config	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_AnonBase
Anon_NoTrigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_NoTrigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple expand"$/;"	v	class:Anon_NoTrigger_Simple
Anon_NoTrigger_AfterSpace	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc " + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abc simple expand"$/;"	v	class:Anon_NoTrigger_AfterSpace
Anon_NoTrigger_BeginningOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
Anon_NoTrigger_FirstCharOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = " " + EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = " :latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
Anon_NoTrigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_NoTrigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple 123 expand 123 456"$/;"	v	class:Anon_NoTrigger_Multi
Anon_Trigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "123 abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_Trigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "123 simple 123 expand 123 456"$/;"	v	class:Anon_Trigger_Multi
Anon_Trigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_Trigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Simple
Anon_Trigger_Twice	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
Anon_Trigger_Opts	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "blah blah abc" + EA$/;"	v	class:Anon_Trigger_Opts
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Opts
_VimTest	plugged/ultisnips/test/test_ParseSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
ParseSnippets_SimpleSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_SimpleSnippet(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test snippet!"$/;"	v	class:ParseSnippets_SimpleSnippet
ParseSnippets_MissingEndSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MissingEndSnippet(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Missing 'endsnippet' for 'testsnip' in \\S+:4"$/;"	v	class:ParseSnippets_MissingEndSnippet
ParseSnippets_UnknownDirective	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_UnknownDirective(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_UnknownDirective
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid line 'unknown directive' in \\S+:2"$/;"	v	class:ParseSnippets_UnknownDirective
ParseSnippets_InvalidPriorityLine	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '- 50' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine
ParseSnippets_InvalidPriorityLine1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine1(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine1
ParseSnippets_ExtendsWithoutFiletype	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ExtendsWithoutFiletype(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"'extends' without file types in \\S+:2"$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
ParseSnippets_ClearAll	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearAll(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearAll
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
ParseSnippets_ClearOne	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearOne(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearOne
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearOne
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "This is a test."$/;"	v	class:ParseSnippets_ClearOne
ParseSnippets_ClearTwo	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearTwo(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearTwo
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
_ParseSnippets_MultiWord	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord
ParseSnippets_MultiWord_Simple	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Simple
ParseSnippets_MultiWord_Description	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snip test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is another test."$/;"	v	class:ParseSnippets_MultiWord_Description
ParseSnippets_MultiWord_Description_Option	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snippet test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is yet another test."$/;"	v	class:ParseSnippets_MultiWord_Description_Option
_ParseSnippets_MultiWord_RE	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord_RE(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord_RE
ParseSnippets_MultiWord_RE1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "abc def" + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "abc az test"$/;"	v	class:ParseSnippets_MultiWord_RE1
ParseSnippets_MultiWord_RE2	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "foo" + EX + " bar" + EX + "\\nbar" + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "foo-bar test bar\\t\\nfoo-bar test"$/;"	v	class:ParseSnippets_MultiWord_RE2
ParseSnippets_MultiWord_RE3	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test test test" + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "re-test"$/;"	v	class:ParseSnippets_MultiWord_RE3
ParseSnippets_MultiWord_Quotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Quotes(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Quotes
ParseSnippets_MultiWord_WithQuotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_WithQuotes(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
ParseSnippets_MultiWord_NoContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_NoContainer(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: 'test snip' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_NoContainer
ParseSnippets_MultiWord_UnmatchedContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "inv snip" + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: '!inv snip\/' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
ParseSnippets_Global_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Python(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX + "\\nac" + EX$/;"	v	class:ParseSnippets_Global_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x a bob b y\\nx a jon b y"$/;"	v	class:ParseSnippets_Global_Python
ParseSnippets_Global_Local_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Local_Python(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Local_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX$/;"	v
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x first a bob b y"$/;"	v
ParseSnippets_PrintPythonStacktrace	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktrace(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktrace
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktrace
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktrace
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > abc"$/;"	v	class:ParseSnippets_PrintPythonStacktrace
ParseSnippets_PrintPythonStacktraceMultiline	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktraceMultiline(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > \\s+qwe"$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
ParseSnippets_PrintErroneousSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippet(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippet
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Trigger: test"$/;"	v	class:ParseSnippets_PrintErroneousSnippet
ParseSnippets_PrintErroneousSnippetContext	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetContext(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Context: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
ParseSnippets_PrintErroneousSnippetPreAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPreAction(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Pre-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
ParseSnippets_PrintErroneousSnippetPostAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPostAction(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Post-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
ParseSnippets_PrintErroneousSnippetLocation	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetLocation(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Defined in: .*\/all.snippets"$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
_VimTest	plugged/ultisnips/test/test_Mirror.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
TextTabStopTextAfterTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextAfterTab_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 Hinten\\n$1")$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Hinten\\nhallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
TextTabStopTextBeforeTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeTab_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1\\n$1")$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo\\nhallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
TextTabStopTextSurroundedTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextSurroundedTab_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1 Hinten\\n$1")$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo test Hinten\\nhallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
TextTabStopTextBeforeMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeMirror_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1")$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nVorne hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
TextTabStopAfterMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAfterMirror_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1 Hinten")$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo Hinten"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
TextTabStopSurroundMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSurroundMirror_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1 Hinten")$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo welt\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
TextTabStopAllSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAllSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ObenVorne $1 ObenHinten\\nVorne $1 Hinten")$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
MirrorBeforeTabstopLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopLeave_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "this is it this is it this is it"$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
MirrorBeforeTabstopOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "a a a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
TextTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
SimpleMirrorMultilineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorMultilineMany_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "    $1\\n$1\\na$1b\\n$1\\ntest $1 mich")$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n\\n$1\\n\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi\\b\\bAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n${1:sometext}")$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nagain\\nhallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
SimpleMirrorDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDelete_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\b"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hal\\nhal"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
SimpleMirrorSameLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
SimpleMirrorSameLine_InText_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_InText_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "ups test blah" + ESC + "02f i" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ups hallo hallo blah"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
SimpleMirrorSameLineBeforeTabDefVal_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + BS + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
SimpleMirrorSameLineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineMany_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo du hallo du hallo du hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
SimpleMirrorSameLineManyMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineManyMultiline_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du\\nwie gehts"$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = ($/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\bhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "halhups\\nhalhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world\\nworld"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
SimpleTabstopWithDefaultComplexType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexType_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world world\\nanother: world mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha defa\\ndefa"$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha default value default value\\nanother: default value mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
TabstopWithMirrorManyFromAll_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorManyFromAll_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}")$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blah hi hulla end hu hi hub hulla"$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
TabstopWithMirrorInDefaultNoType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub.h"$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub"$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h $1.c}\\ntest $1")$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdin.h stdin.c\\ntest stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin snip stdin.h snip"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin do snap stdin.h do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + JF + "end"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdinend"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
MirrorRealLifeExample_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorRealLifeExample_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
Mirror_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch hinoauch_end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
Mirror_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch noauchab_end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
Mirror_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch ahiuch_end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
Mirror_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch auchih_end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
Mirror_TestKillTabstop_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "welt${1:welt${2:welt}welt} $2"$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "elt"$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo weltelt "$/;"	v	class:Mirror_TestKillTabstop_Kill
_VimTest	plugged/ultisnips/test/test_Fixes.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
Bug1251994	plugged/ultisnips/test/test_Fixes.py	/^class Bug1251994(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${2:#2} ${1:#1};$0")$/;"	v	class:Bug1251994
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "  test" + EX + "hello" + JF + "world" + JF + "blub"$/;"	v	class:Bug1251994
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "  world hello;blub"$/;"	v	class:Bug1251994
VirtualEdit	plugged/ultisnips/test/test_Fixes.py	/^class VirtualEdit(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("pd", "padding: ${1:0}px")$/;"	v	class:VirtualEdit
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "\\t\\t\\tpd" + EX + "2"$/;"	v	class:VirtualEdit
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\t\\t\\tpadding: 2px"$/;"	v	class:VirtualEdit
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VirtualEdit
RetainsTheUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "yank" + ESC + "by4lea test" + EX + "HELLO" + JF + JF + ESC + "p"$/;"	v	class:RetainsTheUnnamedRegister
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "yank HELLO world yank"$/;"	v	class:RetainsTheUnnamedRegister
RetainsTheUnnamedRegister_ButOnlyOnce	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister_ButOnlyOnce(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\nblah\\nhello world "$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
ShiftWidthZero	plugged/ultisnips/test/test_Fixes.py	/^class ShiftWidthZero(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ShiftWidthZero
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "\\t${1}${0}")$/;"	v	class:ShiftWidthZero
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = "test" + EX + "foo"$/;"	v	class:ShiftWidthZero
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\tfoo"$/;"	v	class:ShiftWidthZero
NonUnicodeDataInUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class NonUnicodeDataInUnnamedRegister(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "hello")$/;"	v	class:NonUnicodeDataInUnnamedRegister
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:NonUnicodeDataInUnnamedRegister
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = "hello"$/;"	v	class:NonUnicodeDataInUnnamedRegister
_before_test	plugged/ultisnips/test/test_Fixes.py	/^    def _before_test(self):$/;"	m	class:NonUnicodeDataInUnnamedRegister
_VimTest	plugged/ultisnips/test/test_SnippetOptions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
running_on_windows	plugged/ultisnips/test/test_SnippetOptions.py	/^from test.util import running_on_windows$/;"	i
SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX + "1\\n"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "$test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "$Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "-test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "-Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_SnippetOptions.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "ßßtest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "ßßExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "w"),)$/;"	v	class:_SnippetOptions_ExpandWordSnippets
SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NoExpand(_SnippetOptions_ExpandWordSnippets):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a(test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a(Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "[[test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "[[Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
_No_Tab_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "\\t\\tExpand\\tme!\\t", "", "t")$/;"	v	class:_No_Tab_Expand
No_Tab_Expand_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Simple
No_Tab_Expand_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Spaces
No_Tab_Expand_Leading_Tabs	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\ttest" + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Tabs
No_Tab_Expand_No_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_No_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_No_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_No_TS
No_Tab_Expand_ET	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET
No_Tab_Expand_ET_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
No_Tab_Expand_ET_SW	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW
No_Tab_Expand_ET_SW_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW_TS
_TabExpand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class _TabExpand_RealWorld:$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:_TabExpand_RealWorld
No_Tab_Expand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld, _VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_RealWorld
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\t\\thi" + EX$/;"	v	class:No_Tab_Expand_RealWorld
SnippetOptions_Regex_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_Regex_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Expand
SnippetOptions_Regex_WithSpace	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_WithSpace(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test ", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_WithSpace
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test " + EX$/;"	v	class:SnippetOptions_Regex_WithSpace
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_WithSpace
SnippetOptions_Regex_Multiple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test *)+", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Multiple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test test" + EX$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Multiple
_Regex_Self	plugged/ultisnips/test/test_SnippetOptions.py	/^class _Regex_Self(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("((?<=\\W)|^)(\\.)", "self.", "", "r")$/;"	v	class:_Regex_Self
SnippetOptions_Regex_Self_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "." + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "self."$/;"	v	class:SnippetOptions_Regex_Self_Start
SnippetOptions_Regex_Self_Space	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " ." + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " self."$/;"	v	class:SnippetOptions_Regex_Self_Space
SnippetOptions_Regex_Self_TextAfter	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
SnippetOptions_Regex_Self_TextBefore	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
SnippetOptions_Regex_PythonBlockMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test fedcab"$/;"	v
SnippetOptions_Regex_PythonBlockNoMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test No match"$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
SnippetOptions_Regex_SameLine_Long_End	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test.*)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test abc" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
SnippetOptions_Regex_SameLine_Long_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(.*test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
SnippetOptions_Regex_SameLine_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "abc test Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
MultiWordSnippet_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test me", "Expand me!")$/;"	v	class:MultiWordSnippet_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test me" + EX$/;"	v	class:MultiWordSnippet_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWordSnippet_Simple
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test it" + EX + "1\\n"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
_MultiWord_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "w"),)$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
_VimTest	plugged/ultisnips/test/test_Folding.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
FoldingEnabled_SnippetWithFold_ExpectNoFolding	plugged/ultisnips/test/test_Folding.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + "Ball"$/;"	v
FoldOverwrite_Simple_ECR	plugged/ultisnips/test/test_Folding.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldOverwrite_Simple_ECR
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi"$/;"	v
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v
Fold_DeleteMiddleLine_ECR	plugged/ultisnips/test/test_Folding.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:Fold_DeleteMiddleLine_ECR
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi" + ESC + "jdd"$/;"	v
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v
PerlSyntaxFold	plugged/ultisnips/test/test_Folding.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PerlSyntaxFold
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:PerlSyntaxFold
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + JF + "sub junk {}"$/;"	v
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = "package c03;\\nsub junk {}\\n1;"$/;"	v
os	plugged/ultisnips/test/vim_interface.py	/^import os$/;"	i
re	plugged/ultisnips/test/vim_interface.py	/^import re$/;"	i
shutil	plugged/ultisnips/test/vim_interface.py	/^import shutil$/;"	i
subprocess	plugged/ultisnips/test/vim_interface.py	/^import subprocess$/;"	i
tempfile	plugged/ultisnips/test/vim_interface.py	/^import tempfile$/;"	i
textwrap	plugged/ultisnips/test/vim_interface.py	/^import textwrap$/;"	i
time	plugged/ultisnips/test/vim_interface.py	/^import time$/;"	i
ARR_D	plugged/ultisnips/test/vim_interface.py	/^from test.constant import ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, SEQUENCES$/;"	i
ARR_L	plugged/ultisnips/test/vim_interface.py	/^from test.constant import ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, SEQUENCES$/;"	i
ARR_R	plugged/ultisnips/test/vim_interface.py	/^from test.constant import ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, SEQUENCES$/;"	i
ARR_U	plugged/ultisnips/test/vim_interface.py	/^from test.constant import ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, SEQUENCES$/;"	i
BS	plugged/ultisnips/test/vim_interface.py	/^from test.constant import ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, SEQUENCES$/;"	i
ESC	plugged/ultisnips/test/vim_interface.py	/^from test.constant import ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, SEQUENCES$/;"	i
SEQUENCES	plugged/ultisnips/test/vim_interface.py	/^from test.constant import ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, SEQUENCES$/;"	i
wait_until_file_exists	plugged/ultisnips/test/vim_interface.py	/^def wait_until_file_exists(file_path, times=None, interval=0.01):$/;"	f
_read_text_file	plugged/ultisnips/test/vim_interface.py	/^def _read_text_file(filename):$/;"	f
is_process_running	plugged/ultisnips/test/vim_interface.py	/^def is_process_running(pid):$/;"	f
silent_call	plugged/ultisnips/test/vim_interface.py	/^def silent_call(cmd):$/;"	f
create_directory	plugged/ultisnips/test/vim_interface.py	/^def create_directory(dirname):$/;"	f
TempFileManager	plugged/ultisnips/test/vim_interface.py	/^class TempFileManager:$/;"	c
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, name=""):$/;"	m	class:TempFileManager
name_temp	plugged/ultisnips/test/vim_interface.py	/^    def name_temp(self, file_path):$/;"	m	class:TempFileManager
write_temp	plugged/ultisnips/test/vim_interface.py	/^    def write_temp(self, file_path, content):$/;"	m	class:TempFileManager
unique_name_temp	plugged/ultisnips/test/vim_interface.py	/^    def unique_name_temp(self, suffix="", prefix=""):$/;"	m	class:TempFileManager
clear_temp	plugged/ultisnips/test/vim_interface.py	/^    def clear_temp(self):$/;"	m	class:TempFileManager
VimInterface	plugged/ultisnips/test/vim_interface.py	/^class VimInterface(TempFileManager):$/;"	c
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, name):$/;"	m	class:VimInterface
vim_executable	plugged/ultisnips/test/vim_interface.py	/^    def vim_executable(self):$/;"	m	class:VimInterface
has_version	plugged/ultisnips/test/vim_interface.py	/^    def has_version(self, major, minor, patchlevel):$/;"	m	class:VimInterface
get_buffer_data	plugged/ultisnips/test/vim_interface.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterface
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterface
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterface
vim	plugged/ultisnips/test/vim_interface.py	/^        post_config.append("import vim, sys")$/;"	i
sys	plugged/ultisnips/test/vim_interface.py	/^        post_config.append("import vim, sys")$/;"	i
leave_with_wait	plugged/ultisnips/test/vim_interface.py	/^    def leave_with_wait(self):$/;"	m	class:VimInterface
VimInterfaceTmux	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmux(VimInterface):$/;"	c
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmux
_send	plugged/ultisnips/test/vim_interface.py	/^    def _send(self, s):$/;"	m	class:VimInterfaceTmux
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmux
_check_version	plugged/ultisnips/test/vim_interface.py	/^    def _check_version(self):$/;"	m	class:VimInterfaceTmux
VimInterfaceTmuxNeovim	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmuxNeovim(VimInterfaceTmux):$/;"	c
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmuxNeovim
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmuxNeovim
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterfaceTmuxNeovim
neovim	plugged/ultisnips/test/vim_interface.py	/^        import neovim$/;"	i
VimInterfaceWindows	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
BRACES	plugged/ultisnips/test/vim_interface.py	/^    BRACES = re.compile("([}{])")$/;"	v	class:VimInterfaceWindows
WIN_ESCAPES	plugged/ultisnips/test/vim_interface.py	/^    WIN_ESCAPES = ["+", "^", "%", "~", "[", "]", "<", ">", "(", ")"]$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	plugged/ultisnips/test/vim_interface.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
win32com	plugged/ultisnips/test/vim_interface.py	/^        import win32com.client$/;"	i
client	plugged/ultisnips/test/vim_interface.py	/^        import win32com.client$/;"	i
win32gui	plugged/ultisnips/test/vim_interface.py	/^        import win32gui$/;"	i
is_focused	plugged/ultisnips/test/vim_interface.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
focus	plugged/ultisnips/test/vim_interface.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
convert_keys	plugged/ultisnips/test/vim_interface.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
send	plugged/ultisnips/test/vim_interface.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
_VimTest	plugged/ultisnips/test/test_SnippetActions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
SnippetActions_PreActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PreActionModifiesBuffer(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PreActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PreActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "\\nabc"$/;"	v	class:SnippetActions_PreActionModifiesBuffer
SnippetActions_PostActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesBuffer(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PostActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "abc\\n"$/;"	v	class:SnippetActions_PostActionModifiesBuffer
SnippetActions_ErrorOnBufferModificationThroughCommand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnBufferModificationThroughCommand(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "changes are untrackable"$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
SnippetActions_ErrorOnModificationSnippetLine	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnModificationSnippetLine(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "line under the cursor was modified"$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
SnippetActions_EnsureIndent	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_EnsureIndent(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_EnsureIndent
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x"$/;"	v	class:SnippetActions_EnsureIndent
SnippetActions_PostActionCanUseSnippetRange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionCanUseSnippetRange(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "x" + JF + "y"$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
SnippetActions_CanModifyParentBody	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanModifyParentBody(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanModifyParentBody
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x" + JF + "y" + JF + JF + "z"$/;"	v	class:SnippetActions_CanModifyParentBody
SnippetActions_MoveParentSnippetFromChildInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveParentSnippetFromChildInPreAction(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "p" + EX + JF + "z"$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
SnippetActions_CanExpandSnippetInDifferentPlace	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandSnippetInDifferentPlace(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "blah" + JF + "n" + EX + JF + "pass"$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
SnippetActions_MoveVisual	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveVisual(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveVisual
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_MoveVisual
SnippetActions_CanMirrorTabStopsOutsideOfSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanMirrorTabStopsOutsideOfSnippet(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
SnippetActions_CanExpandAnonSnippetInJumpAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpAction(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
SnippetActions_CanUseContextFromContextMatch	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanUseContextFromContextMatch(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
SnippetActions_CanExpandAnonSnippetOnFirstJump	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetOnFirstJump(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + " or 4" + JF + "5"$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
SnippetActions_CanExpandAnonOnPreExpand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonOnPreExpand(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3"$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
SnippetActions_CanEvenWrapSnippetInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanEvenWrapSnippetInPreAction(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + "4"$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
SnippetActions_UseCorrectJumpActions	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_UseCorrectJumpActions(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_UseCorrectJumpActions
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_UseCorrectJumpActions
SnippetActions_PostActionModifiesCharAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesCharAfterSnippet(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "[]" + ARR_L + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "[(1)2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
SnippetActions_PostActionModifiesLineAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesLineAfterSnippet(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\n3" + ARR_U + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "1: 1\\n2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
SnippetActions_DoNotBreakCursorOnSingleLikeChange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_DoNotBreakCursorOnSingleLikeChange(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX + "123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "def123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
BS	plugged/ultisnips/test/constant.py	/^BS = "\\x7f"$/;"	v
ESC	plugged/ultisnips/test/constant.py	/^ESC = "\\x1b"$/;"	v
ARR_L	plugged/ultisnips/test/constant.py	/^ARR_L = "\\x1bOD"$/;"	v
ARR_R	plugged/ultisnips/test/constant.py	/^ARR_R = "\\x1bOC"$/;"	v
ARR_U	plugged/ultisnips/test/constant.py	/^ARR_U = "\\x1bOA"$/;"	v
ARR_D	plugged/ultisnips/test/constant.py	/^ARR_D = "\\x1bOB"$/;"	v
SEQUENCES	plugged/ultisnips/test/constant.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
JF	plugged/ultisnips/test/constant.py	/^JF = "?"  # Jump forwards$/;"	v
JB	plugged/ultisnips/test/constant.py	/^JB = "+"  # Jump backwards$/;"	v
LS	plugged/ultisnips/test/constant.py	/^LS = "@"  # List snippets$/;"	v
EX	plugged/ultisnips/test/constant.py	/^EX = "\\t"  # EXPAND$/;"	v
EA	plugged/ultisnips/test/constant.py	/^EA = "#"  # Expand anonymous$/;"	v
COMPL_KW	plugged/ultisnips/test/constant.py	/^COMPL_KW = chr(24) + chr(14)$/;"	v
COMPL_ACCEPT	plugged/ultisnips/test/constant.py	/^COMPL_ACCEPT = chr(25)$/;"	v
_VimTest	plugged/ultisnips/test/test_ContextSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
ContextSnippets_SimpleSnippet	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SimpleSnippet(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_SimpleSnippet
ContextSnippets_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ExpandOnTrue(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_ExpandOnTrue
ContextSnippets_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_DoNotExpandOnFalse(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
ContextSnippets_UseContext	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_UseContext(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_UseContext
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_UseContext
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "{ < a > }"$/;"	v	class:ContextSnippets_UseContext
ContextSnippets_SnippetPriority	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SnippetPriority(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SnippetPriority
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_SnippetPriority
ContextSnippets_PriorityKeyword	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_PriorityKeyword(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_PriorityKeyword
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "i" + EX$/;"	v	class:ContextSnippets_PriorityKeyword
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "b"$/;"	v	class:ContextSnippets_PriorityKeyword
ContextSnippets_ReportError	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportError(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportError
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportError
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportError
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"NameError: name 'Tru' is not defined"$/;"	v	class:ContextSnippets_ReportError
ContextSnippets_ReportErrorOnIndexOutOfRange	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportErrorOnIndexOutOfRange(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"IndexError: line number out of range"$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
ContextSnippets_CursorIsZeroBased	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_CursorIsZeroBased(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_CursorIsZeroBased
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_CursorIsZeroBased
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "(2, 1)"$/;"	v	class:ContextSnippets_CursorIsZeroBased
ContextSnippets_ContextIsClearedBeforeExpand	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextIsClearedBeforeExpand(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX + " " + "e" + EX$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "1 1"$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
ContextSnippets_ContextHasAccessToVisual	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToVisual(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_ContextHasAccessToVisual
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "Yes No"$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
ContextSnippets_Header_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_ExpandOnTrue(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
ContextSnippets_Header_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_DoNotExpandOnFalse(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
_VimTest	plugged/ultisnips/test/test_SnippetPriorities.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
EX	plugged/ultisnips/test/test_SnippetPriorities.py	/^from test.constant import EX, ESC$/;"	i
ESC	plugged/ultisnips/test/test_SnippetPriorities.py	/^from test.constant import EX, ESC$/;"	i
SnippetPriorities_MultiWordTriggerOverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_MultiWordTriggerOverwriteExisting(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test me" + EX$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
SnippetPriorities_DoNotCareAboutNonMatchings	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_DoNotCareAboutNonMatchings(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test1" + EX$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Hallo"$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
SnippetPriorities_OverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteExisting(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_OverwriteExisting
SnippetPriorities_OverwriteTwice_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteTwice_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "again"$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
SnippetPriorities_OverwriteThenChoose_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteThenChoose_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX + "1\\n\\n" + "test" + EX + "2\\n"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite\\nNo overwrite"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
SnippetPriorities_AddedHasHigherThanFile	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_AddedHasHigherThanFile(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", 1),)$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
SnippetPriorities_FileHasHigherThanAdded	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We do not overwrite", "Overwrite the two", "", -1),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
SnippetPriorities_FileHasHigherThanAdded_neg_prio	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded_neg_prio(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", -5),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
SnippetPriorities_SimpleClear	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
SnippetPriorities_SimpleClear2	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear2(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear2
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
SnippetPriorities_ClearedByParent	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByParent(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByParent
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_ClearedByParent
SnippetPriorities_ClearedByChild	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByChild(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByChild
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = ($/;"	v	class:SnippetPriorities_ClearedByChild
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Should only expand in p.\\ntest" + EX$/;"	v	class:SnippetPriorities_ClearedByChild
_VimTest	plugged/ultisnips/test/test_Transformation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
no_unidecode_available	plugged/ultisnips/test/test_Transformation.py	/^from test.util import no_unidecode_available$/;"	i
Transformation_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo foo boy hallo batzl boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
Transformation_SimpleCaseNoTransform_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseNoTransform_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
Transformation_SimpleCaseTransformInFront_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFront_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} $1")$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
Transformation_SimpleCaseTransformInFrontDefVal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} ${1:replace me}")$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
Transformation_MultipleTransformations_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}")$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "SomE tExt "$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "SomE tExt SOME TEXT \\nsome text "$/;"	v	class:Transformation_MultipleTransformations_ECR
Transformation_TabIsAtEndAndDeleted_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\b\\b"$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
Transformation_TabIsAtEndAndDeleted1_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\bmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
Transformation_TabIsAtEndNoTextLeave_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
Transformation_TabIsAtEndNoTextType_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "b"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingb"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
Transformation_InsideTabLeaveAtDefault_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext defined sometext"$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
Transformation_InsideTabOvertype_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF + "overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
Transformation_Backreference_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_Backreference_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/([ab])oo\/$1ull\/}")$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "foo boo aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "foo boo aoo foo bull aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
Transformation_BackreferenceTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_BackreferenceTwice_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "dead parrot"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "dead parrot this parrot is a bit dead"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
Transformation_CleverTransformUpercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformUpercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.)\/\\\\u$1\/}")$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo Hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
Transformation_CleverTransformLowercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLowercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\l$1\/}")$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "Hallo hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
Transformation_CleverTransformLongUpper_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongUpper_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\\\U$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo HALLO"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
Transformation_CleverTransformLongLower_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongLower_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\L$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "HALLO"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "HALLO hallo"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
Transformation_SimpleCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_SimpleCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/$1\/a}")$/;"	v	class:Transformation_SimpleCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_SimpleCaseAsciiResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEUR"$/;"	v	class:Transformation_SimpleCaseAsciiResult
Transformation_LowerCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_LowerCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/\\L$1\\E\/a}")$/;"	v	class:Transformation_LowerCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_LowerCaseAsciiResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieur"$/;"	v	class:Transformation_LowerCaseAsciiResult
Transformation_ConditionalInsertionSimple_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertionSimple_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(^a).*\/(?0:began with an a)\/}")$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some more text"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some more text began with an a"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
Transformation_CIBothDefinedNegative_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedNegative_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "b some"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "b some no"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
Transformation_CIBothDefinedPositive_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedPositive_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some yes"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
Transformation_ConditionalInsertRWEllipsis_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a b  c d e f ghhh h oha"$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a b  c d e f ghhh h oha a b  c d e f ghhh h..."$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
Transformation_ConditionalInConditional_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = ($/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo .\\nhallo- >\\nhallo-> "$/;"	v	class:Transformation_ConditionalInConditional_ECR
Transformation_CINewlines_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CINewlines_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\nhallo"$/;"	v	class:Transformation_CINewlines_ECR
Transformation_CITabstop_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CITabstop_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\thallo"$/;"	v	class:Transformation_CITabstop_ECR
Transformation_CIEscapedParensinReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, halul"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, halul test, ha(ul)"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
Transformation_OptionIgnoreCase_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "TEST"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "TEST blah"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
Transformation_OptionMultiline_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionMultiline_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"${VISUAL\/^\/* \/mg}")$/;"	v	class:Transformation_OptionMultiline_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test\\ntest\\ntest" + ESC + "V2k" + EX + "test" + EX$/;"	v	class:Transformation_OptionMultiline_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "* test\\n* test\\n* test"$/;"	v	class:Transformation_OptionMultiline_ECR
Transformation_OptionReplaceGlobal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice, building a-nice-building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
Transformation_OptionReplaceGlobalMatchInReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice,   building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice,   building a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + JF + "hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  m2  hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hi" + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip m1  hi "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + "hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip matched hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
TransformationUsingBackspaceToDeleteDefaultValue_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
Transformation_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH hinoauchnoauch_end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
Transformation_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH noauchnoauchab_end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
Transformation_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH ahiuchauch_end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
Transformation_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH auchauchih_end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
Transformation_ConditionalWithEscapedDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithEscapedDelimiter(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\:no\\))\/}"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes:no)"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
Transformation_ConditionalWithBackslashBeforeDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\\\:no)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
Transformation_ConditionalWithBackslashBeforeDelimiter1	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter1(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes:no\\\\)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "ab"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = "ab no\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
_VimTest	plugged/ultisnips/test/test_Completion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
Completion_SimpleExample_ECR	plugged/ultisnips/test/test_Completion.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 ${1:blah}")$/;"	v	class:Completion_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = ($/;"	v	class:Completion_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = ($/;"	v	class:Completion_SimpleExample_ECR
COMPLETION_OPTIONS	plugged/ultisnips/test/test_Completion.py	/^COMPLETION_OPTIONS = "completion1\\ncompletion2\\n"$/;"	v
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "com" + COMPL_KW + JF + "foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "completion1 foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "foo" + JF + "com" + COMPL_KW + JB + "foo"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "foo completion1"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
_VimTest	plugged/ultisnips/test/test_Format.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
running_on_windows	plugged/ultisnips/test/test_Format.py	/^from test.util import running_on_windows$/;"	i
_ExpandTabs	plugged/ultisnips/test/test_Format.py	/^class _ExpandTabs(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ExpandTabs
RecTabStopsWithExpandtab_SimpleExample_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("m", "\\tBlaahblah \\t\\t  ")$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "   Blaahblah \\t\\t  "$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
skip_if	plugged/ultisnips/test/test_Format.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = (("m1", "Something"), ("m", "\\t$0"))$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX + "m1" + EX + "\\nHallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "   Something\\n        Hallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
ProperIndenting_SimpleCase_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "for\\n    blah")$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "Hui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    for\\n        blahHui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
ProperIndenting_SingleLineNoReindenting_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "blah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    huiblah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
ProperIndenting_AutoIndentAndNewline_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "\\n" + "blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "    hui\\n    blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
ProperIndenting_FirstLineInFile_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFile_ECR(_VimTest):$/;"	c
text_before	plugged/ultisnips/test/test_Format.py	/^    text_before = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_after	plugged/ultisnips/test/test_Format.py	/^    text_after = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
files	plugged/ultisnips/test/test_Format.py	/^    files = {$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "foo"$/;"	v
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <foo>"$/;"	v
ProperIndenting_FirstLineInFileComplete_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFileComplete_ECR(ProperIndenting_FirstLineInFile_ECR):$/;"	c
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "cstdl"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <cstdlib>"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
_FormatoptionsBase	plugged/ultisnips/test/test_Format.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_FormatoptionsBase
FOSimple_Break_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOSimple_Break_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}\\n$1\\n$0", "", "f")$/;"	v	class:FOSimple_Break_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
FOTextBeforeAndAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextBeforeAndAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "Before${1:longer expand}After\\nstart$1end")$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longer text that should wrap"$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
FOTextAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOTextAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOTextAfter_ExpectCorrectResult
FOWrapOnLongWord_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOWrapOnLongWord_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longersnippet that should wrap properly"$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
_VimTest	plugged/ultisnips/test/test_Choices.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
Choices_WillBeExpandedToInlineSelection	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillBeExpandedToInlineSelection(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_WillBeExpandedToInlineSelection
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillBeExpandedToInlineSelection
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.red|2.gray"$/;"	v	class:Choices_WillBeExpandedToInlineSelection
Choices_ExpectCorrectResult	plugged/ultisnips/test/test_Choices.py	/^class Choices_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray"$/;"	v	class:Choices_ExpectCorrectResult
Choices_WillAbandonSelection_If_CharTyped	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_CharTyped(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
Choices_WilNotMessWithTabstopsAfterIt	plugged/ultisnips/test/test_Choices.py	/^class Choices_WilNotMessWithTabstopsAfterIt(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|} is ${2:color}\\nline 2")$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray is color\\nline 2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
Choices_MoreThan9Candidates_ShouldWaitForInputs	plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldWaitForInputs(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1 is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
Choices_MoreThan9Candidates_ShouldTerminateWithSpace	plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldTerminateWithSpace(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 "$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "a is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
Choices_EmptyChoiceWillBeDiscarded	plugged/ultisnips/test/test_Choices.py	/^class Choices_EmptyChoiceWillBeDiscarded(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,,c|}")$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.a|2.c"$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
Choices_WillNotExpand_If_ChoiceListIsEmpty	plugged/ultisnips/test/test_Choices.py	/^class Choices_WillNotExpand_If_ChoiceListIsEmpty(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1||}")$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "||"$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
Choices_CanTakeNonAsciiCharacters	plugged/ultisnips/test/test_Choices.py	/^class Choices_CanTakeNonAsciiCharacters(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|Русский язык,中文,한국어,öääö|}")$/;"	v	class:Choices_CanTakeNonAsciiCharacters
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_CanTakeNonAsciiCharacters
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.Русский язык|2.中文|3.한국어|4.öääö"$/;"	v	class:Choices_CanTakeNonAsciiCharacters
Choices_AsNestedElement_ShouldOverwriteDefaultText	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShouldOverwriteDefaultText(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah"$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
Choices_AsNestedElement_ShallNotTakeActionIfParentInput	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShallNotTakeActionIfParentInput(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
Choices_AsNestedElement_CanBeTabbedInto	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedInto(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + "1"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer foo"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
Choices_AsNestedElement_CanBeTabbedThrough	plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedThrough(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}} ${3}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + JF + "input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
Choices_With_Mirror	plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_With_Mirror
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan, mirror: cyan"$/;"	v	class:Choices_With_Mirror
Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone	plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan is a color, mirror: cyan is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
Choices_ShouldThrowErrorWithZeroTabstop	plugged/ultisnips/test/test_Choices.py	/^class Choices_ShouldThrowErrorWithZeroTabstop(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${0|red,blue|}")$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
expected_error	plugged/ultisnips/test/test_Choices.py	/^    expected_error = "Choices selection is not supported on \\$0"$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
Choices_CanEscapeCommaInsideChoiceItem	plugged/ultisnips/test/test_Choices.py	/^class Choices_CanEscapeCommaInsideChoiceItem(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", r"${1|fun1(,fun2(param1\\, ,fun3(param1\\, param2\\, |}param_end) result: $1")$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
keys	plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
wanted	plugged/ultisnips/test/test_Choices.py	/^    wanted = "fun2(param1, param_end) result: fun2(param1, "$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
_VimTest	plugged/ultisnips/test/test_Recursive.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
RecTabStops_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + "ups" + JF + "end"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]ups  end ]"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + JF + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]  sec ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + JF + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  sec ]  world ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
RecTabStops_InnerWOTabStop_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "Just some Text"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ Just some Texthi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + " m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST JSThi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
RecTabStops_InnerWOTabStopTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + JF + "m1" + EX + "hi" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST  JSThi ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
RecTabStops_OuterOnlyWithZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
RecTabStops_OuterOnlyWithZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
RecTabStops_ExpandedInZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
RecTabStops_ExpandedInZeroTSTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "again" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A C CD D DE E B again B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
RecTabStops_ExpandedInZeroTSSecondTime_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "m1" + EX + "CD" + JF + "DE" + JF + "AB"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A AB B C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
RecTabsStops_TypeInZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
RecTabsStops_TypeInZero2_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"_${0:explicit zero}", "snip", "i"),)$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hello m" + EX + "world m" + EX + "end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
RecTabsStops_BackspaceZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"${1:one}${0:explicit zero}${2:two}", "snip", "i"),)$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + JF + JF + BS + "m" + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
RecTabStops_MirrorInnerSnippet_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ $1 $2 ] $1"), ("m1", "ASnip $1 ASnip $2 ASnip"))$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend"$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
RecTabStops_InNewlineInTabstop_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstop_ExpectCorrectResult(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\n[ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\nhello again [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
RecTabStops_InNewlineMultiline_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\nM START\\n\\nM END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
RecTabStops_InNewlineManualIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
RecTabStops_InNewlineManualIndentTextInFront_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    hallo m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    hallo M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
RecTabStops_InNewlineMultilineWithIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $1\\nM END -> $0")$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi" + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END -> hallo\\n" "M END -> end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
RecTabStops_BarelyNotLeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a hallo ]ups world ]end"$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
RecTabStops_LeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "a" + 4 * ARR_L + JF + "hallo" + JF + "world"$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a sec ] hallo ]world"$/;"	v	class:RecTabStops_LeavingInner_ECR
RecTabStops_LeavingInnerInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] hallo ]ups world ]end"$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
RecTabStops_LeavingInnerInnerTwo_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "m" + EX + "a" + 6 * ARR_L + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] sec ] hallo ]end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
RecTabStops_ZeroTSisNothingSpecial_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "[ ${1:first} $0 ${2:sec} ]"), ("m", "[ ${1:first} ${2:sec} ]"))$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three two ] four ]end"$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
RecTabStops_MirroredZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three three two ] four ]end"$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
RecTabStops_ChildTriggerContainsParentTextObjects	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_VimTest):$/;"	c
files	plugged/ultisnips/test/test_Recursive.py	/^    files = {$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = "form_for user, namespace: some_namespace, html: {i" + EX + "i" + EX$/;"	v
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = ($/;"	v
MAKEFILE_PATH	plugged/ultisnips/Makefile	/^MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
MAKEFILE_DIR	plugged/ultisnips/Makefile	/^MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})$/;"	m
ASE_IMAGE	plugged/ultisnips/Makefile	/^	docker build -t ultisnips:repro --build-arg BASE_IMAGE=$< -f Dockerfile.repro .$/;"	m
did_plugin_ultisnips	plugged/ultisnips/plugin/UltiSnips.vim	/^let did_plugin_ultisnips=1$/;"	v
UltiSnipsEdit	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnipsAddFiletypes	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnips_AutoTrigger	plugged/ultisnips/plugin/UltiSnips.vim	/^augroup UltiSnips_AutoTrigger$/;"	a
s:save_cpo	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
unite_source.hooks.on_syntax	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.hooks.on_syntax(args, context) abort$/;"	f
unite_source.action_table.preview.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate) abort$/;"	f
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
unite_source.action_table.expand.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate) abort$/;"	f
unite_source.get_longest_snippet_len	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.get_longest_snippet_len(snippet_list) abort$/;"	f
unite_source.gather_candidates	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context) abort$/;"	f
unite#sources#ultisnips#define	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define() abort$/;"	f
s:save_cpo	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:source	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
source.gather_candidates	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context) abort$/;"	f
neocomplete#sources#ultisnips#define	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define() abort$/;"	f
b:did_autoload_ultisnips_map_keys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^let b:did_autoload_ultisnips_map_keys = 1$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsListSnippets	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsRemoveSelectModeMappings	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsMappingsToIgnore	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsSnippetDirectories	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:UltiSnipsEnableSnipMate	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEnableSnipMate = 1$/;"	v
UltiSnips#map_keys#MapKeys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys() abort$/;"	f
b:did_autoload_ultisnips	plugged/ultisnips/autoload/UltiSnips.vim	/^let b:did_autoload_ultisnips = 1$/;"	v
compensate_for_pum	plugged/ultisnips/autoload/UltiSnips.vim	/^function! s:compensate_for_pum() abort$/;"	f
UltiSnips#Edit	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...) abort$/;"	f
UltiSnips#AddFiletypes	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes) abort$/;"	f
UltiSnips#FileTypeComplete	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos) abort$/;"	f
UltiSnips#ExpandSnippet	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet() abort$/;"	f
UltiSnips#ExpandSnippetOrJump	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump() abort$/;"	f
UltiSnips#ListSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets() abort$/;"	f
UltiSnips#SnippetsInCurrentScope	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope(...) abort$/;"	f
UltiSnips#CanExpandSnippet	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanExpandSnippet() abort$/;"	f
UltiSnips#CanJumpForwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanJumpForwards() abort$/;"	f
UltiSnips#CanJumpBackwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanJumpBackwards() abort$/;"	f
UltiSnips#SaveLastVisualSelection	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection() range abort$/;"	f
UltiSnips#JumpBackwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards() abort$/;"	f
UltiSnips#JumpForwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards() abort$/;"	f
UltiSnips#AddSnippetWithPriority	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, priority) abort$/;"	f
UltiSnips#Anon	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...) abort$/;"	f
UltiSnips#CursorMoved	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved() abort$/;"	f
UltiSnips#LeavingBuffer	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer() abort$/;"	f
UltiSnips#LeavingInsertMode	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode() abort$/;"	f
UltiSnips#TrackChange	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#TrackChange() abort$/;"	f
UltiSnips#RefreshSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#RefreshSnippets() abort$/;"	f
b:did_after_plugin_ultisnips_after	plugged/ultisnips/after/plugin/UltiSnips_after.vim	/^let b:did_after_plugin_ultisnips_after = 1$/;"	v
b:ultisnips_override_snipmate	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:did_indent	plugged/vim-polyglot/indent/litcoffee.vim	/^let b:did_indent = 1$/;"	v
GetLitCoffeeIndent	plugged/vim-polyglot/indent/litcoffee.vim	/^function GetLitCoffeeIndent()$/;"	f
GetOffsetOf	plugged/vim-polyglot/indent/config.vim	/^function s:GetOffsetOf(line, regexp)$/;"	f
GetConfigIndent	plugged/vim-polyglot/indent/config.vim	/^function GetConfigIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/cuda.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/cuda.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pascal.vim	/^let b:did_indent = 1$/;"	v
GetPrevNonCommentLineNum	plugged/vim-polyglot/indent/pascal.vim	/^function! s:GetPrevNonCommentLineNum( line_num )$/;"	f
PurifyCode	plugged/vim-polyglot/indent/pascal.vim	/^function! s:PurifyCode( line_num )$/;"	f
GetPascalIndent	plugged/vim-polyglot/indent/pascal.vim	/^function! GetPascalIndent( line_num )$/;"	f
b:did_indent	plugged/vim-polyglot/indent/fortran.vim	/^let b:did_indent = 1$/;"	v
s:cposet	plugged/vim-polyglot/indent/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
s:lmax	plugged/vim-polyglot/indent/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	plugged/vim-polyglot/indent/fortran.vim	/^      let s:lmax = line("$")$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
s:ln	plugged/vim-polyglot/indent/fortran.vim	/^    let s:ln=1$/;"	v
s:test	plugged/vim-polyglot/indent/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/indent/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
s:ln	plugged/vim-polyglot/indent/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
FortranGetIndent	plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetIndent(lnum)$/;"	f
FortranGetFreeIndent	plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetFreeIndent()$/;"	f
FortranGetFixedIndent	plugged/vim-polyglot/indent/fortran.vim	/^function FortranGetFixedIndent()$/;"	f
s:RIndent	plugged/vim-polyglot/indent/rmd.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rmd.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
GetMdIndent	plugged/vim-polyglot/indent/rmd.vim	/^function s:GetMdIndent()$/;"	f
GetYamlIndent	plugged/vim-polyglot/indent/rmd.vim	/^function s:GetYamlIndent()$/;"	f
GetRmdIndent	plugged/vim-polyglot/indent/rmd.vim	/^function GetRmdIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/elm.vim	/^let b:did_indent = 1$/;"	v
FindPair	plugged/vim-polyglot/indent/elm.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
GetElmIndent	plugged/vim-polyglot/indent/elm.vim	/^function! GetElmIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/purescript.vim	/^let b:did_indent = 1$/;"	v
g:purescript_indent_if	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_if = 3$/;"	v
g:purescript_indent_case	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_case = 5$/;"	v
g:purescript_indent_let	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_let = 4$/;"	v
g:purescript_indent_in	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_in = 1$/;"	v
g:purescript_indent_where	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_where = 6$/;"	v
g:purescript_indent_do	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_do = 3$/;"	v
g:purescript_indent_dot	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_dot = 1$/;"	v
GetSynStack	plugged/vim-polyglot/indent/purescript.vim	/^function! s:GetSynStack(lnum, col)$/;"	f
GetPurescriptIndent	plugged/vim-polyglot/indent/purescript.vim	/^function! GetPurescriptIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/eterm.vim	/^let b:did_indent = 1$/;"	v
GetEtermIndent	plugged/vim-polyglot/indent/eterm.vim	/^function GetEtermIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:bvars	plugged/vim-polyglot/indent/javascript.vim	/^let s:bvars = {$/;"	v
GetVars	plugged/vim-polyglot/indent/javascript.vim	/^function s:GetVars()$/;"	f
sw	plugged/vim-polyglot/indent/javascript.vim	/^  function s:sw()$/;"	f
sw	plugged/vim-polyglot/indent/javascript.vim	/^  function s:sw()$/;"	f
s:z	plugged/vim-polyglot/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:in_comm	plugged/vim-polyglot/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:rel	plugged/vim-polyglot/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
GetPair	plugged/vim-polyglot/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
GetPair	plugged/vim-polyglot/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
SynAt	plugged/vim-polyglot/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f
ParseCino	plugged/vim-polyglot/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f
SkipFunc	plugged/vim-polyglot/indent/javascript.vim	/^function s:SkipFunc()$/;"	f
AlternatePair	plugged/vim-polyglot/indent/javascript.vim	/^function s:AlternatePair()$/;"	f
Nat	plugged/vim-polyglot/indent/javascript.vim	/^function s:Nat(int)$/;"	f
LookingAt	plugged/vim-polyglot/indent/javascript.vim	/^function s:LookingAt()$/;"	f
Token	plugged/vim-polyglot/indent/javascript.vim	/^function s:Token()$/;"	f
PreviousToken	plugged/vim-polyglot/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f
Pure	plugged/vim-polyglot/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f
SearchLoop	plugged/vim-polyglot/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
ExprCol	plugged/vim-polyglot/indent/javascript.vim	/^function s:ExprCol()$/;"	f
s:opfirst	plugged/vim-polyglot/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:continuation	plugged/vim-polyglot/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
Continues	plugged/vim-polyglot/indent/javascript.vim	/^function s:Continues()$/;"	f
Balanced	plugged/vim-polyglot/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
OneScope	plugged/vim-polyglot/indent/javascript.vim	/^function s:OneScope()$/;"	f
DoWhile	plugged/vim-polyglot/indent/javascript.vim	/^function s:DoWhile()$/;"	f
IsContOne	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f
IsSwitch	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsSwitch()$/;"	f
IsBlock	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsBlock()$/;"	f
GetJavascriptIndent	plugged/vim-polyglot/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
b:html_indent_usestate	plugged/vim-polyglot/indent/handlebars.vim	/^let b:html_indent_usestate = 0$/;"	v
b:handlebars_subtype_indentexpr	plugged/vim-polyglot/indent/handlebars.vim	/^let b:handlebars_subtype_indentexpr = &l:indentexpr$/;"	v
b:did_indent	plugged/vim-polyglot/indent/handlebars.vim	/^let b:did_indent = 1$/;"	v
b:did_indent_hbs	plugged/vim-polyglot/indent/handlebars.vim	/^let b:did_indent_hbs = 1$/;"	v
GetHandlebarsIndent	plugged/vim-polyglot/indent/handlebars.vim	/^function! GetHandlebarsIndent(...)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/cabal.vim	/^let b:did_indent = 1$/;"	v
g:cabal_indent_section	plugged/vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 2$/;"	v
g:cabal_indent_section	plugged/vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 4$/;"	v
GetCabalIndent	plugged/vim-polyglot/indent/cabal.vim	/^function! GetCabalIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/odin.vim	/^let b:did_indent = 1$/;"	v
GetOdinIndent	plugged/vim-polyglot/indent/odin.vim	/^function! GetOdinIndent(lnum)$/;"	f
b:jst_subtype_indentexpr	plugged/vim-polyglot/indent/jst.vim	/^let b:jst_subtype_indentexpr = &l:indentexpr$/;"	v
b:did_indent	plugged/vim-polyglot/indent/jst.vim	/^let b:did_indent = 1$/;"	v
GetJstIndent	plugged/vim-polyglot/indent/jst.vim	/^function! GetJstIndent(...)$/;"	f
get_indentexpr	plugged/vim-polyglot/indent/vue.vim	/^function! s:get_indentexpr(language)$/;"	f
s:languages	plugged/vim-polyglot/indent/vue.vim	/^let s:languages = [$/;"	v
s:language	plugged/vim-polyglot/indent/vue.vim	/^    let s:language.indentexpr = s:get_indentexpr(s:language.name)$/;"	v
s:html_indent	plugged/vim-polyglot/indent/vue.vim	/^let s:html_indent = s:get_indentexpr('html')$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vue.vim	/^let b:did_indent = 1$/;"	v
GetVueIndent	plugged/vim-polyglot/indent/vue.vim	/^function! GetVueIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/readline.vim	/^let b:did_indent = 1$/;"	v
GetReadlineIndent	plugged/vim-polyglot/indent/readline.vim	/^function GetReadlineIndent()$/;"	f
b:ecrystal_subtype_indentexpr	plugged/vim-polyglot/indent/ecrystal.vim	/^let b:ecrystal_subtype_indentexpr = &l:indentexpr$/;"	v
b:ecrystal_align_end	plugged/vim-polyglot/indent/ecrystal.vim	/^    let b:ecrystal_align_end = g:ecrystal_align_end$/;"	v
b:ecrystal_align_end	plugged/vim-polyglot/indent/ecrystal.vim	/^    let b:ecrystal_align_end = b:ecrystal_subtype !=# 'html' && b:ecrystal_subtype !=# 'xml'$/;"	v
b:ecrystal_indent_multiline	plugged/vim-polyglot/indent/ecrystal.vim	/^  let b:ecrystal_indent_multiline = get(g:, 'ecrystal_indent_multiline', 1)$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ecrystal.vim	/^let b:did_indent = 1$/;"	v
s:ecr_open	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_open = '<%%\\@!'$/;"	v
s:ecr_close	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_close = '%>'$/;"	v
s:ecr_control_open	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_control_open = '<%%\\@!-\\=[=#]\\@!'$/;"	v
s:ecr_comment_open	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_comment_open = '<%%\\@!-\\=#'$/;"	v
s:ecr_indent_regex	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_indent_regex =$/;"	v
s:ecr_dedent_regex	plugged/vim-polyglot/indent/ecrystal.vim	/^let s:ecr_dedent_regex =$/;"	v
s:sw	plugged/vim-polyglot/indent/ecrystal.vim	/^  let s:sw = function('shiftwidth')$/;"	v
sw	plugged/vim-polyglot/indent/ecrystal.vim	/^  function s:sw()$/;"	f
MatchAt	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchAt(lnum, col, pattern) abort$/;"	f
MatchCursor	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchCursor(pattern) abort$/;"	f
MatchECR	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchECR(...) abort$/;"	f
MatchECRControl	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:MatchECRControl(...) abort$/;"	f
ECRIndent	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:ECRIndent(...) abort$/;"	f
ECRDedent	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:ECRDedent(...) abort$/;"	f
FindECRControl	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:FindECRControl(...) abort$/;"	f
FindPrevECRControl	plugged/vim-polyglot/indent/ecrystal.vim	/^function! s:FindPrevECRControl(...) abort$/;"	f
GetEcrystalIndent	plugged/vim-polyglot/indent/ecrystal.vim	/^function! GetEcrystalIndent() abort$/;"	f
GetEcrystalFold	plugged/vim-polyglot/indent/ecrystal.vim	/^function! GetEcrystalFold() abort$/;"	f
b:did_indent	plugged/vim-polyglot/indent/cython.vim	/^let b:did_indent = 1$/;"	v
g:python_pep8_indent_multiline_string	plugged/vim-polyglot/indent/cython.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:python_pep8_indent_hang_closing	plugged/vim-polyglot/indent/cython.vim	/^    let g:python_pep8_indent_hang_closing = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/cython.vim	/^        let g:python_pep8_indent_searchpair_timeout = 150$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/cython.vim	/^        let g:python_pep8_indent_searchpair_timeout = 0$/;"	v
s:block_rules	plugged/vim-polyglot/indent/cython.vim	/^let s:block_rules = {$/;"	v
s:block_rules_multiple	plugged/vim-polyglot/indent/cython.vim	/^let s:block_rules_multiple = {$/;"	v
s:paren_pairs	plugged/vim-polyglot/indent/cython.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
b:control_statement	plugged/vim-polyglot/indent/cython.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/cython.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
s:stop_statement	plugged/vim-polyglot/indent/cython.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:skip_after_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:special_chars_syn_pattern	plugged/vim-polyglot/indent/cython.vim	/^let s:special_chars_syn_pattern = "\\\\vstring|comment|^pythonbytes%(contents)=$|pythonTodo|jedi\\\\S"$/;"	v
_skip_special_chars	plugged/vim-polyglot/indent/cython.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
is_concealed	plugged/vim-polyglot/indent/cython.vim	/^    function! s:is_concealed(line, col)$/;"	f
_skip_special_chars	plugged/vim-polyglot/indent/cython.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
sw	plugged/vim-polyglot/indent/cython.vim	/^    function! s:sw()$/;"	f
sw	plugged/vim-polyglot/indent/cython.vim	/^    function! s:sw()$/;"	f
find_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_opening_paren(lnum, col)$/;"	f
find_start_of_multiline_statement	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
find_start_of_block	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_start_of_block(lnum, types, skip, multiple) abort$/;"	f
match_expr_on_line	plugged/vim-polyglot/indent/cython.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
indent_like_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
indent_like_block	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_block(lnum)$/;"	f
indent_like_previous_line	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
is_dedented_already	plugged/vim-polyglot/indent/cython.vim	/^function! s:is_dedented_already(current, base)$/;"	f
is_python_string	plugged/vim-polyglot/indent/cython.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
GetPythonPEPIndent	plugged/vim-polyglot/indent/cython.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/gdscript3.vim	/^let b:did_indent = 1$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/gdscript3.vim	/^let s:keepcpo= &cpo$/;"	v
s:maxoff	plugged/vim-polyglot/indent/gdscript3.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
GetPythonIndent	plugged/vim-polyglot/indent/gdscript3.vim	/^function GetPythonIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/nim.vim	/^let b:did_indent = 1$/;"	v
FindStartLine	plugged/vim-polyglot/indent/nim.vim	/^function! s:FindStartLine(fromln, pattern)$/;"	f
GetNimIndent	plugged/vim-polyglot/indent/nim.vim	/^function! GetNimIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/java.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/java.vim	/^let b:undo_indent = "set cin< cino< indentkeys< indentexpr<"$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/java.vim	/^let s:keepcpo= &cpo$/;"	v
SkipJavaBlanksAndComments	plugged/vim-polyglot/indent/java.vim	/^function! SkipJavaBlanksAndComments(startline)$/;"	f
GetJavaIndent	plugged/vim-polyglot/indent/java.vim	/^function GetJavaIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/llvm.vim	/^let b:did_indent = 1$/;"	v
FindOpenBrace	plugged/vim-polyglot/indent/llvm.vim	/^function! FindOpenBrace(lnum)$/;"	f
GetLLVMIndent	plugged/vim-polyglot/indent/llvm.vim	/^function! GetLLVMIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/pug.vim	/^let b:did_indent = 1$/;"	v
s:attributes	plugged/vim-polyglot/indent/pug.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:tag	plugged/vim-polyglot/indent/pug.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
g:pug_self_closing_tags	plugged/vim-polyglot/indent/pug.vim	/^  let g:pug_self_closing_tags = 'meta|link|img|hr|br|input'$/;"	v
GetPugIndent	plugged/vim-polyglot/indent/pug.vim	/^function! GetPugIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/sass.vim	/^let b:did_indent = 1$/;"	v
s:property	plugged/vim-polyglot/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:extend	plugged/vim-polyglot/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
GetSassIndent	plugged/vim-polyglot/indent/sass.vim	/^function! GetSassIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/rust.vim	/^let b:did_indent = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/rust.vim	/^let s:save_cpo = &cpo$/;"	v
get_line_trimmed	plugged/vim-polyglot/indent/rust.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
is_string_comment	plugged/vim-polyglot/indent/rust.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
shiftwidth	plugged/vim-polyglot/indent/rust.vim	/^    function! s:shiftwidth()$/;"	f
shiftwidth	plugged/vim-polyglot/indent/rust.vim	/^    function! s:shiftwidth()$/;"	f
GetRustIndent	plugged/vim-polyglot/indent/rust.vim	/^function GetRustIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/sdl.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/sdl.vim	/^let s:cpo_save = &cpo$/;"	v
GetSDLIndent	plugged/vim-polyglot/indent/sdl.vim	/^function! GetSDLIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/puppet.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/puppet.vim	/^let b:undo_indent = "$/;"	v
PartOfInclude	plugged/vim-polyglot/indent/puppet.vim	/^function! s:PartOfInclude(lnum)$/;"	f
OpenBrace	plugged/vim-polyglot/indent/puppet.vim	/^function! s:OpenBrace(lnum)$/;"	f
InsideMultilineString	plugged/vim-polyglot/indent/puppet.vim	/^function! s:InsideMultilineString(lnum)$/;"	f
PrevNonMultilineString	plugged/vim-polyglot/indent/puppet.vim	/^function! s:PrevNonMultilineString(lnum)$/;"	f
GetPuppetIndent	plugged/vim-polyglot/indent/puppet.vim	/^function! GetPuppetIndent(...)$/;"	f
filename	plugged/vim-polyglot/indent/sql.vim	/^let filename = 'sqlanywhere'$/;"	v
filename	plugged/vim-polyglot/indent/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	plugged/vim-polyglot/indent/sql.vim	/^        let filename = g:sql_type_default$/;"	v
b:did_indent	plugged/vim-polyglot/indent/haskell.vim	/^let b:did_indent = 1$/;"	v
g:haskell_indent_if	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_if = 3$/;"	v
g:haskell_indent_case	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_case = 2$/;"	v
g:haskell_indent_let	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_let = 4$/;"	v
g:haskell_indent_where	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_where = 6$/;"	v
g:haskell_indent_do	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_do = 3$/;"	v
g:haskell_indent_in	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_in = 1$/;"	v
g:haskell_indent_guard	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_guard = 2$/;"	v
isInBlock	plugged/vim-polyglot/indent/haskell.vim	/^function! s:isInBlock(hlstack)$/;"	f
stripComment	plugged/vim-polyglot/indent/haskell.vim	/^function! s:stripComment(line)$/;"	f
isSYN	plugged/vim-polyglot/indent/haskell.vim	/^function! s:isSYN(grp, line, col)$/;"	f
getNesting	plugged/vim-polyglot/indent/haskell.vim	/^function! s:getNesting(hlstack)$/;"	f
getHLStack	plugged/vim-polyglot/indent/haskell.vim	/^function! s:getHLStack(line, col)$/;"	f
indentMatching	plugged/vim-polyglot/indent/haskell.vim	/^function! s:indentMatching(char)$/;"	f
indentGuard	plugged/vim-polyglot/indent/haskell.vim	/^function! s:indentGuard(pos, prevline)$/;"	f
GetHaskellIndent	plugged/vim-polyglot/indent/haskell.vim	/^function! GetHaskellIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/slime.vim	/^let b:did_indent = 1$/;"	v
s:attributes	plugged/vim-polyglot/indent/slime.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:tag	plugged/vim-polyglot/indent/slime.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/slime.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
GetSlimeIndent	plugged/vim-polyglot/indent/slime.vim	/^function! GetSlimeIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/omake.vim	/^let b:did_indent = 1$/;"	v
s:comment_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:rule_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:continued_rule_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:continuation_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:assignment_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:folded_assignment_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:just_inserted_rule_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:conditional_directive_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:end_conditional_directive_rx	plugged/vim-polyglot/indent/omake.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
remove_continuation	plugged/vim-polyglot/indent/omake.vim	/^function s:remove_continuation(line)$/;"	f
GetMakeIndent	plugged/vim-polyglot/indent/omake.vim	/^function GetMakeIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/lifelines.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/lifelines.vim	/^let b:undo_indent = "setl cin< cino< cinw<"$/;"	v
b:did_indent	plugged/vim-polyglot/indent/solidity.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/solidity.vim	/^let s:cpo_save = &cpo$/;"	v
s:js_keywords	plugged/vim-polyglot/indent/solidity.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_multiline	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_linecom	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/solidity.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:line_term	plugged/vim-polyglot/indent/solidity.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:msl_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:msl_regex = '\\%([\\\\*+\/.:([]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:one_line_scope_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:block_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:var_stmt	plugged/vim-polyglot/indent/solidity.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:comma_first	plugged/vim-polyglot/indent/solidity.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	plugged/vim-polyglot/indent/solidity.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:ternary	plugged/vim-polyglot/indent/solidity.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_q	plugged/vim-polyglot/indent/solidity.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
IsInStringOrComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInString	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInMultilineComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
IsLineComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsLineComment(lnum, col)$/;"	f
PrevNonBlankNonString	plugged/vim-polyglot/indent/solidity.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
GetMSL	plugged/vim-polyglot/indent/solidity.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
RemoveTrailingComments	plugged/vim-polyglot/indent/solidity.vim	/^function s:RemoveTrailingComments(content)$/;"	f
InMultiVarStatement	plugged/vim-polyglot/indent/solidity.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
GetVarIndent	plugged/vim-polyglot/indent/solidity.vim	/^function s:GetVarIndent(lnum)$/;"	f
LineHasOpeningBrackets	plugged/vim-polyglot/indent/solidity.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
Match	plugged/vim-polyglot/indent/solidity.vim	/^function s:Match(lnum, regex)$/;"	f
IndentWithContinuation	plugged/vim-polyglot/indent/solidity.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
InOneLineScope	plugged/vim-polyglot/indent/solidity.vim	/^function s:InOneLineScope(lnum)$/;"	f
ExitingOneLineScope	plugged/vim-polyglot/indent/solidity.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
GetSolidityIndent	plugged/vim-polyglot/indent/solidity.vim	/^function GetSolidityIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/xf86conf.vim	/^let b:did_indent = 1$/;"	v
GetXF86ConfIndent	plugged/vim-polyglot/indent/xf86conf.vim	/^function GetXF86ConfIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/zimbu.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/zimbu.vim	/^let b:undo_indent = "setl et< sw< ai< indentkeys< indentexpr="$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:maxoff	plugged/vim-polyglot/indent/zimbu.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
GetZimbuIndent	plugged/vim-polyglot/indent/zimbu.vim	/^func GetZimbuIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/haml.vim	/^let b:did_indent = 1$/;"	v
s:attributes	plugged/vim-polyglot/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:tag	plugged/vim-polyglot/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
GetHamlIndent	plugged/vim-polyglot/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/scss.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/scss.vim	/^let b:undo_indent = 'setl smartindent< indentkeys< indentexpr<'$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/scss.vim	/^let s:keepcpo= &cpoptions$/;"	v
prevnonblanknoncomment	plugged/vim-polyglot/indent/scss.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
count_chars	plugged/vim-polyglot/indent/scss.vim	/^function s:count_chars(lnum, count_open, chars)$/;"	f
GetSCSSIndent	plugged/vim-polyglot/indent/scss.vim	/^function GetSCSSIndent()$/;"	f
s:cpo_save	plugged/vim-polyglot/indent/pony.vim	/^let s:cpo_save = &cpo$/;"	v
pony	plugged/vim-polyglot/indent/pony.vim	/^augroup pony$/;"	a
b:undo_indent	plugged/vim-polyglot/indent/pony.vim	/^let b:undo_indent = 'set lisp< cindent< autoindent< smartindent< indentexpr< indentkeys< cinkeys< cinwords<'$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pony.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/tcl.vim	/^let b:did_indent = 1$/;"	v
prevnonblanknoncomment	plugged/vim-polyglot/indent/tcl.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
ends_with_backslash	plugged/vim-polyglot/indent/tcl.vim	/^function s:ends_with_backslash(lnum)$/;"	f
count_braces	plugged/vim-polyglot/indent/tcl.vim	/^function s:count_braces(lnum, count_open)$/;"	f
GetTclIndent	plugged/vim-polyglot/indent/tcl.vim	/^function GetTclIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/bib.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/bib.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:did_indent	plugged/vim-polyglot/indent/lisp.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/lisp.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:did_indent	plugged/vim-polyglot/indent/fsharp.vim	/^let b:did_indent = 1$/;"	v
GetLineWithoutFullComment	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
GetInd	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
FindPair	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindLet	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
GetFsharpIndent	plugged/vim-polyglot/indent/fsharp.vim	/^function! GetFsharpIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/nix.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/nix.vim	/^let s:cpo_save = &cpo$/;"	v
s:skip_syntax	plugged/vim-polyglot/indent/nix.vim	/^let s:skip_syntax = '\\%(Comment\\|String\\)$'$/;"	v
s:binding_open	plugged/vim-polyglot/indent/nix.vim	/^let s:binding_open = '\\%(\\<let\\>\\)'$/;"	v
s:binding_close	plugged/vim-polyglot/indent/nix.vim	/^let s:binding_close = '\\%(\\<in\\>\\)'$/;"	v
s:block_open	plugged/vim-polyglot/indent/nix.vim	/^let s:block_open  = '\\%({\\|[\\)'$/;"	v
s:block_close	plugged/vim-polyglot/indent/nix.vim	/^let s:block_close = '\\%(}\\|]\\)'$/;"	v
GetNixIndent	plugged/vim-polyglot/indent/nix.vim	/^function! GetNixIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/gitolite.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
GetGitoliteIndent	plugged/vim-polyglot/indent/gitolite.vim	/^function! GetGitoliteIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/systemverilog.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/systemverilog.vim	/^let s:cpo_save = &cpo$/;"	v
SystemVerilogIndent	plugged/vim-polyglot/indent/systemverilog.vim	/^function SystemVerilogIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/rpl.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/rpl.vim	/^let b:undo_indent = "set ai< indentkeys< indentexpr<"$/;"	v
RplGetIndent	plugged/vim-polyglot/indent/rpl.vim	/^function RplGetIndent(lnum)$/;"	f
RplGetFreeIndent	plugged/vim-polyglot/indent/rpl.vim	/^function RplGetFreeIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/perl.vim	/^let b:did_indent = 1$/;"	v
b:indent_use_syntax	plugged/vim-polyglot/indent/perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/perl.vim	/^let s:cpo_save = &cpo$/;"	v
GetPerlIndent	plugged/vim-polyglot/indent/perl.vim	/^function! GetPerlIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/scala.vim	/^let b:did_indent = 1$/;"	v
s:annotationMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:annotationMatcher = '@[A-Za-z._]\\+\\s\\+'$/;"	v
s:modifierMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:modifierMatcher = s:annotationMatcher . '\\|\\%(private\\|protected\\)\\%(\\[[^\\]]*\\]\\)\\?\\s\\+\\|abstract\\s\\+\\|override\\s\\+\\|final\\s\\+'$/;"	v
s:defMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:defMatcher = '\\%(' . s:modifierMatcher . '\\)*\\<def\\>'$/;"	v
s:valMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:valMatcher = '\\%(' . s:modifierMatcher . '\\|lazy\\s\\+\\)*\\<va[lr]\\>'$/;"	v
s:funcNameMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:funcNameMatcher = '\\w\\+'$/;"	v
s:typeSpecMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:typeSpecMatcher = '\\%(\\s*\\[\\_[^\\]]*\\]\\)'$/;"	v
s:defArgMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:defArgMatcher = '\\%((\\_.\\{-})\\)'$/;"	v
s:returnTypeMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:returnTypeMatcher = '\\%(:\\s*\\w\\+' . s:typeSpecMatcher . '\\?\\)'$/;"	v
g:fullDefMatcher	plugged/vim-polyglot/indent/scala.vim	/^let g:fullDefMatcher = '^\\s*' . s:defMatcher . '\\s\\+' . s:funcNameMatcher . '\\s*' . s:typeSpecMatcher . '\\?\\s*' . s:defArgMatcher . '\\?\\s*' . s:returnTypeMatcher . '\\?\\s*[={]'$/;"	v
scala#ConditionalConfirm	plugged/vim-polyglot/indent/scala.vim	/^function! scala#ConditionalConfirm(msg)$/;"	f
scala#GetLine	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLine(lnum)$/;"	f
scala#CountBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountBrackets(line, openBracket, closedBracket)$/;"	f
scala#CountParens	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountParens(line)$/;"	f
scala#CountCurlies	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountCurlies(line)$/;"	f
scala#LineEndsInIncomplete	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineEndsInIncomplete(line)$/;"	f
scala#LineIsAClosingXML	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineIsAClosingXML(line)$/;"	f
scala#LineCompletesXML	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesXML(lnum, line)$/;"	f
scala#IsParentCase	plugged/vim-polyglot/indent/scala.vim	/^function! scala#IsParentCase()$/;"	f
scala#CurlyMatcher	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CurlyMatcher()$/;"	f
scala#GetLineAndColumnThatMatchesCurly	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesCurly()$/;"	f
scala#GetLineAndColumnThatMatchesParen	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesParen()$/;"	f
scala#GetLineAndColumnThatMatchesBracket	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineThatMatchesCurly	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesCurly()$/;"	f
scala#GetLineThatMatchesParen	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesParen()$/;"	f
scala#GetLineThatMatchesBracket	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#NumberOfBraceGroups	plugged/vim-polyglot/indent/scala.vim	/^function! scala#NumberOfBraceGroups(line)$/;"	f
scala#MatchesIncompleteDefValr	plugged/vim-polyglot/indent/scala.vim	/^function! scala#MatchesIncompleteDefValr(line)$/;"	f
scala#LineIsCompleteIf	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineIsCompleteIf(line)$/;"	f
scala#LineCompletesIfElse	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesIfElse(lnum, line)$/;"	f
scala#GetPrevCodeLine	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetPrevCodeLine(lnum)$/;"	f
scala#InvertBracketType	plugged/vim-polyglot/indent/scala.vim	/^function! scala#InvertBracketType(openBracket, closedBracket)$/;"	f
scala#Testhelper	plugged/vim-polyglot/indent/scala.vim	/^function! scala#Testhelper(lnum, line, openBracket, closedBracket, iteration)$/;"	f
scala#Test	plugged/vim-polyglot/indent/scala.vim	/^function! scala#Test(lnum, line, openBracket, closedBracket)$/;"	f
scala#LineCompletesDefValr	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesDefValr(lnum, line)$/;"	f
scala#SpecificLineCompletesBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#SpecificLineCompletesBrackets(lnum, openBracket, closedBracket)$/;"	f
scala#LineCompletesBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesBrackets(openBracket, closedBracket)$/;"	f
GetScalaIndent	plugged/vim-polyglot/indent/scala.vim	/^function! GetScalaIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/zig.vim	/^let b:did_indent = 1$/;"	v
GetZigIndent	plugged/vim-polyglot/indent/zig.vim	/^function! GetZigIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/sshconfig.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/sshconfig.vim	/^let b:undo_indent = "setlocal autoindent< indentexpr< indentkeys<"$/;"	v
GetSshconfigIndent	plugged/vim-polyglot/indent/sshconfig.vim	/^function GetSshconfigIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/hcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
g:ruby_indent_access_modifier_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_indent_assignment_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_assignment_style = 'hanging'$/;"	v
g:ruby_indent_block_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_block_style = 'do'$/;"	v
g:ruby_indent_hanging_elements	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_hanging_elements = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:syng_string	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_stringdoc = s:syng_string + ['Documentation']$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_strcom = s:syng_stringdoc + [$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:ruby_indent_keywords	plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_deindent_keywords	plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:end_start_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:end_middle_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_end_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_skip_expr	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:non_bracket_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:non_bracket_continuation_regex =$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuable_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:bracket_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:dot_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:dot_continuation_regex = '%\\@<!\\.\\s*\\%(#.*\\)\\=$'$/;"	v
s:backslash_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:backslash_continuation_regex = '%\\@<!\\\\\\s*$'$/;"	v
s:bracket_switch_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:splat_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:access_modifier_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:indent_access_modifier_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:block_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:leading_operator_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*\\%(&\\=\\.\\)'$/;"	v
GetRubyIndent	plugged/vim-polyglot/indent/ruby.vim	/^function! GetRubyIndent(...) abort$/;"	f
AccessModifier	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AccessModifier(cline_info) abort$/;"	f
ClosingBracketOnEmptyLine	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
BlockComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:BlockComment(cline_info) abort$/;"	f
DeindentingKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:DeindentingKeyword(cline_info) abort$/;"	f
MultilineStringOrLineComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:MultilineStringOrLineComment(cline_info) abort$/;"	f
ClosingHeredocDelimiter	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ClosingHeredocDelimiter(cline_info) abort$/;"	f
LeadingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:LeadingOperator(cline_info) abort$/;"	f
EmptyInsideString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:EmptyInsideString(pline_info) abort$/;"	f
StartOfFile	plugged/vim-polyglot/indent/ruby.vim	/^function! s:StartOfFile(pline_info) abort$/;"	f
AfterAccessModifier	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterAccessModifier(pline_info) abort$/;"	f
ContinuedLine	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ContinuedLine(pline_info) abort$/;"	f
AfterBlockOpening	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterBlockOpening(pline_info) abort$/;"	f
AfterLeadingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterLeadingOperator(pline_info) abort$/;"	f
AfterHangingSplat	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterHangingSplat(pline_info) abort$/;"	f
AfterUnbalancedBracket	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterUnbalancedBracket(pline_info) abort$/;"	f
AfterEndKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterEndKeyword(pline_info) abort$/;"	f
AfterIndentKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterIndentKeyword(pline_info) abort$/;"	f
PreviousNotMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:PreviousNotMSL(msl_info) abort$/;"	f
IndentingKeywordInMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IndentingKeywordInMSL(msl_info) abort$/;"	f
ContinuedHangingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ContinuedHangingOperator(msl_info) abort$/;"	f
IsInRubyGroup	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInRubyGroup(groups, lnum, col) abort$/;"	f
IsInStringOrComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrComment(lnum, col) abort$/;"	f
IsInString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInString(lnum, col) abort$/;"	f
IsInStringOrDocumentation	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrDocumentation(lnum, col) abort$/;"	f
IsInStringDelimiter	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringDelimiter(lnum, col) abort$/;"	f
IsAssignment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsAssignment(str, pos) abort$/;"	f
PrevNonBlankNonString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:PrevNonBlankNonString(lnum) abort$/;"	f
GetMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:GetMSL(lnum) abort$/;"	f
ExtraBrackets	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ExtraBrackets(lnum) abort$/;"	f
Match	plugged/vim-polyglot/indent/ruby.vim	/^function! s:Match(lnum, regex) abort$/;"	f
FindContainingClass	plugged/vim-polyglot/indent/ruby.vim	/^function! s:FindContainingClass() abort$/;"	f
b:did_indent	plugged/vim-polyglot/indent/ld.vim	/^let b:did_indent = 1$/;"	v
prevnonblanknoncomment	plugged/vim-polyglot/indent/ld.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
count_braces	plugged/vim-polyglot/indent/ld.vim	/^function s:count_braces(lnum, count_open)$/;"	f
GetLDIndent	plugged/vim-polyglot/indent/ld.vim	/^function GetLDIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/ls.vim	/^let b:did_indent = 1$/;"	v
s:INDENT_AFTER_KEYWORD	plugged/vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	plugged/vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/ls.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\|do\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	plugged/vim-polyglot/indent/ls.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/ls.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:OUTDENT_AFTER	plugged/vim-polyglot/indent/ls.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:COMPOUND_ASSIGNMENT	plugged/vim-polyglot/indent/ls.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|until\\|'$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/ls.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/ls.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/ls.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
SyntaxName	plugged/vim-polyglot/indent/ls.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
IsComment	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsComment(linenum, col)$/;"	f
IsString	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsString(linenum, col)$/;"	f
IsCommentOrString	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
IsCommentLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsCommentLine(linenum)$/;"	f
SmartSearch	plugged/vim-polyglot/indent/ls.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
ShouldSkip	plugged/vim-polyglot/indent/ls.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
MaxLookback	plugged/vim-polyglot/indent/ls.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
SkipExpr	plugged/vim-polyglot/indent/ls.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
SearchPair	plugged/vim-polyglot/indent/ls.vim	/^function! s:SearchPair(start, end)$/;"	f
GetMatch	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetMatch(curline)$/;"	f
GetPrevNormalLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
GetTrimmedLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
GetLiveScriptIndent	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetLiveScriptIndent(curlinenum)$/;"	f
GetLiveScriptIndent	plugged/vim-polyglot/indent/ls.vim	/^function! GetLiveScriptIndent(curlinenum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/idris2.vim	/^let b:did_indent = 1$/;"	v
g:idris_indent_if	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_if = 3$/;"	v
g:idris_indent_case	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_case = 5$/;"	v
g:idris_indent_let	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_let = 4$/;"	v
g:idris_indent_rewrite	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_rewrite = 8$/;"	v
g:idris_indent_where	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_where = 6$/;"	v
g:idris_indent_do	plugged/vim-polyglot/indent/idris2.vim	/^  let g:idris_indent_do = 3$/;"	v
GetIdrisIndent	plugged/vim-polyglot/indent/idris2.vim	/^function! GetIdrisIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/ada.vim	/^let b:did_indent = 45$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:AdaBlockStart	plugged/vim-polyglot/indent/ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\(loop\\|use\\)\\>\\|declare\\>\\|begin\\>\\|type\\>.*\\<is\\>[^;]*$\\|\\(type\\>.*\\)\\=\\<record\\>\\|procedure\\>\\|function\\>\\|accept\\>\\|do\\>\\|task\\>\\|package\\>\\|project\\>\\|then\\>\\|when\\>\\|is\\>\\)'$/;"	v
s:AdaBlockStart	plugged/vim-polyglot/indent/ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\(loop\\|use\\)\\>\\|declare\\>\\|begin\\>\\|type\\>.*\\<is\\>[^;]*$\\|\\(type\\>.*\\)\\=\\<record\\>\\|procedure\\>\\|function\\>\\|accept\\>\\|do\\>\\|task\\>\\|package\\>\\|then\\>\\|when\\>\\|is\\>\\)'$/;"	v
MainBlockIndent	plugged/vim-polyglot/indent/ada.vim	/^function s:MainBlockIndent (prev_indent, prev_lnum, blockstart, stop_at)$/;"	f
EndBlockIndent	plugged/vim-polyglot/indent/ada.vim	/^function s:EndBlockIndent( prev_indent, prev_lnum, blockstart, blockend )$/;"	f
StatementIndent	plugged/vim-polyglot/indent/ada.vim	/^function s:StatementIndent( current_indent, prev_lnum )$/;"	f
GetAdaIndent	plugged/vim-polyglot/indent/ada.vim	/^function GetAdaIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/sas.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/sas.vim	/^let s:cpo_save = &cpo$/;"	v
s:section_str	plugged/vim-polyglot/indent/sas.vim	/^let s:section_str = '\\v%(^|;)\\s*%(data|proc)>'$/;"	v
s:section_run	plugged/vim-polyglot/indent/sas.vim	/^let s:section_run = '\\v%(^|;)\\s*run\\s*;'$/;"	v
s:section_end	plugged/vim-polyglot/indent/sas.vim	/^let s:section_end = '\\v%(^|;)\\s*%(quit|enddata)\\s*;'$/;"	v
s:block_str	plugged/vim-polyglot/indent/sas.vim	/^let s:block_str = '\\v<%(do>%([^;]+<%(to|over|while)>[^;]+)=|%(compute|define\\s+%(column|footer|header|style|table|tagset|crosstabs|statgraph)|edit|layout|method|select)>[^;]+|begingraph)\\s*;'$/;"	v
s:block_end	plugged/vim-polyglot/indent/sas.vim	/^let s:block_end = '\\v<%(end|endcomp|endlayout|endgraph)\\s*;'$/;"	v
s:macro_str	plugged/vim-polyglot/indent/sas.vim	/^let s:macro_str = '\\v%(^|;)\\s*\\%macro>'$/;"	v
s:macro_end	plugged/vim-polyglot/indent/sas.vim	/^let s:macro_end = '\\v%(^|;)\\s*\\%mend\\s*;'$/;"	v
s:program_end	plugged/vim-polyglot/indent/sas.vim	/^let s:program_end = '\\v%(^|;)\\s*endsas\\s*;'$/;"	v
s:run_processing_procs	plugged/vim-polyglot/indent/sas.vim	/^let s:run_processing_procs = [$/;"	v
PrevMatch	plugged/vim-polyglot/indent/sas.vim	/^function! s:PrevMatch(lnum, regex)$/;"	f
GetSASIndent	plugged/vim-polyglot/indent/sas.vim	/^function! GetSASIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/json.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/json.vim	/^let s:cpo_save = &cpo$/;"	v
s:line_term	plugged/vim-polyglot/indent/json.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:block_regex	plugged/vim-polyglot/indent/json.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
IsInString	plugged/vim-polyglot/indent/json.vim	/^function s:IsInString(lnum, col)$/;"	f
PrevNonBlankNonString	plugged/vim-polyglot/indent/json.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
LineHasOpeningBrackets	plugged/vim-polyglot/indent/json.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
Match	plugged/vim-polyglot/indent/json.vim	/^function s:Match(lnum, regex)$/;"	f
GetJSONIndent	plugged/vim-polyglot/indent/json.vim	/^function GetJSONIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/vhdl.vim	/^let b:did_indent = 1$/;"	v
s:NC	plugged/vim-polyglot/indent/vhdl.vim	/^let s:NC = '\\%(--.*\\)\\@<!'$/;"	v
s:ES	plugged/vim-polyglot/indent/vhdl.vim	/^let s:ES = '\\s*\\%(--.*\\)\\=$'$/;"	v
s:NE	plugged/vim-polyglot/indent/vhdl.vim	/^let s:NE = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
g:vhdl_indent_genportmap	plugged/vim-polyglot/indent/vhdl.vim	/^  let g:vhdl_indent_genportmap = 1$/;"	v
g:vhdl_indent_rhsassign	plugged/vim-polyglot/indent/vhdl.vim	/^  let g:vhdl_indent_rhsassign = 1$/;"	v
GetVHDLindent	plugged/vim-polyglot/indent/vhdl.vim	/^function GetVHDLindent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/treetop.vim	/^let b:did_indent = 1$/;"	v
GetTreetopIndent	plugged/vim-polyglot/indent/treetop.vim	/^function GetTreetopIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/mail.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rst.vim	/^let b:did_indent = 1$/;"	v
s:itemization_pattern	plugged/vim-polyglot/indent/rst.vim	/^let s:itemization_pattern = '^\\s*[-*+]\\s'$/;"	v
s:enumeration_pattern	plugged/vim-polyglot/indent/rst.vim	/^let s:enumeration_pattern = '^\\s*\\%(\\d\\+\\|#\\)\\.\\s\\+'$/;"	v
s:note_pattern	plugged/vim-polyglot/indent/rst.vim	/^let s:note_pattern = '^\\.\\. '$/;"	v
get_paragraph_start	plugged/vim-polyglot/indent/rst.vim	/^function! s:get_paragraph_start()$/;"	f
GetRSTIndent	plugged/vim-polyglot/indent/rst.vim	/^function GetRSTIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/python.vim	/^let b:did_indent = 1$/;"	v
g:python_pep8_indent_multiline_string	plugged/vim-polyglot/indent/python.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:python_pep8_indent_hang_closing	plugged/vim-polyglot/indent/python.vim	/^    let g:python_pep8_indent_hang_closing = 0$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/python.vim	/^        let g:python_pep8_indent_searchpair_timeout = 150$/;"	v
g:python_pep8_indent_searchpair_timeout	plugged/vim-polyglot/indent/python.vim	/^        let g:python_pep8_indent_searchpair_timeout = 0$/;"	v
s:block_rules	plugged/vim-polyglot/indent/python.vim	/^let s:block_rules = {$/;"	v
s:block_rules_multiple	plugged/vim-polyglot/indent/python.vim	/^let s:block_rules_multiple = {$/;"	v
s:paren_pairs	plugged/vim-polyglot/indent/python.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
b:control_statement	plugged/vim-polyglot/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
s:stop_statement	plugged/vim-polyglot/indent/python.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:skip_after_opening_paren	plugged/vim-polyglot/indent/python.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:special_chars_syn_pattern	plugged/vim-polyglot/indent/python.vim	/^let s:special_chars_syn_pattern = "\\\\vstring|comment|^pythonbytes%(contents)=$|pythonTodo|jedi\\\\S"$/;"	v
_skip_special_chars	plugged/vim-polyglot/indent/python.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
is_concealed	plugged/vim-polyglot/indent/python.vim	/^    function! s:is_concealed(line, col)$/;"	f
_skip_special_chars	plugged/vim-polyglot/indent/python.vim	/^    function! s:_skip_special_chars(line, col)$/;"	f
sw	plugged/vim-polyglot/indent/python.vim	/^    function! s:sw()$/;"	f
sw	plugged/vim-polyglot/indent/python.vim	/^    function! s:sw()$/;"	f
find_opening_paren	plugged/vim-polyglot/indent/python.vim	/^function! s:find_opening_paren(lnum, col)$/;"	f
find_start_of_multiline_statement	plugged/vim-polyglot/indent/python.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
find_start_of_block	plugged/vim-polyglot/indent/python.vim	/^function! s:find_start_of_block(lnum, types, skip, multiple) abort$/;"	f
match_expr_on_line	plugged/vim-polyglot/indent/python.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
indent_like_opening_paren	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
indent_like_block	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_block(lnum)$/;"	f
indent_like_previous_line	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
is_dedented_already	plugged/vim-polyglot/indent/python.vim	/^function! s:is_dedented_already(current, base)$/;"	f
is_python_string	plugged/vim-polyglot/indent/python.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
GetPythonPEPIndent	plugged/vim-polyglot/indent/python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
s:cpo_save	plugged/vim-polyglot/indent/applescript.vim	/^let s:cpo_save=&cpo$/;"	v
GetAppleScriptIndent	plugged/vim-polyglot/indent/applescript.vim	/^func! GetAppleScriptIndent()$/;"	f
returnAppleScriptIndent	plugged/vim-polyglot/indent/applescript.vim	/^func! s:returnAppleScriptIndent()$/;"	f
prev_non_connected_line	plugged/vim-polyglot/indent/applescript.vim	/^func! s:prev_non_connected_line(line)$/;"	f
doesOrderConnect	plugged/vim-polyglot/indent/applescript.vim	/^func! s:doesOrderConnect(text)$/;"	f
s:RIndent	plugged/vim-polyglot/indent/rrst.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rrst.vim	/^let b:did_indent = 1$/;"	v
GetRstIndent	plugged/vim-polyglot/indent/rrst.vim	/^function GetRstIndent()$/;"	f
GetRrstIndent	plugged/vim-polyglot/indent/rrst.vim	/^function GetRrstIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/ch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/make.vim	/^let b:did_indent = 1$/;"	v
s:comment_rx	plugged/vim-polyglot/indent/make.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:rule_rx	plugged/vim-polyglot/indent/make.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:continued_rule_rx	plugged/vim-polyglot/indent/make.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:continuation_rx	plugged/vim-polyglot/indent/make.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:assignment_rx	plugged/vim-polyglot/indent/make.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:folded_assignment_rx	plugged/vim-polyglot/indent/make.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:just_inserted_rule_rx	plugged/vim-polyglot/indent/make.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:conditional_directive_rx	plugged/vim-polyglot/indent/make.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:end_conditional_directive_rx	plugged/vim-polyglot/indent/make.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
remove_continuation	plugged/vim-polyglot/indent/make.vim	/^function s:remove_continuation(line)$/;"	f
GetMakeIndent	plugged/vim-polyglot/indent/make.vim	/^function GetMakeIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
s:DEFAULT_LEVEL	plugged/vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	plugged/vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:BEGIN_BLOCK_KEYWORD	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:COMPOUND_EXPRESSION	plugged/vim-polyglot/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:BEGIN_BLOCK	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:FUNCTION	plugged/vim-polyglot/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:CONTINUATION_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:BRACKET_CONTINUATION	plugged/vim-polyglot/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:BREAK_BLOCK_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:CONTAINED_THEN	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:ELSE_COND	plugged/vim-polyglot/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:KEYWORD_PAIRS	plugged/vim-polyglot/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:BRACKET_PAIRS	plugged/vim-polyglot/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:SYNTAX_STRING	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_COMMENT	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING_COMMENT	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:ShiftWidth	plugged/vim-polyglot/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
ShiftWidth	plugged/vim-polyglot/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
SyntaxName	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
IsComment	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
IsString	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
IsCommentOrString	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
SearchCode	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
GetPrevNormalLine	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
SearchPair	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
ShouldSkip	plugged/vim-polyglot/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
SearchMatchingKeyword	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
GetTrimmedLine	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
GetDefaultPolicy	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
GetCoffeeIndent	plugged/vim-polyglot/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/reason.vim	/^let b:did_indent = 1$/;"	v
get_line_trimmed	plugged/vim-polyglot/indent/reason.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
is_string_comment	plugged/vim-polyglot/indent/reason.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
GetReasonIndent	plugged/vim-polyglot/indent/reason.vim	/^function GetReasonIndent(lnum)$/;"	f
b:html_indent_usestate	plugged/vim-polyglot/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:eruby_subtype_indentexpr	plugged/vim-polyglot/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:did_indent	plugged/vim-polyglot/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
s:cpo_sav	plugged/vim-polyglot/indent/eruby.vim	/^let s:cpo_sav = &cpo$/;"	v
GetErubyIndent	plugged/vim-polyglot/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/wast.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/wast.vim	/^let b:undo_indent = "setl lisp< indentexpr<"$/;"	v
b:did_indent	plugged/vim-polyglot/indent/mp.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/mp.vim	/^let b:undo_indent = "setl indentkeys< indentexpr<"$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/mp.vim	/^let s:keepcpo= &cpo$/;"	v
GetMetaPostIndent	plugged/vim-polyglot/indent/mp.vim	/^function GetMetaPostIndent()$/;"	f
g:mp_open_tag	plugged/vim-polyglot/indent/mp.vim	/^let g:mp_open_tag = ''$/;"	v
g:mp_close_tag	plugged/vim-polyglot/indent/mp.vim	/^let g:mp_close_tag = ''$/;"	v
g:mp_statement	plugged/vim-polyglot/indent/mp.vim	/^let g:mp_statement = ''$/;"	v
s:eol	plugged/vim-polyglot/indent/mp.vim	/^let s:eol = '\\s*\\%($\\|%\\)'$/;"	v
CommentOrString	plugged/vim-polyglot/indent/mp.vim	/^function! s:CommentOrString(line, pos)$/;"	f
PrevNonBlankNonComment	plugged/vim-polyglot/indent/mp.vim	/^function! s:PrevNonBlankNonComment(lnum)$/;"	f
LastTagIsOpen	plugged/vim-polyglot/indent/mp.vim	/^function! s:LastTagIsOpen(line)$/;"	f
Weight	plugged/vim-polyglot/indent/mp.vim	/^function! s:Weight(line)$/;"	f
ValidMatchEnd	plugged/vim-polyglot/indent/mp.vim	/^function! s:ValidMatchEnd(line, pat, start)$/;"	f
LastValidMatchEnd	plugged/vim-polyglot/indent/mp.vim	/^function! s:LastValidMatchEnd(line, pat, start)$/;"	f
DecreaseIndentOnClosingTag	plugged/vim-polyglot/indent/mp.vim	/^function! s:DecreaseIndentOnClosingTag(curr_indent)$/;"	f
GetMetaPostIndentIntern	plugged/vim-polyglot/indent/mp.vim	/^function! GetMetaPostIndentIntern()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/idris.vim	/^let b:did_indent = 1$/;"	v
g:idris_indent_if	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_if = 3$/;"	v
g:idris_indent_case	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_case = 5$/;"	v
g:idris_indent_let	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_let = 4$/;"	v
g:idris_indent_rewrite	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_rewrite = 8$/;"	v
g:idris_indent_where	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_where = 6$/;"	v
g:idris_indent_do	plugged/vim-polyglot/indent/idris.vim	/^  let g:idris_indent_do = 3$/;"	v
GetIdrisIndent	plugged/vim-polyglot/indent/idris.vim	/^function! GetIdrisIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/markdown.vim	/^let b:did_indent = 1$/;"	v
IsMkdCode	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsMkdCode(lnum)$/;"	f
IsLiStart	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsLiStart(line)$/;"	f
IsHeaderLine	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsHeaderLine(line)$/;"	f
IsBlankLine	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsBlankLine(line)$/;"	f
PrevNonBlank	plugged/vim-polyglot/indent/markdown.vim	/^function! s:PrevNonBlank(lnum)$/;"	f
GetMarkdownIndent	plugged/vim-polyglot/indent/markdown.vim	/^function GetMarkdownIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/racket.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/racket.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:did_indent	plugged/vim-polyglot/indent/erlang.vim	/^  let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
Log	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Log(s)$/;"	f
CalcVCol	plugged/vim-polyglot/indent/erlang.vim	/^function! s:CalcVCol(line, first_index, last_index, vcol, tabstop)$/;"	f
GetTokensFromLine	plugged/vim-polyglot/indent/erlang.vim	/^function! s:GetTokensFromLine(line, string_continuation, atom_continuation,$/;"	f
GetIndtokenAtCol	plugged/vim-polyglot/indent/erlang.vim	/^function! s:GetIndtokenAtCol(indtokens, col)$/;"	f
Push	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Push(stack, token)$/;"	f
Pop	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Pop(stack)$/;"	f
s:all_tokens	plugged/vim-polyglot/indent/erlang.vim	/^let s:all_tokens = {}$/;"	v
s:file_name	plugged/vim-polyglot/indent/erlang.vim	/^let s:file_name = ''$/;"	v
s:last_changedtick	plugged/vim-polyglot/indent/erlang.vim	/^let s:last_changedtick = -1$/;"	v
ClearTokenCacheIfNeeded	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ClearTokenCacheIfNeeded()$/;"	f
TokenizeLine	plugged/vim-polyglot/indent/erlang.vim	/^function! s:TokenizeLine(lnum, direction)$/;"	f
FindIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:FindIndToken(lnum, dir)$/;"	f
PrevIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:PrevIndToken(lnum, i)$/;"	f
NextIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:NextIndToken(lnum, i)$/;"	f
IndentError	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IndentError(msg, token, stack)$/;"	f
UnexpectedToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:UnexpectedToken(token, stack)$/;"	f
g:erlang_unexpected_token_indent	plugged/vim-polyglot/indent/erlang.vim	/^  let g:erlang_unexpected_token_indent = -1$/;"	v
IsLineStringContinuation	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsLineStringContinuation(lnum)$/;"	f
IsLineAtomContinuation	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsLineAtomContinuation(lnum)$/;"	f
IsCatchStandalone	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsCatchStandalone(lnum, i)$/;"	f
BeginElementFoundIfEmpty	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFoundIfEmpty(stack, token, curr_vcol, stored_vcol, sw)$/;"	f
BeginElementFound	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFound(stack, token, curr_vcol, stored_vcol, end_token, sw)$/;"	f
BeginningOfClauseFound	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginningOfClauseFound(stack, token, stored_vcol, lnum, i)$/;"	f
g:erlang_indent_searchpair_timeout	plugged/vim-polyglot/indent/erlang.vim	/^let g:erlang_indent_searchpair_timeout = 2000$/;"	v
SearchPair	plugged/vim-polyglot/indent/erlang.vim	/^function! s:SearchPair(lnum, curr_col, start, middle, end)$/;"	f
SearchEndPair	plugged/vim-polyglot/indent/erlang.vim	/^function! s:SearchEndPair(lnum, curr_col)$/;"	f
ErlangCalcIndent	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent(lnum, stack)$/;"	f
ErlangCalcIndent2	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent2(lnum, stack)$/;"	f
ErlangIndent	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangIndent()$/;"	f
ErlangShowTokensInLine	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInLine(line)$/;"	f
ErlangShowTokensInCurrentLine	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInCurrentLine()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/lua.vim	/^let b:did_indent = 1$/;"	v
s:open_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:open_patt = '\\C\\%(\\<\\%(function\\|if\\|repeat\\|do\\)\\>\\|(\\|{\\)'$/;"	v
s:middle_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:middle_patt = '\\C\\<\\%(else\\|elseif\\)\\>'$/;"	v
s:close_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:close_patt = '\\C\\%(\\<\\%(end\\|until\\)\\>\\|)\\|}\\)'$/;"	v
s:anon_func_start	plugged/vim-polyglot/indent/lua.vim	/^let s:anon_func_start = '\\S\\+\\s*[({].*\\<function\\s*(.*)\\s*$'$/;"	v
s:anon_func_end	plugged/vim-polyglot/indent/lua.vim	/^let s:anon_func_end = '\\<end\\%(\\s*[)}]\\)\\+'$/;"	v
s:chained_func_call	plugged/vim-polyglot/indent/lua.vim	/^let s:chained_func_call = "^\\\\v\\\\s*[:.]\\\\w+[({\\"']"$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/lua.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~# 'luaComment\\\\|luaString'"$/;"	v
IsInCommentOrString	plugged/vim-polyglot/indent/lua.vim	/^function s:IsInCommentOrString(lnum, col)$/;"	f
PrevLineOfCode	plugged/vim-polyglot/indent/lua.vim	/^function s:PrevLineOfCode(lnum)$/;"	f
GetContents	plugged/vim-polyglot/indent/lua.vim	/^function s:GetContents(lnum)$/;"	f
GetLuaIndent	plugged/vim-polyglot/indent/lua.vim	/^function GetLuaIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/ps1.vim	/^let b:did_indent = 1$/;"	v
#	plugged/vim-polyglot/indent/ps1.vim	/^inoremap <buffer> # X#$/;"	m
b:undo_indent	plugged/vim-polyglot/indent/ps1.vim	/^let b:undo_indent = "setl si<"$/;"	v
b:did_indent	plugged/vim-polyglot/indent/tf.vim	/^let b:did_indent = 1$/;"	v
GetTFIndent	plugged/vim-polyglot/indent/tf.vim	/^function GetTFIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/j.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/j.vim	/^let b:undo_indent = 'setlocal indentkeys< indentexpr<'$/;"	v
g:j_indent_definitions	plugged/vim-polyglot/indent/j.vim	/^  let g:j_indent_definitions = 0$/;"	v
GetJIndent	plugged/vim-polyglot/indent/j.vim	/^function GetJIndent() abort$/;"	f
b:liquid_subtype_indentexpr	plugged/vim-polyglot/indent/liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:did_indent	plugged/vim-polyglot/indent/liquid.vim	/^let b:did_indent = 1$/;"	v
count	plugged/vim-polyglot/indent/liquid.vim	/^function! s:count(string,pattern)$/;"	f
GetLiquidIndent	plugged/vim-polyglot/indent/liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/verilog.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
GetVerilogIndent	plugged/vim-polyglot/indent/verilog.vim	/^function GetVerilogIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/prolog.vim	/^let b:did_indent = 1$/;"	v
GetPrologIndent	plugged/vim-polyglot/indent/prolog.vim	/^function! GetPrologIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/dylan.vim	/^let b:did_indent = 1$/;"	v
DylanGetIndent	plugged/vim-polyglot/indent/dylan.vim	/^function DylanGetIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/elixir.vim	/^let b:did_indent = 1$/;"	v
elixir#indent	plugged/vim-polyglot/indent/elixir.vim	/^function! elixir#indent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/kotlin.vim	/^let b:did_indent = 1$/;"	v
GetKotlinIndent	plugged/vim-polyglot/indent/kotlin.vim	/^function! GetKotlinIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/octave.vim	/^let b:did_indent = 1$/;"	v
s:beginBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:beginBlock = ['for', 'parfor', 'function', 'if', 'switch',$/;"	v
s:midBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:midBlock = ['case', 'catch', 'else', 'elseif', 'otherwise',$/;"	v
s:endBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:endBlock = ['end', 'endfor', 'endparfor', 'endfunction', 'endif',$/;"	v
s:openBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:openBlock = s:beginBlock + s:midBlock$/;"	v
s:closeBlock	plugged/vim-polyglot/indent/octave.vim	/^let s:closeBlock = s:midBlock + s:endBlock$/;"	v
GetOctaveIndent	plugged/vim-polyglot/indent/octave.vim	/^function! GetOctaveIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/vb.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/vb.vim	/^let b:undo_indent = "set ai< indentexpr< indentkeys<"$/;"	v
VbGetIndent	plugged/vim-polyglot/indent/vb.vim	/^fun! VbGetIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/hog.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/hog.vim	/^let b:undo_indent = 'setlocal smartindent< indentexpr< indentkeys<'$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/hog.vim	/^let s:cpo_save = &cpo$/;"	v
s:syn_blocks	plugged/vim-polyglot/indent/hog.vim	/^let s:syn_blocks = '\\<SnortRuleTypeBody\\>'$/;"	v
IsInBlock	plugged/vim-polyglot/indent/hog.vim	/^function s:IsInBlock(lnum)$/;"	f
GetHogIndent	plugged/vim-polyglot/indent/hog.vim	/^function GetHogIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/ember-script.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ledger.vim	/^let b:did_indent = 1$/;"	v
GetLedgerIndent	plugged/vim-polyglot/indent/ledger.vim	/^function GetLedgerIndent(...)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/qml.vim	/^let b:did_indent = 1$/;"	v
Trim	plugged/vim-polyglot/indent/qml.vim	/^function! Trim(line)$/;"	f
GetJsIndent	plugged/vim-polyglot/indent/qml.vim	/^function! GetJsIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/terraform.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/terraform.vim	/^let b:undo_indent = 'setlocal lisp< autoindent< shiftwidth< tabstop< softtabstop<'$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
TerraformIndent	plugged/vim-polyglot/indent/terraform.vim	/^function! TerraformIndent(lnum)$/;"	f
s:cpo_save	plugged/vim-polyglot/indent/gohtmltmpl.vim	/^let s:cpo_save = &cpo$/;"	v
GetGoHTMLTmplIndent	plugged/vim-polyglot/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/mako.vim	/^let b:did_indent = 1$/;"	v
IsInsidePythonBlock	plugged/vim-polyglot/indent/mako.vim	/^function IsInsidePythonBlock(startline)$/;"	f
GetMakoIndent	plugged/vim-polyglot/indent/mako.vim	/^function GetMakoIndent()$/;"	f
HtmlIndentPush	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
MakoIndentPush	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentPush(tag)$/;"	f
MatchCount	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MatchCount(expr, pat)$/;"	f
HtmlIndentOpen	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpen(lnum)$/;"	f
HtmlIndentClose	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentClose(lnum)$/;"	f
MakoIndentOpen	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentOpen(lnum)$/;"	f
MakoIndentClose	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentClose(lnum)$/;"	f
HtmlIndentOpenAlt	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentCloseAlt	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentSum	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/bzl.vim	/^let b:did_indent = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/bzl.vim	/^let s:save_cpo = &cpo$/;"	v
s:maxoff	plugged/vim-polyglot/indent/bzl.vim	/^let s:maxoff = 50$/;"	v
GetBzlIndent	plugged/vim-polyglot/indent/bzl.vim	/^function GetBzlIndent(lnum) abort$/;"	f
b:did_indent	plugged/vim-polyglot/indent/occam.vim	/^let b:did_indent = 1$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:FirstLevelIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:FirstLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\|PAR\\|SEQ\\|PRI\\s\\+PAR\\|WHILE\\|VALOF\\|CLAIM\\|FORKING\\)\\>\\|\\(--.*\\)\\@<!\\(\\<PROC\\>\\|??\\|\\<CASE\\>\\s*\\(--.*\\)\\=\\_$\\)'$/;"	v
s:FirstLevelNonColonEndIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:FirstLevelNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\+TYPE\\|FUNCTION\\)\\>'$/;"	v
s:SecondLevelIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:SecondLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\)\\>\\|\\(--.*\\)\\@<!?\\s*\\<CASE\\>\\s*\\(--.*\\)\\=\\_$'$/;"	v
s:SecondLevelNonColonEndIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:SecondLevelNonColonEndIndent = '\\(--.*\\)\\@<!\\<\\(CHAN\\|DATA\\)\\s\\+TYPE\\>'$/;"	v
s:ColonIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonIndent = '\\(--.*\\)\\@<!\\<PROC\\>'$/;"	v
s:ColonNonColonEndIndent	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\+TYPE\\|FUNCTION\\)\\>'$/;"	v
s:ColonEnd	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonEnd = '\\(--.*\\)\\@<!:\\s*\\(--.*\\)\\=$'$/;"	v
s:ColonStart	plugged/vim-polyglot/indent/occam.vim	/^let s:ColonStart = '^\\s*:\\s*\\(--.*\\)\\=$'$/;"	v
s:CommentLine	plugged/vim-polyglot/indent/occam.vim	/^let s:CommentLine = '^\\s*--'$/;"	v
GetOccamIndent	plugged/vim-polyglot/indent/occam.vim	/^function GetOccamIndent()$/;"	f
s:html_indent	plugged/vim-polyglot/indent/svelte.vim	/^let s:html_indent = &l:indentexpr$/;"	v
b:did_indent	plugged/vim-polyglot/indent/svelte.vim	/^let b:did_indent = 1$/;"	v
g:svelte_indent_script	plugged/vim-polyglot/indent/svelte.vim	/^  let g:svelte_indent_script = 1$/;"	v
g:svelte_indent_style	plugged/vim-polyglot/indent/svelte.vim	/^  let g:svelte_indent_style = 1$/;"	v
GetSvelteIndent	plugged/vim-polyglot/indent/svelte.vim	/^function! GetSvelteIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/ocaml.vim	/^let b:did_indent = 1$/;"	v
s:beflet	plugged/vim-polyglot/indent/ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|<-\\|=\\|;\\|(\\)\\s*$'$/;"	v
s:letpat	plugged/vim-polyglot/indent/ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:letlim	plugged/vim-polyglot/indent/ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:lim	plugged/vim-polyglot/indent/ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:module	plugged/vim-polyglot/indent/ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:obj	plugged/vim-polyglot/indent/ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:type	plugged/vim-polyglot/indent/ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
GetLineWithoutFullComment	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
GetInd	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
FindPair	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindLet	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
GetOCamlIndent	plugged/vim-polyglot/indent/ocaml.vim	/^function! GetOCamlIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/dart.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/dart.vim	/^let b:undo_indent = 'setl cin< cino<'$/;"	v
DartIndent	plugged/vim-polyglot/indent/dart.vim	/^function! DartIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/falcon.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/falcon.vim	/^let s:syng_strcom = '\\<falcon\\%(String\\|StringEscape\\|Comment\\)\\>'$/;"	v
s:syng_string	plugged/vim-polyglot/indent/falcon.vim	/^let s:syng_string = '\\<falcon\\%(String\\|StringEscape\\)\\>'$/;"	v
s:block_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:block_regex =$/;"	v
s:block_continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:continuation_regex =$/;"	v
s:bracket_continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:non_bracket_continuation_regex	plugged/vim-polyglot/indent/falcon.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:falcon_indent_keywords	plugged/vim-polyglot/indent/falcon.vim	/^let s:falcon_indent_keywords = '^\\s*\\(case\\|catch\\|class\\|enum\\|default\\|elif\\|else' .$/;"	v
s:falcon_deindent_keywords	plugged/vim-polyglot/indent/falcon.vim	/^let s:falcon_deindent_keywords = '^\\s*\\(case\\|catch\\|default\\|elif\\|else\\|end\\)'$/;"	v
IsInStringOrComment	plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInString	plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringDelimiter	plugged/vim-polyglot/indent/falcon.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
PrevNonBlankNonString	plugged/vim-polyglot/indent/falcon.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
GetMSL	plugged/vim-polyglot/indent/falcon.vim	/^function s:GetMSL(lnum)$/;"	f
ExtraBrackets	plugged/vim-polyglot/indent/falcon.vim	/^function s:ExtraBrackets(lnum)$/;"	f
Match	plugged/vim-polyglot/indent/falcon.vim	/^function s:Match(lnum, regex)$/;"	f
MatchLast	plugged/vim-polyglot/indent/falcon.vim	/^function s:MatchLast(lnum, regex)$/;"	f
FalconGetIndent	plugged/vim-polyglot/indent/falcon.vim	/^function FalconGetIndent(...)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/sml.vim	/^let b:did_indent = 1$/;"	v
s:beflet	plugged/vim-polyglot/indent/sml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|;\\)\\s*$'$/;"	v
s:letpat	plugged/vim-polyglot/indent/sml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:letlim	plugged/vim-polyglot/indent/sml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:lim	plugged/vim-polyglot/indent/sml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:module	plugged/vim-polyglot/indent/sml.vim	/^let s:module = '\\<\\%(let\\|sig\\|struct\\)\\>'$/;"	v
s:obj	plugged/vim-polyglot/indent/sml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:type	plugged/vim-polyglot/indent/sml.vim	/^let s:type = '^\\s*\\%(let\\|type\\)\\>.*='$/;"	v
s:val	plugged/vim-polyglot/indent/sml.vim	/^let s:val = '^\\s*\\(val\\|external\\)\\>.*:'$/;"	v
SkipPattern	plugged/vim-polyglot/indent/sml.vim	/^function! s:SkipPattern(lnum, pat)$/;"	f
GetInd	plugged/vim-polyglot/indent/sml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
FindPair	plugged/vim-polyglot/indent/sml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindLet	plugged/vim-polyglot/indent/sml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
GetSMLIndent	plugged/vim-polyglot/indent/sml.vim	/^function! GetSMLIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/pgsql.vim	/^let b:did_indent     = 1$/;"	v
b:current_indent	plugged/vim-polyglot/indent/pgsql.vim	/^let b:current_indent = "pgsql"$/;"	v
shiftwidth	plugged/vim-polyglot/indent/pgsql.vim	/^    fun! s:shiftwidth()$/;"	f
shiftwidth	plugged/vim-polyglot/indent/pgsql.vim	/^    fun! s:shiftwidth()$/;"	f
s:keepcpo	plugged/vim-polyglot/indent/pgsql.vim	/^let s:keepcpo= &cpo$/;"	v
s:SQLBlockStart	plugged/vim-polyglot/indent/pgsql.vim	/^let s:SQLBlockStart = '^\\s*\\%('.$/;"	v
s:SQLBlockEnd	plugged/vim-polyglot/indent/pgsql.vim	/^let s:SQLBlockEnd = '^\\s*\\(end\\)\\>'$/;"	v
CountUnbalancedParen	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:CountUnbalancedParen( line, paren_to_check )$/;"	f
CheckToIgnoreRightParen	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:CheckToIgnoreRightParen( prev_lnum, num_levels )$/;"	f
GetStmtStarterIndent	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:GetStmtStarterIndent( keyword, curr_lnum )$/;"	f
IsLineComment	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:IsLineComment(lnum)$/;"	f
IsColComment	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:IsColComment(lnum, cnum)$/;"	f
ModuloIndent	plugged/vim-polyglot/indent/pgsql.vim	/^function! s:ModuloIndent(ind)$/;"	f
GetSQLIndent	plugged/vim-polyglot/indent/pgsql.vim	/^function! GetSQLIndent()$/;"	f
s:htmlindent	plugged/vim-polyglot/indent/blade.vim	/^let s:htmlindent = &indentexpr$/;"	v
s:phpindent	plugged/vim-polyglot/indent/blade.vim	/^let s:phpindent = &indentexpr$/;"	v
b:did_indent	plugged/vim-polyglot/indent/blade.vim	/^let b:did_indent = 1$/;"	v
s:directives_start	plugged/vim-polyglot/indent/blade.vim	/^let s:directives_start = 'if\\|else\\|unless\\|for\\|while\\|empty\\|push\\|section\\|can\\|hasSection\\|verbatim\\|php\\|' .$/;"	v
s:directives_end	plugged/vim-polyglot/indent/blade.vim	/^let s:directives_end = 'else\\|end\\|empty\\|show\\|stop\\|append\\|overwrite'$/;"	v
s:directives_start	plugged/vim-polyglot/indent/blade.vim	/^    let s:directives_start .= '\\|' . join(keys(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_end	plugged/vim-polyglot/indent/blade.vim	/^    let s:directives_end .= '\\|' . join(values(g:blade_custom_directives_pairs), '\\|')$/;"	v
IsStartingDelimiter	plugged/vim-polyglot/indent/blade.vim	/^function! s:IsStartingDelimiter(lnum)$/;"	f
GetBladeIndent	plugged/vim-polyglot/indent/blade.vim	/^function! GetBladeIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/xinetd.vim	/^let b:did_indent = 1$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/xinetd.vim	/^let s:keepcpo= &cpo$/;"	v
count_braces	plugged/vim-polyglot/indent/xinetd.vim	/^function s:count_braces(lnum, count_open)$/;"	f
GetXinetdIndent	plugged/vim-polyglot/indent/xinetd.vim	/^function GetXinetdIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/svg.vim	/^let b:did_indent = 1$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/svg.vim	/^let s:keepcpo= &cpo$/;"	v
b:svg_indent_open	plugged/vim-polyglot/indent/svg.vim	/^  let b:svg_indent_open = '.\\{-}<\\a'$/;"	v
b:svg_indent_close	plugged/vim-polyglot/indent/svg.vim	/^  let b:svg_indent_close = '.\\{-}<\/'$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/svg.vim	/^let s:keepcpo= &cpo$/;"	v
SvgIndentWithPattern	plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentWithPattern(line, pat)$/;"	f
SvgIndentSynCheck	plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentSynCheck(lnum)$/;"	f
SvgIndentSum	plugged/vim-polyglot/indent/svg.vim	/^fun! <SID>SvgIndentSum(lnum, style, add)$/;"	f
SvgIndentGet	plugged/vim-polyglot/indent/svg.vim	/^fun! SvgIndentGet(lnum, use_syntax_check)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/d.vim	/^let b:did_indent = 1$/;"	v
SkipBlanksAndComments	plugged/vim-polyglot/indent/d.vim	/^function! SkipBlanksAndComments(startline)$/;"	f
GetDIndent	plugged/vim-polyglot/indent/d.vim	/^function GetDIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/tilde.vim	/^let b:did_indent = 1$/;"	v
GetTildeIndent	plugged/vim-polyglot/indent/tilde.vim	/^function GetTildeIndent(lnum)$/;"	f
s:skipPatterns	plugged/vim-polyglot/indent/julia.vim	/^let s:skipPatterns = '\\<julia\\%(Comprehension\\%(For\\|If\\)\\|RangeKeyword\\|Comment\\%([LM]\\|Delim\\)\\|\\%([bsv]\\|ip\\|big\\|MIME\\|Shell\\|Printf\\|Doc\\)\\=String\\|RegEx\\|SymbolS\\?\\)\\>'$/;"	v
JuliaMatch	plugged/vim-polyglot/indent/julia.vim	/^function JuliaMatch(lnum, str, regex, st, ...)$/;"	f
GetJuliaNestingStruct	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaNestingStruct(lnum, ...)$/;"	f
GetJuliaNestingBrackets	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaNestingBrackets(lnum, c)$/;"	f
s:bracketBlocks	plugged/vim-polyglot/indent/julia.vim	/^let s:bracketBlocks = '\\<julia\\%(\\%(\\%(Printf\\)\\?Par\\|SqBra\\%(Idx\\)\\?\\|CurBra\\)Block\\|ParBlockInRange\\|StringVars\\%(Par\\|SqBra\\|CurBra\\)\\|Dollar\\%(Par\\|SqBra\\)\\|QuotedParBlockS\\?\\)\\>'$/;"	v
IsInBrackets	plugged/vim-polyglot/indent/julia.vim	/^function IsInBrackets(lnum, c)$/;"	f
IsInDocString	plugged/vim-polyglot/indent/julia.vim	/^function IsInDocString(lnum)$/;"	f
IsInContinuationImportLine	plugged/vim-polyglot/indent/julia.vim	/^function IsInContinuationImportLine(lnum)$/;"	f
IsFunctionArgPar	plugged/vim-polyglot/indent/julia.vim	/^function IsFunctionArgPar(lnum, c)$/;"	f
JumpToMatch	plugged/vim-polyglot/indent/julia.vim	/^function JumpToMatch(lnum, last_closed_bracket)$/;"	f
LastBlockIndent	plugged/vim-polyglot/indent/julia.vim	/^function LastBlockIndent(lnum)$/;"	f
GetJuliaIndent	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/fennel.vim	/^let b:did_indent = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/fennel.vim	/^let s:save_cpo = &cpo$/;"	v
g:fennel_maxlines	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_maxlines = 100$/;"	v
g:fennel_fuzzy_indent	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent = 1$/;"	v
g:fennel_fuzzy_indent_patterns	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent_patterns = ['^def', '^let', '^while', '^if', '^fn$', '^var$', '^case$', '^for$', '^each$', '^local$', '^global$', '^match$', '^macro', '^lambda$']$/;"	v
g:fennel_fuzzy_indent_blacklist	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_fuzzy_indent_blacklist = []$/;"	v
g:fennel_special_indent_words	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_special_indent_words = ''$/;"	v
g:fennel_align_multiline_strings	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_align_multiline_strings = 0$/;"	v
g:fennel_align_subforms	plugged/vim-polyglot/indent/fennel.vim	/^		let g:fennel_align_subforms = 0$/;"	v
syn_id_name	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:syn_id_name()$/;"	f
ignored_region	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:ignored_region()$/;"	f
current_char	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:current_char()$/;"	f
current_word	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:current_word()$/;"	f
is_paren	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:is_paren()$/;"	f
match_one	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:match_one(patterns, string)$/;"	f
match_pairs	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
fennel_check_for_string_worker	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:fennel_check_for_string_worker()$/;"	f
check_for_string	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:check_for_string()$/;"	f
bracket_type	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:bracket_type(char)$/;"	f
fennel_indent_pos	plugged/vim-polyglot/indent/fennel.vim	/^	function! s:fennel_indent_pos()$/;"	f
GetFennelIndent	plugged/vim-polyglot/indent/fennel.vim	/^	function! GetFennelIndent()$/;"	f
b:undo_indent	plugged/vim-polyglot/indent/fennel.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:did_indent	plugged/vim-polyglot/indent/caddyfile.vim	/^let b:did_indent = 1$/;"	v
sw	plugged/vim-polyglot/indent/caddyfile.vim	/^	function! s:sw()$/;"	f
sw	plugged/vim-polyglot/indent/caddyfile.vim	/^	function! s:sw()$/;"	f
GetCaddyfileIndent	plugged/vim-polyglot/indent/caddyfile.vim	/^function! GetCaddyfileIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/nsis.vim	/^let b:did_indent = 1$/;"	v
GetNsisIndent	plugged/vim-polyglot/indent/nsis.vim	/^function! GetNsisIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/slim.vim	/^let b:did_indent = 1$/;"	v
s:attributes	plugged/vim-polyglot/indent/slim.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:tag	plugged/vim-polyglot/indent/slim.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/slim.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
GetSlimIndent	plugged/vim-polyglot/indent/slim.vim	/^function! GetSlimIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/stylus.vim	/^let b:did_indent = 1$/;"	v
prevnonblanknoncomment	plugged/vim-polyglot/indent/stylus.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
count_braces	plugged/vim-polyglot/indent/stylus.vim	/^function s:count_braces(lnum, count_open)$/;"	f
GetStylusIndent	plugged/vim-polyglot/indent/stylus.vim	/^function! GetStylusIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/logtalk.vim	/^let b:did_indent = 1$/;"	v
GetLogtalkIndent	plugged/vim-polyglot/indent/logtalk.vim	/^function! GetLogtalkIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/vroom.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/vroom.vim	/^let b:undo_indent = 'setlocal autoindent<'$/;"	v
b:did_indent	plugged/vim-polyglot/indent/css.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/css.vim	/^let b:undo_indent = "setl smartindent< indentkeys< indentexpr<"$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/css.vim	/^let s:keepcpo= &cpo$/;"	v
prevnonblanknoncomment	plugged/vim-polyglot/indent/css.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
count_braces	plugged/vim-polyglot/indent/css.vim	/^function s:count_braces(lnum, count_open)$/;"	f
GetCSSIndent	plugged/vim-polyglot/indent/css.vim	/^function GetCSSIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/cs.vim	/^let b:did_indent = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/cs.vim	/^let s:save_cpo = &cpoptions$/;"	v
IsCompilerDirective	plugged/vim-polyglot/indent/cs.vim	/^function! s:IsCompilerDirective(line)$/;"	f
IsAttributeLine	plugged/vim-polyglot/indent/cs.vim	/^function! s:IsAttributeLine(line)$/;"	f
FindPreviousNonCompilerDirectiveLine	plugged/vim-polyglot/indent/cs.vim	/^function! s:FindPreviousNonCompilerDirectiveLine(start_lnum)$/;"	f
GetCSIndent	plugged/vim-polyglot/indent/cs.vim	/^function! GetCSIndent(lnum) abort$/;"	f
b:undo_indent	plugged/vim-polyglot/indent/cs.vim	/^let b:undo_indent = 'setlocal indentexpr<'$/;"	v
NoTeXIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^function! s:NoTeXIndent()$/;"	f
s:TeXIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^  let s:TeXIndent = function("s:NoTeXIndent")$/;"	v
s:TeXIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^  let s:TeXIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rnoweb.vim	/^let b:did_indent = 1$/;"	v
GetRnowebIndent	plugged/vim-polyglot/indent/rnoweb.vim	/^function GetRnowebIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/opencl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cdl.vim	/^let b:did_indent = 1$/;"	v
CdlAsignment	plugged/vim-polyglot/indent/cdl.vim	/^fun! CdlAsignment(lnum, line)$/;"	f
CdlGetIndent	plugged/vim-polyglot/indent/cdl.vim	/^fun! CdlGetIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:js_keywords	plugged/vim-polyglot/indent/typescript.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:line_term	plugged/vim-polyglot/indent/typescript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^=]\\)' . s:line_term$/;"	v
s:msl_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:msl_regex = s:continuation_regex$/;"	v
s:one_line_scope_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:block_regex	plugged/vim-polyglot/indent/typescript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:var_stmt	plugged/vim-polyglot/indent/typescript.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:comma_first	plugged/vim-polyglot/indent/typescript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	plugged/vim-polyglot/indent/typescript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:ternary	plugged/vim-polyglot/indent/typescript.vim	/^let s:ternary = '^\\s\\+[?:]'$/;"	v
s:ternary_q	plugged/vim-polyglot/indent/typescript.vim	/^let s:ternary_q = '^\\s\\+?[.?]\\@!'$/;"	v
IsInStringOrComment	plugged/vim-polyglot/indent/typescript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInString	plugged/vim-polyglot/indent/typescript.vim	/^function s:IsInString(lnum, col)$/;"	f
PrevNonBlankNonString	plugged/vim-polyglot/indent/typescript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
GetMSL	plugged/vim-polyglot/indent/typescript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
RemoveTrailingComments	plugged/vim-polyglot/indent/typescript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
InMultiVarStatement	plugged/vim-polyglot/indent/typescript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
GetVarIndent	plugged/vim-polyglot/indent/typescript.vim	/^function s:GetVarIndent(lnum)$/;"	f
LineHasOpeningBrackets	plugged/vim-polyglot/indent/typescript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
Match	plugged/vim-polyglot/indent/typescript.vim	/^function s:Match(lnum, regex)$/;"	f
IndentWithContinuation	plugged/vim-polyglot/indent/typescript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
InOneLineScope	plugged/vim-polyglot/indent/typescript.vim	/^function s:InOneLineScope(lnum)$/;"	f
ExitingOneLineScope	plugged/vim-polyglot/indent/typescript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
GetTypescriptIndent	plugged/vim-polyglot/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/vala.vim	/^let b:did_indent = 1$/;"	v
GetValaIndent	plugged/vim-polyglot/indent/vala.vim	/^function GetValaIndent(lnum)$/;"	f
b:ran_once	plugged/vim-polyglot/indent/twig.vim	/^let b:ran_once = 1$/;"	v
s:baseIndentExpr	plugged/vim-polyglot/indent/twig.vim	/^let s:baseIndentExpr=&indentexpr$/;"	v
GetTwigIndent	plugged/vim-polyglot/indent/twig.vim	/^fun! GetTwigIndent(currentLineNumber)$/;"	f
CallBaseIndent	plugged/vim-polyglot/indent/twig.vim	/^function! s:CallBaseIndent()$/;"	f
FindPreviousOpenStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:FindPreviousOpenStructure(lineNumber)$/;"	f
StartStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:StartStructure(name)$/;"	f
EndStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:EndStructure(name)$/;"	f
Map	plugged/vim-polyglot/indent/twig.vim	/^function! s:Map(Fun, list)$/;"	f
BuildStructures	plugged/vim-polyglot/indent/twig.vim	/^fun! s:BuildStructures()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/gitconfig.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
GetGitconfigIndent	plugged/vim-polyglot/indent/gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/dictconf.vim	/^let b:did_indent = 1$/;"	v
#	plugged/vim-polyglot/indent/dictconf.vim	/^inoremap <buffer> # X#$/;"	m
b:did_indent	plugged/vim-polyglot/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
syn	plugged/vim-polyglot/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f
GetCucumberIndent	plugged/vim-polyglot/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/postscr.vim	/^let b:did_indent = 1$/;"	v
PostscrIndentGet	plugged/vim-polyglot/indent/postscr.vim	/^function! PostscrIndentGet(lnum)$/;"	f
s:cpo_save	plugged/vim-polyglot/indent/dtd.vim	/^let s:cpo_save = &cpo$/;"	v
s:token_pattern	plugged/vim-polyglot/indent/dtd.vim	/^let s:token_pattern = '^[^[:space:]]\\+'$/;"	v
lex1	plugged/vim-polyglot/indent/dtd.vim	/^function s:lex1(input, start, ...)$/;"	f
lex	plugged/vim-polyglot/indent/dtd.vim	/^function s:lex(input, start, ...)$/;"	f
indent_to_innermost_parentheses	plugged/vim-polyglot/indent/dtd.vim	/^function s:indent_to_innermost_parentheses(line, end)$/;"	f
GetDTDIndent	plugged/vim-polyglot/indent/dtd.vim	/^function GetDTDIndent()$/;"	f
b:undo_indent	plugged/vim-polyglot/indent/autohotkey.vim	/^let b:undo_indent = 'setlocal '.join([$/;"	v
s:TRUE	plugged/vim-polyglot/indent/autohotkey.vim	/^let s:TRUE = !0$/;"	v
s:FALSE	plugged/vim-polyglot/indent/autohotkey.vim	/^let s:FALSE = 0$/;"	v
IsBeginBlockByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsBeginBlockByStr(str)$/;"	f
IsEndBlockByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsEndBlockByStr(str)$/;"	f
IsDoubleCoronByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsDoubleCoronByStr(str)$/;"	f
IsReturnByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsReturnByStr(str)$/;"	f
IsIfStatementByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsIfStatementByStr(str)$/;"	f
IsInsideOfBlockByNum	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsInsideOfBlockByNum(line_num)$/;"	f
AddIndentByInd	plugged/vim-polyglot/indent/autohotkey.vim	/^function! AddIndentByInd(indent)$/;"	f
UnIndentByInd	plugged/vim-polyglot/indent/autohotkey.vim	/^function! UnIndentByInd(indent)$/;"	f
GetAutoHotkeyIndent	plugged/vim-polyglot/indent/autohotkey.vim	/^function! GetAutoHotkeyIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/autohotkey.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dune.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/raku.vim	/^let b:did_indent = 1$/;"	v
b:indent_use_syntax	plugged/vim-polyglot/indent/raku.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/raku.vim	/^let s:cpo_save = &cpo$/;"	v
GetRakuIndent	plugged/vim-polyglot/indent/raku.vim	/^function! GetRakuIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/dosbatch.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
GetDosBatchIndent	plugged/vim-polyglot/indent/dosbatch.vim	/^function! GetDosBatchIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/framescript.vim	/^let b:did_indent = 1$/;"	v
GetFrameScriptIndent	plugged/vim-polyglot/indent/framescript.vim	/^function GetFrameScriptIndent()$/;"	f
s:save_cpo	plugged/vim-polyglot/indent/yaml.vim	/^let s:save_cpo = &cpo$/;"	v
b:did_indent	plugged/vim-polyglot/indent/yaml.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/yaml.vim	/^let b:undo_indent = 'setlocal indentexpr< indentkeys< smartindent<'$/;"	v
FindPrevLessIndentedLine	plugged/vim-polyglot/indent/yaml.vim	/^function s:FindPrevLessIndentedLine(lnum, ...)$/;"	f
FindPrevLEIndentedLineMatchingRegex	plugged/vim-polyglot/indent/yaml.vim	/^function s:FindPrevLEIndentedLineMatchingRegex(lnum, regex)$/;"	f
s:mapkeyregex	plugged/vim-polyglot/indent/yaml.vim	/^let s:mapkeyregex='\\v^\\s*\\#@!\\S@=%(\\''%([^'']|\\''\\'')*\\'''.$/;"	v
s:liststartregex	plugged/vim-polyglot/indent/yaml.vim	/^let s:liststartregex='\\v^\\s*%(\\-%(\\ |$))'$/;"	v
s:c_ns_anchor_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_char = '\\v%([\\n\\r\\uFEFF \\t,[\\]{}]@!\\p)'$/;"	v
s:c_ns_anchor_name	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'+'$/;"	v
s:c_ns_anchor_property	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_anchor_property =  '\\v\\&'.s:c_ns_anchor_name$/;"	v
s:ns_word_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_word_char = '\\v[[:alnum:]_\\-]'$/;"	v
s:ns_tag_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_tag_char  = '\\v%(%\\x\\x|'.s:ns_word_char.'|[#\/;?:@&=+$.~*''()])'$/;"	v
s:c_named_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_named_tag_handle     = '\\v\\!'.s:ns_word_char.'+\\!'$/;"	v
s:c_secondary_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_secondary_tag_handle = '\\v\\!\\!'$/;"	v
s:c_primary_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_primary_tag_handle   = '\\v\\!'$/;"	v
s:c_tag_handle	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_tag_handle = '\\v%('.s:c_named_tag_handle.$/;"	v
s:c_ns_shorthand_tag	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_shorthand_tag = '\\v'.s:c_tag_handle . s:ns_tag_char.'+'$/;"	v
s:c_non_specific_tag	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_non_specific_tag = '\\v\\!'$/;"	v
s:ns_uri_char	plugged/vim-polyglot/indent/yaml.vim	/^let s:ns_uri_char  = '\\v%(%\\x\\x|'.s:ns_word_char.'\\v|[#\/;?:@&=+$,.!~*''()[\\]])'$/;"	v
s:c_verbatim_tag	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_verbatim_tag = '\\v\\!\\<'.s:ns_uri_char.'+\\>'$/;"	v
s:c_ns_tag_property	plugged/vim-polyglot/indent/yaml.vim	/^let s:c_ns_tag_property = '\\v'.s:c_verbatim_tag.$/;"	v
s:block_scalar_header	plugged/vim-polyglot/indent/yaml.vim	/^let s:block_scalar_header = '\\v[|>]%([+-]?[1-9]|[1-9]?[+-])?'$/;"	v
GetYAMLIndent	plugged/vim-polyglot/indent/yaml.vim	/^function GetYAMLIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/arduino.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/arduino.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:did_indent	plugged/vim-polyglot/indent/proto.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/proto.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:did_indent	plugged/vim-polyglot/indent/awk.vim	/^let b:did_indent = 1$/;"	v
GetAwkIndent	plugged/vim-polyglot/indent/awk.vim	/^function! GetAwkIndent()$/;"	f
Get_brace_balance	plugged/vim-polyglot/indent/awk.vim	/^function! s:Get_brace_balance( line, b_open, b_close )$/;"	f
Starts_with_word	plugged/vim-polyglot/indent/awk.vim	/^function! s:Starts_with_word( line )$/;"	f
First_word_len	plugged/vim-polyglot/indent/awk.vim	/^function! s:First_word_len( line )$/;"	f
Seems_continuing	plugged/vim-polyglot/indent/awk.vim	/^function! s:Seems_continuing( line )$/;"	f
Get_prev_line	plugged/vim-polyglot/indent/awk.vim	/^function! s:Get_prev_line( lineno )$/;"	f
Safe_indent	plugged/vim-polyglot/indent/awk.vim	/^function! s:Safe_indent( base, wordlen, this_line )$/;"	f
b:did_indent	plugged/vim-polyglot/indent/chaiscript.vim	/^let b:did_indent = 1$/;"	v
GetChaiScriptIndent	plugged/vim-polyglot/indent/chaiscript.vim	/^function! GetChaiScriptIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/dictdconf.vim	/^let b:did_indent = 1$/;"	v
#	plugged/vim-polyglot/indent/dictdconf.vim	/^inoremap <buffer> # X#$/;"	m
b:did_indent	plugged/vim-polyglot/indent/swift.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/swift.vim	/^let s:cpo_save = &cpo$/;"	v
NumberOfMatches	plugged/vim-polyglot/indent/swift.vim	/^function! s:NumberOfMatches(char, string, index)$/;"	f
SyntaxNameAtPosition	plugged/vim-polyglot/indent/swift.vim	/^function! s:SyntaxNameAtPosition(line, column)$/;"	f
SyntaxName	plugged/vim-polyglot/indent/swift.vim	/^function! s:SyntaxName()$/;"	f
IsExcludedFromIndentAtPosition	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndentAtPosition(line, column)$/;"	f
IsExcludedFromIndent	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndent()$/;"	f
IsSyntaxNameExcludedFromIndent	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsSyntaxNameExcludedFromIndent(name)$/;"	f
IsCommentLine	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsCommentLine(lnum)$/;"	f
SwiftIndent	plugged/vim-polyglot/indent/swift.vim	/^function! SwiftIndent(...)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/clojure.vim	/^let b:did_indent = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/clojure.vim	/^let s:save_cpo = &cpo$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/clojure.vim	/^let b:undo_indent = 'setlocal autoindent< smartindent< expandtab< softtabstop< shiftwidth< indentexpr< indentkeys<'$/;"	v
g:clojure_maxlines	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_maxlines = 100$/;"	v
g:clojure_fuzzy_indent	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent = 1$/;"	v
g:clojure_fuzzy_indent_patterns	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_patterns = ['^with', '^def', '^let']$/;"	v
g:clojure_fuzzy_indent_blacklist	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_blacklist = ['-fn$', '\\v^with-%(meta|out-str|loading-context)$']$/;"	v
g:clojure_special_indent_words	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_special_indent_words = 'deftype,defrecord,reify,proxy,extend-type,extend-protocol,letfn'$/;"	v
g:clojure_align_multiline_strings	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_multiline_strings = 0$/;"	v
g:clojure_align_subforms	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_subforms = 0$/;"	v
syn_id_name	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:syn_id_name()$/;"	f
ignored_region	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:ignored_region()$/;"	f
current_char	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:current_char()$/;"	f
current_word	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:current_word()$/;"	f
is_paren	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_paren()$/;"	f
match_one	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:match_one(patterns, string)$/;"	f
match_pairs	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
clojure_check_for_string_worker	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_check_for_string_worker()$/;"	f
check_for_string	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:check_for_string()$/;"	f
strip_namespace_and_macro_chars	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:strip_namespace_and_macro_chars(word)$/;"	f
clojure_is_method_special_case_worker	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_is_method_special_case_worker(position)$/;"	f
is_method_special_case	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_method_special_case(position)$/;"	f
is_reader_conditional_special_case	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_reader_conditional_special_case(position)$/;"	f
bracket_type	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:bracket_type(char)$/;"	f
clojure_indent_pos	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_indent_pos()$/;"	f
GetClojureIndent	plugged/vim-polyglot/indent/clojure.vim	/^	function! GetClojureIndent()$/;"	f
b:undo_indent	plugged/vim-polyglot/indent/clojure.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
b:eelixir_subtype_indentexpr	plugged/vim-polyglot/indent/eelixir.vim	/^let b:eelixir_subtype_indentexpr = &l:indentexpr$/;"	v
b:did_indent	plugged/vim-polyglot/indent/eelixir.vim	/^let b:did_indent = 1$/;"	v
GetEelixirIndent	plugged/vim-polyglot/indent/eelixir.vim	/^function! GetEelixirIndent(...)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/html.vim	/^let b:undo_indent = "setlocal inde< indk<"$/;"	v
b:hi_indent	plugged/vim-polyglot/indent/html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:tagname	plugged/vim-polyglot/indent/html.vim	/^let s:tagname = '\\w\\+\\(-\\w\\+\\)*'$/;"	v
HtmlIndent_CheckUserSettings	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f
b:hi_lasttick	plugged/vim-polyglot/indent/html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_newstate	plugged/vim-polyglot/indent/html.vim	/^let b:hi_newstate = {}$/;"	v
s:countonly	plugged/vim-polyglot/indent/html.vim	/^let s:countonly = 0$/;"	v
s:indent_tags	plugged/vim-polyglot/indent/html.vim	/^let s:indent_tags = {}$/;"	v
s:endtags	plugged/vim-polyglot/indent/html.vim	/^let s:endtags = [0,0,0,0,0,0,0]   " long enough for the highest index$/;"	v
AddITags	plugged/vim-polyglot/indent/html.vim	/^func! s:AddITags(tags, taglist)$/;"	f
RemoveITags	plugged/vim-polyglot/indent/html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f
AddBlockTag	plugged/vim-polyglot/indent/html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f
HtmlIndent_IsOpenTag	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f
get_tag	plugged/vim-polyglot/indent/html.vim	/^func! s:get_tag(tagname)$/;"	f
CountITags	plugged/vim-polyglot/indent/html.vim	/^func! s:CountITags(text)$/;"	f
CountTagsAndState	plugged/vim-polyglot/indent/html.vim	/^func! s:CountTagsAndState(text)$/;"	f
CheckTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckTag(itag)$/;"	f
CheckBlockTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f
CheckCustomTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckCustomTag(ctag)$/;"	f
GetScriptType	plugged/vim-polyglot/indent/html.vim	/^func! s:GetScriptType(str)$/;"	f
FreshState	plugged/vim-polyglot/indent/html.vim	/^func! s:FreshState(lnum)$/;"	f
Alien2	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien2()$/;"	f
Alien3	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien3()$/;"	f
Alien4	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien4()$/;"	f
CSSIndent	plugged/vim-polyglot/indent/html.vim	/^func! s:CSSIndent()$/;"	f
CssUnfinished	plugged/vim-polyglot/indent/html.vim	/^func! s:CssUnfinished(text)$/;"	f
CssFirstUnfinished	plugged/vim-polyglot/indent/html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f
CssPrevNonComment	plugged/vim-polyglot/indent/html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f
HtmlIndent_CountBraces	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f
Alien5	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien5()$/;"	f
Alien6	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien6()$/;"	f
HtmlIndent_FindTagStart	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f
HtmlIndent_FindStartTag	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f
HtmlIndent_FindTagEnd	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f
InsideTag	plugged/vim-polyglot/indent/html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f
HtmlIndent	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/bst.vim	/^let b:did_indent = 1$/;"	v
prevgood	plugged/vim-polyglot/indent/bst.vim	/^function! s:prevgood(lnum)$/;"	f
strip	plugged/vim-polyglot/indent/bst.vim	/^function! s:strip(lnum)$/;"	f
count	plugged/vim-polyglot/indent/bst.vim	/^function! s:count(string,char)$/;"	f
GetBstIndent	plugged/vim-polyglot/indent/bst.vim	/^function! GetBstIndent(lnum) abort$/;"	f
s:save_cpo	plugged/vim-polyglot/indent/ansible.vim	/^let s:save_cpo = &cpo$/;"	v
s:comment	plugged/vim-polyglot/indent/ansible.vim	/^let s:comment = '\\v^\\s*#' " # comment$/;"	v
s:array_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:array_entry = '\\v^\\s*-\\s' " - foo$/;"	v
s:named_module_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:named_module_entry = '\\v^\\s*-\\s*(name|hosts|role):\\s*\\S' " - name: 'do stuff'$/;"	v
s:dictionary_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:dictionary_entry = '\\v^\\s*[^:-]+:\\s*$' " with_items:$/;"	v
s:key_value	plugged/vim-polyglot/indent/ansible.vim	/^let s:key_value = '\\v^\\s*[^:-]+:\\s*\\S' " apt: name=package$/;"	v
s:scalar_value	plugged/vim-polyglot/indent/ansible.vim	/^let s:scalar_value = '\\v:\\s*[>|\\|]\\s*$' " shell: >$/;"	v
GetAnsibleIndent	plugged/vim-polyglot/indent/ansible.vim	/^function GetAnsibleIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/cmake.vim	/^let b:did_indent = 1$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
CMakeGetIndent	plugged/vim-polyglot/indent/cmake.vim	/^fun! CMakeGetIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/crystal.vim	/^let b:did_indent = 1$/;"	v
g:crystal_indent_assignment_style	plugged/vim-polyglot/indent/crystal.vim	/^  let g:crystal_indent_assignment_style = 'hanging'$/;"	v
g:crystal_indent_block_style	plugged/vim-polyglot/indent/crystal.vim	/^  let g:crystal_indent_block_style = 'expression'$/;"	v
s:sw	plugged/vim-polyglot/indent/crystal.vim	/^  let s:sw = function('shiftwidth')$/;"	v
sw	plugged/vim-polyglot/indent/crystal.vim	/^  function! s:sw()$/;"	f
GetCrystalIndent	plugged/vim-polyglot/indent/crystal.vim	/^function! GetCrystalIndent(...) abort$/;"	f
b:did_indent	plugged/vim-polyglot/indent/go.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/go.vim	/^let s:cpo_save = &cpo$/;"	v
GoIndent	plugged/vim-polyglot/indent/go.vim	/^function! GoIndent(lnum) abort$/;"	f
b:did_indent	plugged/vim-polyglot/indent/graphql.vim	/^  let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/graphql.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:pair_skip_expr	plugged/vim-polyglot/indent/graphql.vim	/^let s:pair_skip_expr =$/;"	v
InString	plugged/vim-polyglot/indent/graphql.vim	/^function s:InString(lnum, col)$/;"	f
GetGraphQLIndent	plugged/vim-polyglot/indent/graphql.vim	/^function GetGraphQLIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/nginx.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/plantuml.vim	/^let b:did_indent = 1$/;"	v
s:decIndent	plugged/vim-polyglot/indent/plantuml.vim	/^let s:decIndent = '^\\s*\\%(end\\|else\\|}\\)'$/;"	v
GetPlantUMLIndent	plugged/vim-polyglot/indent/plantuml.vim	/^function! GetPlantUMLIndent(...) abort$/;"	f
insidePlantUMLTags	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:insidePlantUMLTags(lnum) abort$/;"	f
listSyntax	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:listSyntax(syntaxKeyword) abort$/;"	f
typeKeywordIncPattern	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:typeKeywordIncPattern() abort$/;"	f
getIncIndent	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:getIncIndent() abort$/;"	f
b:did_indent	plugged/vim-polyglot/indent/pov.vim	/^let b:did_indent = 1$/;"	v
MatchCount	plugged/vim-polyglot/indent/pov.vim	/^function! s:MatchCount(line, rexp)$/;"	f
GetPoVRayIndent	plugged/vim-polyglot/indent/pov.vim	/^function GetPoVRayIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/meson.vim	/^let b:did_indent = 1$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/meson.vim	/^let s:keepcpo= &cpo$/;"	v
s:maxoff	plugged/vim-polyglot/indent/meson.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
GetMesonIndent	plugged/vim-polyglot/indent/meson.vim	/^function GetMesonIndent(lnum)$/;"	f
b:tsx_ts_indentexpr	plugged/vim-polyglot/indent/typescriptreact.vim	/^let b:tsx_ts_indentexpr = &indentexpr$/;"	v
s:did_indent	plugged/vim-polyglot/indent/typescriptreact.vim	/^  let s:did_indent=b:did_indent$/;"	v
b:did_indent	plugged/vim-polyglot/indent/typescriptreact.vim	/^  let b:did_indent=s:did_indent$/;"	v
s:endtag	plugged/vim-polyglot/indent/typescriptreact.vim	/^let s:endtag = '^\\s*\\\/\\?>\\s*;\\='$/;"	v
s:startexp	plugged/vim-polyglot/indent/typescriptreact.vim	/^let s:startexp = '[\\{\\(]\\s*$'$/;"	v
SynSOL	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynSOL(lnum)$/;"	f
SynEOL	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynEOL(lnum)$/;"	f
SynAttrXMLish	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynAttrXMLish(synattr)$/;"	f
SynXMLish	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynXMLish(syns)$/;"	f
SynTSXBlockEnd	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynTSXBlockEnd(syns)$/;"	f
SynTSXDepth	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynTSXDepth(syns)$/;"	f
SynTSXContinues	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! s:SynTSXContinues(cursyn, prevsyn)$/;"	f
GetTsxIndent	plugged/vim-polyglot/indent/typescriptreact.vim	/^fu! GetTsxIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/teraterm.vim	/^let b:did_indent = 1$/;"	v
GetTeraTermIndent	plugged/vim-polyglot/indent/teraterm.vim	/^function! GetTeraTermIndent(lnum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/yacc.vim	/^let b:did_indent = 1$/;"	v
GetYaccIndent	plugged/vim-polyglot/indent/yacc.vim	/^function GetYaccIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/indent/cobol.vim	/^let b:did_indent = 1$/;"	v
s:skip	plugged/vim-polyglot/indent/cobol.vim	/^let s:skip = 'getline(".") =~ "^.\\\\{6\\\\}[*\/$-]\\\\|\\"[^\\"]*\\""'$/;"	v
prevgood	plugged/vim-polyglot/indent/cobol.vim	/^function! s:prevgood(lnum)$/;"	f
stripped	plugged/vim-polyglot/indent/cobol.vim	/^function! s:stripped(lnum)$/;"	f
optionalblock	plugged/vim-polyglot/indent/cobol.vim	/^function! s:optionalblock(lnum,ind,blocks,clauses)$/;"	f
GetCobolIndent	plugged/vim-polyglot/indent/cobol.vim	/^function! GetCobolIndent(lnum) abort$/;"	f
b:did_indent	plugged/vim-polyglot/indent/vlang.vim	/^let b:did_indent = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/vlang.vim	/^let s:cpo_save = &cpo$/;"	v
VlangIndent	plugged/vim-polyglot/indent/vlang.vim	/^function! VlangIndent(lnum) abort$/;"	f
b:did_indent	plugged/vim-polyglot/indent/moon.vim	/^let b:did_indent = 1$/;"	v
s:INDENT_AFTER_KEYWORD	plugged/vim-polyglot/indent/moon.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|with\\|elseif\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	plugged/vim-polyglot/indent/moon.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/moon.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	plugged/vim-polyglot/indent/moon.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/moon.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:OUTDENT_AFTER	plugged/vim-polyglot/indent/moon.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\)\\>'$/;"	v
s:COMPOUND_ASSIGNMENT	plugged/vim-polyglot/indent/moon.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|'$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/moon.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/moon.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\)\\>\\)\\@!'$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/moon.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:SYNTAX_STRING	plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_STRING = 'moon\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_COMMENT	plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_COMMENT = 'moon\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING_COMMENT	plugged/vim-polyglot/indent/moon.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
SyntaxName	plugged/vim-polyglot/indent/moon.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
IsComment	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsComment(linenum, col)$/;"	f
IsString	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsString(linenum, col)$/;"	f
IsCommentOrString	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
IsCommentLine	plugged/vim-polyglot/indent/moon.vim	/^function! s:IsCommentLine(linenum)$/;"	f
SmartSearch	plugged/vim-polyglot/indent/moon.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
ShouldSkip	plugged/vim-polyglot/indent/moon.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
MaxLookback	plugged/vim-polyglot/indent/moon.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
SkipExpr	plugged/vim-polyglot/indent/moon.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
SearchPair	plugged/vim-polyglot/indent/moon.vim	/^function! s:SearchPair(start, end)$/;"	f
GetMatch	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetMatch(curline)$/;"	f
GetPrevNormalLine	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
FindComment	plugged/vim-polyglot/indent/moon.vim	/^function! s:FindComment(linenum)$/;"	f
GetTrimmedLine	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
GetMoonIndent	plugged/vim-polyglot/indent/moon.vim	/^function! s:GetMoonIndent(curlinenum)$/;"	f
GetMoonIndent	plugged/vim-polyglot/indent/moon.vim	/^function! GetMoonIndent(curlinenum)$/;"	f
b:did_indent	plugged/vim-polyglot/indent/hamster.vim	/^let b:did_indent = 1$/;"	v
HamGetIndent	plugged/vim-polyglot/indent/hamster.vim	/^function HamGetIndent(lnum)$/;"	f
HamGetFreeIndent	plugged/vim-polyglot/indent/hamster.vim	/^function HamGetFreeIndent()$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mma.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mma.vim	/^let s:cpo_save = &cpo$/;"	v
RandomID	plugged/vim-polyglot/ftplugin/mma.vim	/^	function! RandomID()$/;"	f
Test	plugged/vim-polyglot/ftplugin/mma.vim	/^	function! Test()$/;"	f
b:did_8thplugin	plugged/vim-polyglot/ftplugin/8th.vim	/^let b:did_8thplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/config.vim	/^let s:browsefilter = "Bourne Shell Files (*.sh)\\t*.sh\\n" .$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/config.vim	/^let s:match_words = ""$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/config.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/config.vim	/^    let  b:browsefilter="Configure Scripts (configure.*, config.*)\\tconfigure*;config.*\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/config.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . b:undo_ftplugin$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pascal.vim	/^let b:did_ftplugin = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_ignorecase = 1 " (pascal is case-insensitive)$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words = '\\<\\%(begin\\|case\\|record\\|object\\|try\\)\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words .= ':\\<^\\s*\\%(except\\|finally\\)\\>:\\<end\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words .= ',\\<repeat\\>:\\<until\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pascal.vim	/^    let b:match_words .= ',\\<if\\>:\\<else\\>'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pascal.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
s:cposet	plugged/vim-polyglot/ftplugin/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fortran.vim	/^let b:did_ftplugin = 1$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
s:lmax	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:lmax = line("$")$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
s:ln	plugged/vim-polyglot/ftplugin/fortran.vim	/^    let s:ln=1$/;"	v
s:test	plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/ftplugin/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
s:ln	plugged/vim-polyglot/ftplugin/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notselect	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notselect = '\\%(\\<select\\s\\+\\)\\@<!'$/;"	v
s:notelse	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notelse = '\\%(\\<end\\s\\+\\|\\<else\\s\\+\\)\\@<!'$/;"	v
s:notprocedure	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let s:notprocedure = '\\%(\\s\\+procedure\\>\\)\\@!'$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:match_words =$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/fortran.vim	/^  let b:browsefilter = "Fortran Files (*.f;*.for;*.f77;*.f90;*.f95;*.f03;*.f08;*.fpp;*.ftn)\\t*.f;*.for;*.f77;*.f90;*.f95;*.f03;*.f08;*.fpp;*.ftn\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fortran.vim	/^let b:undo_ftplugin = "setl fo< com< tw< cms< et< inc< sua<"$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
FormatRmd	plugged/vim-polyglot/ftplugin/rmd.vim	/^function! FormatRmd()$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rmd.vim	/^let b:did_ftplugin = 1$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rrst\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rmd.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
s:PS	plugged/vim-polyglot/ftplugin/purescript.vim	/^let s:PS = []$/;"	v
InitPureScript	plugged/vim-polyglot/ftplugin/purescript.vim	/^fun! InitPureScript()$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eterm.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eterm.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ion.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.htm*\\n" .$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let s:match_words = ""$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let s:match_words = b:match_words$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^  let b:match_words =$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^    let  b:browsefilter="ASP Files (*.asp)\\t*.asp\\n" . s:browsefilter$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/aspvbs.vim	/^let b:undo_ftplugin = "unlet! b:match_words b:match_ignorecase b:browsefilter | " . s:undo_ftplugin$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nroff.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nroff.vim	/^let b:undo_ftplugin = 'setlocal commentstring< comments< sections<'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xslt.vim	/^let b:did_ftplugin = 1$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/xslt.vim	/^    let  b:browsefilter="XSLT Files (*.xsl,*.xslt)\\t*.xsl;*.xslt\\n" . b:browsefilter$/;"	v
b:loaded_mustache_handlebars	plugged/vim-polyglot/ftplugin/handlebars.vim	/^let b:loaded_mustache_handlebars = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/handlebars.vim	/^let s:cpo_save = &cpo$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  let b:match_words = b:match_words$/;"	v
{{{	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{{ {{{}}}<left><left><left>$/;"	m
{{	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{ {{}}<left><left>$/;"	m
{{!	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{! {{!}}<left><left>$/;"	m
{{<	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{< {{<}}<left><left>$/;"	m
{{>	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{> {{>}}<left><left>$/;"	m
{{#	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{# {{#}}<cr>{{\/}}<up><left><left>$/;"	m
{{if	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{if {{#if }}<cr>{{\/if}}<up><left>$/;"	m
{{ife	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  inoremap <buffer> {{ife {{#if }}<cr>{{else}}<cr>{{\/if}}<up><up><left>$/;"	m
sectionmovement	plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:sectionmovement(pattern,flags,mode,count)$/;"	f
[[	plugged/vim-polyglot/ftplugin/handlebars.vim	/^nnoremap <silent> <buffer> [[ :<C-U>call <SID>sectionmovement('{{','b','n',v:count1)<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/handlebars.vim	/^nnoremap <silent> <buffer> ]] :<C-U>call <SID>sectionmovement('{{','' ,'n',v:count1)<CR>$/;"	m
g:mustache_operators	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  let g:mustache_operators = 1$/;"	v
ie	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  onoremap <silent> <buffer> ie :<C-U>call <SID>wrap_inside()<CR>$/;"	m
ae	plugged/vim-polyglot/ftplugin/handlebars.vim	/^  onoremap <silent> <buffer> ae :<C-U>call <SID>wrap_around()<CR>$/;"	m
wrap_around	plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:wrap_around()$/;"	f
wrap_inside	plugged/vim-polyglot/ftplugin/handlebars.vim	/^function! s:wrap_inside()$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fvwm.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fvwm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/reva.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/ant.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ant.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ant.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ant.vim	/^    let b:browsefilter = "Build Files (build.xml)\\tbuild.xml\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ant.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
[[	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [[ :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'bW')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ]] :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'W')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [] :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'bW')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ][ :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'W')<CR>$/;"	m
b:dhall_ftplugin	plugged/vim-polyglot/ftplugin/dhall.vim	/^let b:dhall_ftplugin = 1$/;"	v
StripTrailingWhitespace	plugged/vim-polyglot/ftplugin/dhall.vim	/^function! StripTrailingWhitespace()$/;"	f
DhallFormat	plugged/vim-polyglot/ftplugin/dhall.vim	/^function! DhallFormat()$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/readline.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/readline.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/readline.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
s:comments	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:comments = ''$/;"	v
s:shiftwidth	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:shiftwidth = ''$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:undo_ftplugin = ''$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:browsefilter = 'All Files (*.*)\\t*.*\\n'$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let s:match_words = ''$/;"	v
s:comments	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:comments = escape(&comments, ' \\')$/;"	v
s:shiftwidth	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:shiftwidth = &shiftwidth$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^    let s:match_words = b:match_words$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . ' | ' . s:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:browsefilter='eCrystal Files (*.ecr)\\t*.ecr\\n' . s:browsefilter$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:match_words = s:match_words$/;"	v
b:AutoPairs	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^  let b:AutoPairs = {$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ecrystal.vim	/^let b:undo_ftplugin = 'setlocal comments< commentstring< shiftwidth<' .$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^let g:tagbar_type_puppet = {$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.sro = '__'$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.kind2scope = {$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^    let g:tagbar_type_puppet.scope2kind = {$/;"	v
g:tagbar_type_puppet	plugged/vim-polyglot/ftplugin/puppet_tagbar.vim	/^let g:tagbar_type_puppet.deffile = puppet#ctags#OptionFile()$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hgcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hgcommit.vim	/^let b:undo_ftplugin = 'setl modeline<'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/java.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/java.vim	/^let s:save_cpo = &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/java.vim	/^    let  b:browsefilter="Java Files (*.java)\\t*.java\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/java.vim	/^let b:undo_ftplugin = "setlocal suffixes< suffixesadd<" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/llvm.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:match_words = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:match_words = b:match_words$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^  let b:browsefilter="Pug Files (*.pug)\\t*.pug\\n" . s:browsefilter$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^  let b:match_words = s:match_words$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sass.vim	/^  let b:undo_ftplugin .= ' isk<'$/;"	v
SassIncludeExpr	plugged/vim-polyglot/ftplugin/sass.vim	/^function! SassIncludeExpr(file) abort$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
b:rust_set_style	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_style = 1$/;"	v
b:rust_original_delimitMate_excluded_regions	plugged/vim-polyglot/ftplugin/rust.vim	/^        let b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions$/;"	v
rust	plugged/vim-polyglot/ftplugin/rust.vim	/^    augroup rust.vim.DelimitMate$/;"	a
b:AutoPairs	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:AutoPairs = {'(':')', '[':']', '{':'}','"':'"', '`':'`'}$/;"	v
b:rust_set_foldmethod	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_foldmethod=1$/;"	v
b:rust_set_conceallevel	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_set_conceallevel=1$/;"	v
[[	plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>$/;"	m
RustRun	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)$/;"	c
RustExpand	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Expand(<bang>0, <q-args>)$/;"	c
RustEmitIr	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)$/;"	c
RustEmitAsm	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)$/;"	c
RustPlay	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)$/;"	c
RustFmt	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar -buffer RustFmt call rustfmt#Format()$/;"	c
RustFmtRange	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -range -buffer RustFmtRange call rustfmt#FormatRange(<line1>, <line2>)$/;"	c
RustInfo	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar RustInfo call rust#debugging#Info()$/;"	c
RustInfoToClipboard	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar RustInfoToClipboard call rust#debugging#InfoToClipboard()$/;"	c
RustInfoToFile	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -bar -nargs=1 RustInfoToFile call rust#debugging#InfoToFile(<f-args>)$/;"	c
RustTest	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -buffer -nargs=* -count -bang RustTest call rust#Test(<q-mods>, <count>, <bang>0, <q-args>)$/;"	c
b:rust_last_rustc_args	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_last_rustc_args = []$/;"	v
b:rust_last_args	plugged/vim-polyglot/ftplugin/rust.vim	/^    let b:rust_last_args = []$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:undo_ftplugin = "$/;"	v
rust	plugged/vim-polyglot/ftplugin/rust.vim	/^augroup rust.vim.PreWrite$/;"	a
b:match_skip	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:match_skip = 's:comment\\|string\\|rustCharacter\\|rustArrow'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sexplib.vim	/^let b:did_ftplugin=1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:browsefilter = "Java Files (*.java)\\t*.java\\n" .$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^let s:match_words = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:match_words = b:match_words$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let s:match_words = b:match_words . ',' . s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let b:match_words = s:match_words$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/jsp.vim	/^    let  b:browsefilter="JSP Files (*.jsp)\\t*.jsp\\n" . s:browsefilter$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/jsp.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fetchmail.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/puppet.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/puppet.vim	/^let b:undo_ftplugin = "$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:save_cpo = &cpo$/;"	v
SQL_GetList	plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_GetList(ArgLead, CmdLine, CursorPos)$/;"	f
SQL_SetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_SetType(name)$/;"	f
SQLSetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    command! -nargs=* -complete=custom,SQL_GetList SQLSetType :call SQL_SetType(<q-args>)$/;"	c
SQL_GetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    function SQL_GetType()$/;"	f
SQLGetType	plugged/vim-polyglot/ftplugin/sql.vim	/^    command! -nargs=0 SQLGetType :call SQL_GetType()$/;"	c
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:undo_ftplugin = "setl comments< formatoptions< define< omnifunc<" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:did_ftplugin     = 1$/;"	v
b:current_ftplugin	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:current_ftplugin = 'sql'$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:browsefilter = "SQL Files (*.sql)\\t*.sql\\n" .$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:when_no_matched_or_others	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:when_no_matched_or_others = '\\%(\\<when\\>\\%(\\s\\+\\%(\\%(\\<not\\>\\s\\+\\)\\?<matched\\>\\)\\|\\<others\\>\\)\\@!\\)'$/;"	v
s:or_replace	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:or_replace = '\\%(or\\s\\+replace\\s\\+\\)\\?'$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:match_words = &matchpairs .$/;"	v
]]	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> ]] :call search('\\c^\\s*begin\\>', 'W' )<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> [[ :call search('\\c^\\s*begin\\>', 'bW' )<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> ][ :call search('\\c^\\s*end\\W*$', 'W' )<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/sql.vim	/^nnoremap <buffer> <silent> [] :call search('\\c^\\s*end\\W*$', 'bW' )<CR>$/;"	m
g:ftplugin_sql_statements	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_statements = 'create'$/;"	v
g:ftplugin_sql_objects	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_objects = 'function,procedure,event,' .$/;"	v
g:ftplugin_sql_omni_key	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key = '<C-C>'$/;"	v
g:ftplugin_sql_omni_key_right	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_right = '<Right>'$/;"	v
g:ftplugin_sql_omni_key_left	plugged/vim-polyglot/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_left = '<Left>'$/;"	v
s:ftplugin_sql_objects	plugged/vim-polyglot/ftplugin/sql.vim	/^let s:ftplugin_sql_objects =$/;"	v
b:comment_leader	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_leader = '\\(--\\\\|\\\/\\\/\\\\|\\*\\\\|\\\/\\*\\\\|\\*\\\/\\)'$/;"	v
b:comment_start	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_start  = '^\\(\\s*'.b:comment_leader.'.*\\n\\)\\@<!'.$/;"	v
b:comment_end	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_end = '\\(^\\s*'.b:comment_leader.'.*\\n\\)'.$/;"	v
b:comment_jump_over	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_jump_over  = "call search('".$/;"	v
b:comment_skip_back	plugged/vim-polyglot/ftplugin/sql.vim	/^let b:comment_skip_back  = "call search('".$/;"	v
b:sql_compl_savefunc	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:sql_compl_savefunc = &omnifunc$/;"	v
b:sql_vis	plugged/vim-polyglot/ftplugin/sql.vim	/^    let b:sql_vis = 1$/;"	v
regex_extra	plugged/vim-polyglot/ftplugin/sql.vim	/^        let regex_extra = ''$/;"	v
regex_extra	plugged/vim-polyglot/ftplugin/sql.vim	/^                let regex_extra = '\\\\w*'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/bdf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/bdf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/spec.vim	/^let s:cpo_save = &cpo$/;"	v
<LocalLeader>c	plugged/vim-polyglot/ftplugin/spec.vim	/^		map <buffer> <LocalLeader>c <Plug>SpecChangelog$/;"	m
<Plug>SpecChangelog	plugged/vim-polyglot/ftplugin/spec.vim	/^       noremap <buffer> <unique> <script> <Plug>SpecChangelog :call <SID>SpecChangelog("")<CR>$/;"	m
GetRelVer	plugged/vim-polyglot/ftplugin/spec.vim	/^	function! s:GetRelVer()$/;"	f
SpecChangelog	plugged/vim-polyglot/ftplugin/spec.vim	/^	function s:SpecChangelog(format)$/;"	f
ParseRpmVars	plugged/vim-polyglot/ftplugin/spec.vim	/^    function s:ParseRpmVars(str, strline)$/;"	f
b:match_ignorecase	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:match_words =$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/spec.vim	/^let b:undo_ftplugin = "unlet! b:match_ignorecase b:match_words"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tidy.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/tidy.vim	/^  let b:browsefilter = "HTML Tidy Files (tidyrc, .tidyrc, tidy.conf)\\ttidyrc;.tidyrc;tidy.conf\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/tidy.vim	/^let b:undo_ftplugin = "setl fo< com< cms<" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/omake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xf86conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/services.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/services.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/services.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< efm< tw< et< sts< sw< | if has('vms') | setl isk< | endif"$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:match_words = '\\(^\\s*\\)\\@<=\\(MODULE\\|CLASS\\|INTERFACE\\|BITS\\|ENUM\\|SHARED\\|FUNC\\|REPLACE\\|DEFINE\\|PROC\\|EQUAL\\|MAIN\\|IF\\|GENERATE_IF\\|WHILE\\|REPEAT\\|WITH\\|DO\\|FOR\\|SWITCH\\|TRY\\)\\>\\|{\\s*$:\\(^\\s*\\)\\@<=\\(ELSE\\|ELSEIF\\|GENERATE_ELSE\\|GENERATE_ELSEIF\\|CATCH\\|FINALLY\\)\\>:\\(^\\s*\\)\\@<=\\(}\\|\\<UNTIL\\>\\)'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/zimbu.vim	/^let b:match_skip = 's:comment\\|string\\|zimbuchar'$/;"	v
GCUpperDot	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperDot(what)$/;"	f
GCUpper	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpper(what)$/;"	f
GCUpperSpace	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperSpace(what)$/;"	f
GCUpperCommon	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! GCUpperCommon(what)$/;"	f
[[	plugged/vim-polyglot/ftplugin/zimbu.vim	/^  nnoremap <silent> <buffer> [[ m`:call ZimbuGoStartBlock()<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/zimbu.vim	/^  nnoremap <silent> <buffer> ]] m`:call ZimbuGoEndBlock()<CR>$/;"	m
ZimbuGoStartBlock	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! ZimbuGoStartBlock()$/;"	f
ZimbuGoEndBlock	plugged/vim-polyglot/ftplugin/zimbu.vim	/^func! ZimbuGoEndBlock()$/;"	f
s:save_cpo	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl def< cms< com< "$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/muttrc.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/muttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/pony.vim	/^let s:cpo_save = &cpo$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_skip = 's:Comment\\|String\\|Character\\|CaseGuard'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:match_words = '\\v<%(ifdef|if|match|while|for|repeat|try|with|recover|object|lambda|iftype)>\\m:\\v<%(then|elseif|else|until|do|in|elseiftype)>|\\|\\m:\\<end\\>,(:),\\[:\\],{:}'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:undo_ftplugin = 'set comments< commentstring< formatoptions< path< include< includeexpr< define< isident< iskeyword< suffixesadd< matchpairs<'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pony.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gleam.vim	/^let b:did_ftplugin = 1$/;"	v
gleam	plugged/vim-polyglot/ftplugin/gleam.vim	/^augroup gleam.vim$/;"	a
b:did_ftplugin	plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/loginaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xmodmap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tcl.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/tcl.vim	/^let s:cpo_save = &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/tcl.vim	/^    let b:browsefilter = "Tcl Source Files (.tcl)\\t*.tcl\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/tcl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dockerfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dockerfile.vim	/^let b:undo_ftplugin = "setl commentstring<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/conf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/conf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lisp.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/lisp.vim	/^let b:undo_ftplugin = "setlocal comments< define< formatoptions< iskeyword< lisp< commentstring<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nix.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rpl.vim	/^let b:undo_ftplugin = "setlocal fo< comments<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/perl.vim	/^let s:save_cpo = &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = ".,,"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk< isf< kp< path<" .$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:match_skip = 's:comment\\|string\\|perlQQ\\|perlShellCommand\\|perlHereDoc\\|perlSubstitution\\|perlTranslation\\|perlMatch\\|perlFormatField'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:match_words = '\\<if\\>:\\<elsif\\>:\\<else\\>'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/terminfo.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terminfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/scala.vim	/^let b:did_ftplugin = 1$/;"	v
scala#SanitizeDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#SanitizeDirForFuzzyFinder(dir)$/;"	f
scala#GetDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetDirForFuzzyFinder(from, addon)$/;"	f
scala#GetTestDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetTestDirForFuzzyFinder(from)$/;"	f
scala#GetMainDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetMainDirForFuzzyFinder(from)$/;"	f
scala#GetRootDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetRootDirForFuzzyFinder(from)$/;"	f
<Leader>ft	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>ft :FufFile <c-r>=scala#GetTestDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>fs	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fs :FufFile <c-r>=scala#GetMainDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>fr	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fr :FufFile <c-r>=scala#GetRootDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
CreateOrExpression	plugged/vim-polyglot/ftplugin/scala.vim	/^function! s:CreateOrExpression(keywords)$/;"	f
NextSection	plugged/vim-polyglot/ftplugin/scala.vim	/^function! s:NextSection(backwards)$/;"	f
]]	plugged/vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> ]] :call <SID>NextSection(0)<cr>$/;"	m
[[	plugged/vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> [[ :call <SID>NextSection(1)<cr>$/;"	m
b:did_ftplugin	plugged/vim-polyglot/ftplugin/zig.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_orig	plugged/vim-polyglot/ftplugin/zig.vim	/^let s:cpo_orig = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/zig.vim	/^let b:undo_ftplugin =$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mrxvtrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mrxvtrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/manconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/manconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tablegen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sshconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hcl.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/hcl.vim	/^let s:save_cpo = &cpo$/;"	v
s:delims	plugged/vim-polyglot/ftplugin/hcl.vim	/^let s:delims = { 'left': '#' }$/;"	v
g:NERDDelimiterMap	plugged/vim-polyglot/ftplugin/hcl.vim	/^        let g:NERDDelimiterMap.hcl = s:delims$/;"	v
g:NERDCustomDelimiters	plugged/vim-polyglot/ftplugin/hcl.vim	/^        let g:NERDCustomDelimiters.hcl = s:delims$/;"	v
g:NERDCustomDelimiters	plugged/vim-polyglot/ftplugin/hcl.vim	/^    let g:NERDCustomDelimiters = { 'hcl': s:delims }$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hcl.vim	/^let b:undo_ftplugin = ""$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
g:ruby_version_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
query_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:query_path(root) abort$/;"	f
build_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:build_path(path) abort$/;"	f
s:version_file	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
b:ruby_version	plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
g:ruby_version_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
s:ruby_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:ruby_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
g:ruby_default_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_default_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
s:ruby_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl inc= sua= path= tags= fo< com< cms< kp="$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= ' | setl sw< sts< et<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= "| setl bexpr="$/;"	v
map	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:map(mode, flags, map) abort$/;"	f
<Plug><ctag>	plugged/vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><ctag> substitute(RubyCursorTag(),'^$',"\\022\\027",'')$/;"	m
<Plug><cfile>	plugged/vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cfile> substitute(RubyCursorFile(),'^$',"\\022\\006",'')$/;"	m
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin .= "| sil! cunmap <buffer> <Plug><ctag>| sil! cunmap <buffer> <Plug><cfile>"$/;"	v
<SID>:	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>:  :<C-U>$/;"	m
<SID>c:	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>c: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
[m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','n')<CR>$/;"	m
]m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','n')<CR>$/;"	m
[M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','n')<CR>$/;"	m
]M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','n')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['rubyModule','rubyClass'],'b','n')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['rubyModule','rubyClass'],'','n')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass'],'b','n')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass'],'','n')<CR>$/;"	m
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
im	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
am	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
iM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
aM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
<SID>tagzv	plugged/vim-polyglot/ftplugin/ruby.vim	/^  cmap <buffer><script><expr> <SID>tagzv &foldopen =~# 'tag' ? '<Bar>norm! zv' : ''$/;"	m
g:did_ruby_ftplugin_functions	plugged/vim-polyglot/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
RubyBalloonexpr	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyBalloonexpr() abort$/;"	f
searchsyn	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:searchsyn(pattern, syn, flags, mode) abort$/;"	f
synid	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:synid() abort$/;"	f
wrap_i	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward) abort$/;"	f
wrap_a	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward) abort$/;"	f
RubyCursorIdentifier	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorIdentifier() abort$/;"	f
RubyCursorTag	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorTag() abort$/;"	f
RubyCursorFile	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorFile() abort$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ld.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/ld.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ld.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ls.vim	/^let b:did_ftplugin = 1$/;"	v
livescript_compiler	plugged/vim-polyglot/ftplugin/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
LiveScriptCompileResetVars	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileResetVars()$/;"	f
LiveScriptCompileClose	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileClose()$/;"	f
LiveScriptCompileUpdate	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileUpdate(startline, endline)$/;"	f
LiveScriptCompileWatchUpdate	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileWatchUpdate()$/;"	f
LiveScriptCompile	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompile(startline, endline, args)$/;"	f
LiveScriptCompileComplete	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileComplete(arg, cmdline, cursor)$/;"	f
LiveScriptCompile	plugged/vim-polyglot/ftplugin/ls.vim	/^\\        LiveScriptCompile call s:LiveScriptCompile(<line1>, <line2>, <q-args>)$/;"	c
LiveScriptRun	plugged/vim-polyglot/ftplugin/ls.vim	/^command! -range=% -bar LiveScriptRun <line1>,<line2>:w !lsc -sp$/;"	c
idris_response	plugged/vim-polyglot/ftplugin/idris2.vim	/^let idris_response = 0$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/idris2.vim	/^let b:did_ftplugin = 1$/;"	v
currentQueryObject	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! s:currentQueryObject()$/;"	f
IdrisCommand	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! s:IdrisCommand(...)$/;"	f
IdrisDocFold	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisDocFold(lineNum)$/;"	f
IdrisFold	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisFold(lineNum)$/;"	f
IdrisResponseWin	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisResponseWin()$/;"	f
IdrisHideResponseWin	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisHideResponseWin()$/;"	f
IdrisShowResponseWin	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowResponseWin()$/;"	f
IWrite	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IWrite(str)$/;"	f
IdrisReload	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisReload(q)$/;"	f
IdrisReloadToLine	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisReloadToLine(cline)$/;"	f
IdrisShowType	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowType()$/;"	f
IdrisShowDoc	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisShowDoc()$/;"	f
IdrisProofSearch	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisProofSearch(hint)$/;"	f
IdrisGenerateDef	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisGenerateDef()$/;"	f
IdrisMakeLemma	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeLemma()$/;"	f
IdrisRefine	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisRefine()$/;"	f
IdrisAddMissing	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisAddMissing()$/;"	f
IdrisCaseSplit	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisCaseSplit()$/;"	f
IdrisMakeWith	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeWith()$/;"	f
IdrisMakeCase	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisMakeCase()$/;"	f
IdrisAddClause	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisAddClause(proof)$/;"	f
IdrisEval	plugged/vim-polyglot/ftplugin/idris2.vim	/^function! IdrisEval()$/;"	f
<LocalLeader>t	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>t :call IdrisShowType()<ENTER>$/;"	m
<LocalLeader>r	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>r :call IdrisReload(0)<ENTER>$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>c :call IdrisCaseSplit()<ENTER>$/;"	m
<LocalLeader>a	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>a 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTER>w$/;"	m
<LocalLeader>d	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>d 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTER>w$/;"	m
<LocalLeader>b	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>b 0:call IdrisAddClause(0)<ENTER>$/;"	m
<LocalLeader>m	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>m :call IdrisAddMissing()<ENTER>$/;"	m
<LocalLeader>md	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>md 0:call search(":")<ENTER>b:call IdrisAddClause(1)<ENTER>w$/;"	m
<LocalLeader>f	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>f :call IdrisRefine()<ENTER>$/;"	m
<LocalLeader>o	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>o :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>s	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>s :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>g	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>g :call IdrisGenerateDef()<ENTER>$/;"	m
<LocalLeader>p	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>p :call IdrisProofSearch(1)<ENTER>$/;"	m
<LocalLeader>l	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>l :call IdrisMakeLemma()<ENTER>$/;"	m
<LocalLeader>e	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>e :call IdrisEval()<ENTER>$/;"	m
<LocalLeader>w	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>w 0:call IdrisMakeWith()<ENTER>$/;"	m
<LocalLeader>mc	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>mc :call IdrisMakeCase()<ENTER>$/;"	m
<LocalLeader>i	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>i 0:call IdrisResponseWin()<ENTER>$/;"	m
<LocalLeader>h	plugged/vim-polyglot/ftplugin/idris2.vim	/^nnoremap <buffer> <silent> <LocalLeader>h :call IdrisShowDoc()<ENTER>$/;"	m
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ada.vim	/^let b:did_ftplugin = 45$/;"	v
s:cpoptions	plugged/vim-polyglot/ftplugin/ada.vim	/^let s:cpoptions = &cpoptions$/;"	v
<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#Jump_Tag ('', 'tjump')<cr>$/;"	m
g<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#Jump_Tag ('','stjump')<cr>$/;"	m
<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#List_Tag ()<cr>$/;"	m
g<C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#List_Tag ()<cr>$/;"	m
<C-N>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-N> <C-R>=ada#Completion("\\<lt>C-N>")<cr>$/;"	m
<C-P>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-P> <C-R>=ada#Completion("\\<lt>C-P>")<cr>$/;"	m
<C-X><C-]>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-X><C-]> <C-R>=<SID>ada#Completion("\\<lt>C-X>\\<lt>C-]>")<cr>$/;"	m
<bs>	plugged/vim-polyglot/ftplugin/ada.vim	/^      inoremap <silent> <unique> <buffer> <bs> <C-R>=ada#Insert_Backspace ()<cr>$/;"	m
s:notend	plugged/vim-polyglot/ftplugin/ada.vim	/^   let s:notend      = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ada.vim	/^   let b:match_words =$/;"	v
g:ada_default_compiler	plugged/vim-polyglot/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'decada'$/;"	v
g:ada_default_compiler	plugged/vim-polyglot/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'gnat'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/quake.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/quake.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/quake.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/abap.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/abap.vim	/^let s:cpo_save = &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/abap.vim	/^  let b:browsefilter = "ABAP Source Files (*.abap)\\t*.abap\\n" .$/;"	v
g:vim_json_syntax_conceal	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_conceal = 1$/;"	v
g:vim_json_warnings	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_warnings = 1$/;"	v
g:vim_json_syntax_concealcursor	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_concealcursor = ""$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/automake.vim	/^let s:cpo_save = &cpo$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vhdl.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let b:match_ignorecase=1$/;"	v
s:notend	plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/vhdl.vim	/^  let b:match_words =$/;"	v
CountWrapper	plugged/vim-polyglot/ftplugin/vhdl.vim	/^function! <SID>CountWrapper(cmd)$/;"	f
b:vhdl_explore	plugged/vim-polyglot/ftplugin/vhdl.vim	/^let b:vhdl_explore = '\\%(architecture\\|block\\|configuration\\|component\\|entity\\|function\\|package\\|procedure\\|process\\|record\\|units\\)'$/;"	v
[[	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[[ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\%(\\\\<end\\\\s\\\\+\\\\)\\\\@<!\\\\<".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%^","bW")')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>]] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\%(\\\\<end\\\\s\\\\+\\\\)\\\\@<!\\\\<".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%$","W")')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\<end\\\\s\\\\+".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%^","bW")')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/vhdl.vim	/^noremap  <buffer><silent>][ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\<end\\\\s\\\\+".b:vhdl_explore."\\\\>\\\\c\\\\<Bar>\\\\%$","W")')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[[ :<C-u>cal <SID>CountWrapper('[[')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>]] :<C-u>cal <SID>CountWrapper(']]')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[] :<C-u>cal <SID>CountWrapper('[]')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>][ :<C-u>cal <SID>CountWrapper('][')<CR>$/;"	m
b:did_ftplugin	plugged/vim-polyglot/ftplugin/treetop.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/treetop.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/treetop.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pinfo.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pinfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mail.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mail.vim	/^let b:undo_ftplugin = "setl modeline< tw< fo< comments<"$/;"	v
<LocalLeader>q	plugged/vim-polyglot/ftplugin/mail.vim	/^    vmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>q	plugged/vim-polyglot/ftplugin/mail.vim	/^    nmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<Plug>MailQuote	plugged/vim-polyglot/ftplugin/mail.vim	/^  vnoremap <buffer> <Plug>MailQuote :s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>MailQuote	plugged/vim-polyglot/ftplugin/mail.vim	/^  nnoremap <buffer> <Plug>MailQuote :.,$s\/^\/> \/<CR>:noh<CR>``$/;"	m
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rst.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rst.vim	/^let s:cpo_save = &cpo$/;"	v
g:rst_fold_enabled	plugged/vim-polyglot/ftplugin/rst.vim	/^  let g:rst_fold_enabled = 0$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rst.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
RstFold	plugged/vim-polyglot/ftplugin/rst.vim	/^  augroup RstFold$/;"	a
b:did_ftplugin	plugged/vim-polyglot/ftplugin/freebasic.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rrst.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rrst.vim	/^let s:cpo_save = &cpo$/;"	v
FormatRrst	plugged/vim-polyglot/ftplugin/rrst.vim	/^function! FormatRrst()$/;"	f
b:browsefilter	plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rrst\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rrst.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/group.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/group.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/group.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/diff.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/diff.vim	/^let b:undo_ftplugin = "setl modeline<"$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^let s:save_cpo = &cpo$/;"	v
g:tagbar_type_rust	plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^    let g:tagbar_type_rust = {$/;"	v
g:tagbar_type_rust	plugged/vim-polyglot/ftplugin/rust/tagbar.vim	/^    let g:tagbar_type_rust.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/rust.ctags'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/m4.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/m4.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/m4.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/crm.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/crm.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/crm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slpreg.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slpreg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/git.vim	/^let b:did_ftplugin = 1$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git[\\\/]worktrees[\\\/][^\\\/]\\+\\>')$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/logindefs.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/logindefs.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/make.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/make.vim	/^let b:undo_ftplugin = "setl et< sts< sw< fo< com< cms< inc<"$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/make.vim	/^  let b:match_words = '^ *ifn\\=\\(eq\\|def\\)\\>:^ *else\\(\\s\\+ifn\\=\\(eq\\|def\\)\\)\\=\\>:^ *endif\\>,\\<define\\>:\\<endef\\>,^!\\s*if\\(n\\=def\\)\\=\\>:^!\\s*else\\(if\\(n\\=def\\)\\=\\)\\=\\>:^!\\s*endif\\>'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mailcap.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mailcap.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mailcap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
CoffeeBufUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeBufNew	plugged/vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
SwitchWindow	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
ScratchBufBuild	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
ScratchBufUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
ParseCoffeeError	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
CoffeeCompileResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeWatchResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
CoffeeRunResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
CoffeeCompileClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeWatchClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
CoffeeRunClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
CoffeeCompileToBuf	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
CoffeeCompile	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeWatchUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
CoffeeWatch	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
CoffeeRun	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
CoffeeLint	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeComplete	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
CoffeeCompile	plugged/vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeWatch	plugged/vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
CoffeeRun	plugged/vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeLint	plugged/vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sysctl.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sysctl.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sensors.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sensors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^let b:did_ftplugin=1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^let b:undo_ftplugin = 'setlocal tw< foldmethod< foldexpr< foldtext<'$/;"	v
getField	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! s:getField(f, lnum)$/;"	f
DebControlFoldText	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! DebControlFoldText()$/;"	f
DebControlFold	plugged/vim-polyglot/ftplugin/debcontrol.vim	/^function! DebControlFold(l)$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/indent.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/indent.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/indent.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
g:eruby_default_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
s:lines	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\|\\.example\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:cfilemap	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:cfilemap = v:version >= 704 ? maparg('<Plug><cfile>', 'c', 0, 1) : {}$/;"	v
s:cfilemap	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:cfilemap = {}$/;"	v
s:cfilemap	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:cfilemap.rhs = "substitute(&l:inex =~# '\\\\<v:fname\\\\>' && len(expand('<cfile>')) ? eval(substitute(&l:inex, '\\\\<v:fname\\\\>', '\\\\=string(expand(\\"<cfile>\\"))', 'g')) : '', '^$', \\"\\\\022\\\\006\\",'')"$/;"	v
s:ctagmap	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:ctagmap = v:version >= 704 ? maparg('<Plug><ctag>', 'c', 0, 1) : {}$/;"	v
s:ctagmap	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:ctagmap = {}$/;"	v
s:include	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:include = &l:include$/;"	v
s:path	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:path = &l:path$/;"	v
s:suffixesadd	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:suffixesadd = &l:suffixesadd$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
ErubyAtCursor	plugged/vim-polyglot/ftplugin/eruby.vim	/^function! ErubyAtCursor() abort$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/wast.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/wast.vim	/^let b:undo_ftplugin = "setlocal comments< commentstring< formatoptions< iskeyword<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mp.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mp.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mp.vim	/^let b:undo_ftplugin = "setl com< cms< fo< sua< inc< def< ofu<"$/;"	v
g:omni_syntax_group_include_mp	plugged/vim-polyglot/ftplugin/mp.vim	/^let g:omni_syntax_group_include_mp = 'mf\\w\\+,mp\\w\\+'$/;"	v
g:omni_syntax_group_exclude_mp	plugged/vim-polyglot/ftplugin/mp.vim	/^let g:omni_syntax_group_exclude_mp = 'mfTodoComment'$/;"	v
FixBeginfigs	plugged/vim-polyglot/ftplugin/mp.vim	/^  command -nargs=0 FixBeginfigs call s:fix_beginfigs()$/;"	c
fix_beginfigs	plugged/vim-polyglot/ftplugin/mp.vim	/^  function! s:fix_beginfigs()$/;"	f
s:mp_regex	plugged/vim-polyglot/ftplugin/mp.vim	/^let s:mp_regex = {$/;"	v
move_around	plugged/vim-polyglot/ftplugin/mp.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f
[[	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false) <CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)  <CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false) <CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)  <CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false) <CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)  <CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false) <CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)  <CR>$/;"	m
[{	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false) <CR>$/;"	m
[{	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)  <CR>$/;"	m
]}	plugged/vim-polyglot/ftplugin/mp.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false) <CR>$/;"	m
]}	plugged/vim-polyglot/ftplugin/mp.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)  <CR>$/;"	m
b:match_ignorecase	plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_words =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/mp.vim	/^  let b:match_skip = 'synIDattr(synID(line("."), col("."), 1), "name")$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sudoers.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sudoers.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mf.vim	/^let b:undo_ftplugin = "setl com< cms< fo< sua< inc< def< ofu<"$/;"	v
g:omni_syntax_group_include_mf	plugged/vim-polyglot/ftplugin/mf.vim	/^let g:omni_syntax_group_include_mf = 'mf\\w\\+'$/;"	v
g:omni_syntax_group_exclude_mf	plugged/vim-polyglot/ftplugin/mf.vim	/^let g:omni_syntax_group_exclude_mf = 'mfTodoComment'$/;"	v
s:mp_regex	plugged/vim-polyglot/ftplugin/mf.vim	/^let s:mp_regex = {$/;"	v
move_around	plugged/vim-polyglot/ftplugin/mf.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f
[[	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false) <CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)  <CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false) <CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)  <CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false) <CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)  <CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false) <CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)  <CR>$/;"	m
[{	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false) <CR>$/;"	m
[{	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)  <CR>$/;"	m
]}	plugged/vim-polyglot/ftplugin/mf.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false) <CR>$/;"	m
]}	plugged/vim-polyglot/ftplugin/mf.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)  <CR>$/;"	m
b:match_ignorecase	plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_words =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/mf.vim	/^  let b:match_skip = 'synIDattr(synID(line("."), col("."), 1), "name")$/;"	v
idris_response	plugged/vim-polyglot/ftplugin/idris.vim	/^let idris_response = 0$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/idris.vim	/^let b:did_ftplugin = 1$/;"	v
currentQueryObject	plugged/vim-polyglot/ftplugin/idris.vim	/^function! s:currentQueryObject()$/;"	f
IdrisCommand	plugged/vim-polyglot/ftplugin/idris.vim	/^function! s:IdrisCommand(...)$/;"	f
IdrisDocFold	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisDocFold(lineNum)$/;"	f
IdrisFold	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisFold(lineNum)$/;"	f
IdrisResponseWin	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisResponseWin()$/;"	f
IdrisHideResponseWin	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisHideResponseWin()$/;"	f
IdrisShowResponseWin	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowResponseWin()$/;"	f
IWrite	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IWrite(str)$/;"	f
IdrisReload	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisReload(q)$/;"	f
IdrisReloadToLine	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisReloadToLine(cline)$/;"	f
IdrisShowType	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowType()$/;"	f
IdrisShowDoc	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisShowDoc()$/;"	f
IdrisProofSearch	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisProofSearch(hint)$/;"	f
IdrisMakeLemma	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeLemma()$/;"	f
IdrisRefine	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisRefine()$/;"	f
IdrisAddMissing	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisAddMissing()$/;"	f
IdrisCaseSplit	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisCaseSplit()$/;"	f
IdrisMakeWith	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeWith()$/;"	f
IdrisMakeCase	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisMakeCase()$/;"	f
IdrisAddClause	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisAddClause(proof)$/;"	f
IdrisEval	plugged/vim-polyglot/ftplugin/idris.vim	/^function! IdrisEval()$/;"	f
<LocalLeader>t	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>t :call IdrisShowType()<ENTER>$/;"	m
<LocalLeader>r	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>r :call IdrisReload(0)<ENTER>$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>c :call IdrisCaseSplit()<ENTER>$/;"	m
<LocalLeader>d	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>d 0:call search(":")<ENTER>b:call IdrisAddClause(0)<ENTER>w$/;"	m
<LocalLeader>b	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>b 0:call IdrisAddClause(0)<ENTER>$/;"	m
<LocalLeader>m	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>m :call IdrisAddMissing()<ENTER>$/;"	m
<LocalLeader>md	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>md 0:call search(":")<ENTER>b:call IdrisAddClause(1)<ENTER>w$/;"	m
<LocalLeader>f	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>f :call IdrisRefine()<ENTER>$/;"	m
<LocalLeader>o	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>o :call IdrisProofSearch(0)<ENTER>$/;"	m
<LocalLeader>p	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>p :call IdrisProofSearch(1)<ENTER>$/;"	m
<LocalLeader>l	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>l :call IdrisMakeLemma()<ENTER>$/;"	m
<LocalLeader>e	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>e :call IdrisEval()<ENTER>$/;"	m
<LocalLeader>w	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>w 0:call IdrisMakeWith()<ENTER>$/;"	m
<LocalLeader>mc	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>mc :call IdrisMakeCase()<ENTER>$/;"	m
<LocalLeader>i	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>i 0:call IdrisResponseWin()<ENTER>$/;"	m
<LocalLeader>h	plugged/vim-polyglot/ftplugin/idris.vim	/^nnoremap <buffer> <silent> <LocalLeader>h :call IdrisShowDoc()<ENTER>$/;"	m
s:levelRegexpDict	plugged/vim-polyglot/ftplugin/markdown.vim	/^let s:levelRegexpDict = {$/;"	v
s:headersRegexp	plugged/vim-polyglot/ftplugin/markdown.vim	/^let s:headersRegexp = '\\v^(#|.+\\n(\\=+|-+)$)'$/;"	v
GetHeaderLineNum	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderLineNum(...)$/;"	f
MoveToCurHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToCurHeader()$/;"	f
MoveToNextHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToNextHeader()$/;"	f
MoveToPreviousHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToPreviousHeader()$/;"	f
GetHeaderLevel	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderLevel(...)$/;"	f
GetHeaderList	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetHeaderList()$/;"	f
GetLevelOfHeaderAtLine	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetLevelOfHeaderAtLine(linenum)$/;"	f
MoveToParentHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToParentHeader()$/;"	f
GetParentHeaderLineNumber	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetParentHeaderLineNumber(...)$/;"	f
GetNextHeaderLineNumberAtLevel	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetNextHeaderLineNumberAtLevel(level, ...)$/;"	f
GetPreviousHeaderLineNumberAtLevel	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:GetPreviousHeaderLineNumberAtLevel(level, ...)$/;"	f
MoveToNextSiblingHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToNextSiblingHeader()$/;"	f
MoveToPreviousSiblingHeader	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MoveToPreviousSiblingHeader()$/;"	f
Toc	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:Toc(...)$/;"	f
InsertToc	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:InsertToc(format, ...)$/;"	f
SetexToAtx	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:SetexToAtx(line1, line2)$/;"	f
HeaderDecrease	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:HeaderDecrease(line1, line2, ...)$/;"	f
TableFormat	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:TableFormat()$/;"	f
VisMove	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:VisMove(f)$/;"	f
MapNormVis	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MapNormVis(rhs,lhs)$/;"	f
FindCornerOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindCornerOfSyntax(lnum, col, step)$/;"	f
FindNextSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindNextSyntax(lnum, col, name)$/;"	f
FindCornersOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindCornersOfSyntax(lnum, col)$/;"	f
FindRightOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindRightOfSyntax(lnum, col)$/;"	f
FindLeftOfSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:FindLeftOfSyntax(lnum, col)$/;"	f
Markdown_GetUrlForPosition	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:Markdown_GetUrlForPosition(lnum, col)$/;"	f
OpenUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:OpenUrlUnderCursor()$/;"	f
EditUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^    function s:EditUrlUnderCursor()$/;"	f
VersionAwareNetrwBrowseX	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:VersionAwareNetrwBrowseX(url)$/;"	f
MapNotHasmapto	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MapNotHasmapto(lhs, rhs)$/;"	f
<Plug>Markdown_OpenUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_OpenUrlUnderCursor :call <sid>OpenUrlUnderCursor()<cr>$/;"	m
<Plug>Markdown_EditUrlUnderCursor	plugged/vim-polyglot/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_EditUrlUnderCursor :call <sid>EditUrlUnderCursor()<cr>$/;"	m
HeaderDecrease	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderDecrease call s:HeaderDecrease(<line1>, <line2>)$/;"	c
HeaderIncrease	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderIncrease call s:HeaderDecrease(<line1>, <line2>, 1)$/;"	c
SetexToAtx	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -range=% SetexToAtx call s:SetexToAtx(<line1>, <line2>)$/;"	c
TableFormat	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer TableFormat call s:TableFormat()$/;"	c
Toc	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toc call s:Toc()$/;"	c
Toch	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toch call s:Toc('horizontal')$/;"	c
Tocv	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Tocv call s:Toc('vertical')$/;"	c
Toct	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer Toct call s:Toc('tab')$/;"	c
InsertToc	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertToc call s:InsertToc('bullets', <args>)$/;"	c
InsertNToc	plugged/vim-polyglot/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertNToc call s:InsertToc('numbers', <args>)$/;"	c
s:filetype_dict	plugged/vim-polyglot/ftplugin/markdown.vim	/^    let s:filetype_dict = {}$/;"	v
key	plugged/vim-polyglot/ftplugin/markdown.vim	/^        let key = matchstr(s:filetype, "[^=]*")$/;"	v
val	plugged/vim-polyglot/ftplugin/markdown.vim	/^        let val = matchstr(s:filetype, "[^=]*$")$/;"	v
s:filetype_dict	plugged/vim-polyglot/ftplugin/markdown.vim	/^        let s:filetype_dict[key] = val$/;"	v
s:filetype_dict	plugged/vim-polyglot/ftplugin/markdown.vim	/^    let s:filetype_dict = {$/;"	v
MarkdownHighlightSources	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownHighlightSources(force)$/;"	f
SyntaxInclude	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:SyntaxInclude(filetype)$/;"	f
MarkdownRefreshSyntax	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownRefreshSyntax(force)$/;"	f
MarkdownClearSyntaxVariables	plugged/vim-polyglot/ftplugin/markdown.vim	/^function! s:MarkdownClearSyntaxVariables()$/;"	f
Mkd	plugged/vim-polyglot/ftplugin/markdown.vim	/^augroup Mkd$/;"	a
b:did_ftplugin	plugged/vim-polyglot/ftplugin/racket.vim	/^let b:did_ftplugin = 1$/;"	v
<Plug>RacketDoc	plugged/vim-polyglot/ftplugin/racket.vim	/^nnoremap <buffer> <Plug>RacketDoc :silent !raco docs <cword><cr>:redraw!<cr>$/;"	m
K	plugged/vim-polyglot/ftplugin/racket.vim	/^  nmap <buffer> K <Plug>RacketDoc$/;"	m
Racket_visual_doc	plugged/vim-polyglot/ftplugin/racket.vim	/^function! s:Racket_visual_doc()$/;"	f
<Plug>RacketDoc	plugged/vim-polyglot/ftplugin/racket.vim	/^vnoremap <buffer> <Plug>RacketDoc :call <SID>Racket_visual_doc()<cr>$/;"	m
K	plugged/vim-polyglot/ftplugin/racket.vim	/^  vmap <buffer> K <Plug>RacketDoc$/;"	m
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/racket.vim	/^let b:undo_ftplugin =$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/erlang.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:erlang_fun_begin	plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:erlang_fun_begin = '^\\a\\w*(.*$'$/;"	v
s:erlang_fun_end	plugged/vim-polyglot/ftplugin/erlang.vim	/^let s:erlang_fun_end   = '^[^%]*\\.\\s*\\(%.*\\)\\?$'$/;"	v
GetErlangFold	plugged/vim-polyglot/ftplugin/erlang.vim	/^  function GetErlangFold(lnum)$/;"	f
ErlangFoldText	plugged/vim-polyglot/ftplugin/erlang.vim	/^  function ErlangFoldText()$/;"	f
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/erlang.vim	/^let b:undo_ftplugin = "setlocal keywordprg< foldmethod< foldexpr< foldtext<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/denyhosts.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/groovy.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/groovy.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/groovy.vim	/^let b:undo_ftplugin = 'setlocal commentstring<'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ps1.vim	/^let b:did_ftplugin = 1$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ps1.vim	/^	let b:browsefilter =$/;"	v
GetHelp	plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp silent exe '!' . s:pwsh_cmd . ' -NoLogo -NoProfile -NonInteractive -ExecutionPolicy RemoteSigned -Command Get-Help -Full "<args>" | ' . (has('unix') ? 'LESS= less' : 'less') | redraw!$/;"	c
GetHelp	plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp silent exe 'term ' . s:pwsh_cmd . ' -NoLogo -NoProfile -NonInteractive -ExecutionPolicy RemoteSigned -Command Get-Help -Full "<args>"' . (executable('less') ? ' | less' : '')$/;"	c
GetHelp	plugged/vim-polyglot/ftplugin/ps1.vim	/^    command! -buffer -nargs=1 GetHelp echo system(s:pwsh_cmd . ' -NoLogo -NoProfile -NonInteractive -ExecutionPolicy RemoteSigned -Command Get-Help -Full <args>')$/;"	c
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ps1.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo< iskeyword< keywordprg<" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slpconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slpconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/j.vim	/^let s:save_cpo = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^let b:undo_ftplugin = 'setlocal suffixesadd< includeexpr< include< path< matchpairs< formatoptions< commentstring< comments< iskeyword<'$/;"	v
s:sectionstart	plugged/vim-polyglot/ftplugin/j.vim	/^let s:sectionstart = '\\%(\\s*Note\\|.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|verb\\|monad\\|dyad\\)\\s\\+\\%(:\\s*0\\|def\\s\\+0\\|define\\)\\)\\>.*'$/;"	v
s:sectionend	plugged/vim-polyglot/ftplugin/j.vim	/^let s:sectionend = '\\s*)\\s*'$/;"	v
SearchSection	plugged/vim-polyglot/ftplugin/j.vim	/^function! s:SearchSection(end, backwards, visualmode) abort$/;"	f
]]	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> ]] :<C-U>call <SID>SearchSection(0, 0, '')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> ][ :<C-U>call <SID>SearchSection(1, 0, '')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> [[ :<C-U>call <SID>SearchSection(0, 1, '')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/j.vim	/^noremap <buffer> <silent> [] :<C-U>call <SID>SearchSection(1, 1, '')<CR>$/;"	m
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^let b:undo_ftplugin .= ' | silent! execute "unmap <buffer> ]]"'$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:browsefilter = "J Script Files (*.ijs)\\t*.ijs\\n"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:match_words = '^\\%(\\s*Note\\|.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|verb\\|monad\\|dyad\\)\\s\\+\\%(\\:\\s*0\\|def\\s\\+0\\|define\\)\\)\\>:^\\s*\\:\\s*$:^\\s*)\\s*$'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:match_ignorecase b:match_words'$/;"	v
g:liquid_default_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
s:lines	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words = ''$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\<end\\%(if\\w*\\|unless\\|case\\)\\>,\\<\\%(for\\|tablerow\\)\\>:\\%({%\\s*\\)\\@<=empty\\>:\\<end\\%(for\\|tablerow\\)\\>,<\\(capture\\|comment\\|highlight\\)\\>:\\<end\\1\\>'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/verilog.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/verilog.vim	/^let b:undo_ftplugin = "setlocal fo< com< tw<"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:browsefilter = "Verilog Source Files (*.v)\\t*.v\\n" .$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:match_ignorecase=0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/verilog.vim	/^  let b:match_words=$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/prolog.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/prolog.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/prolog.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/procmail.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/procmail.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/procmail.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mailaliases.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gpg.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gpg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:match_words = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:match_words = b:match_words$/;"	v
s:include	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:include = &l:include$/;"	v
s:path	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:path = &l:path$/;"	v
s:suffixesadd	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let s:suffixesadd = &l:suffixesadd$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/epuppet.vim	/^  let b:match_words = s:match_words$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/epuppet.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/a2ps.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/a2ps.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gdb.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gdb.vim	/^let b:undo_ftplugin = "setlocal cms<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/kconfig.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/kconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/kconfig.vim	/^  let b:match_words = '^\\<menu\\>:\\<endmenu\\>,^\\<if\\>:\\<endif\\>,^\\<choice\\>:\\<endchoice\\>'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/elixir.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/elixir.vim	/^  let b:match_words = '\\:\\@<!\\<\\%(do\\|fn\\)\\:\\@!\\>' .$/;"	v
b:block_begin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:block_begin = '\\<\\(do$\\|fn\\>\\)'$/;"	v
b:block_end	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:block_end = '\\<end\\>'$/;"	v
]]	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
[[	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
][	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
[]	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
]]	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
[[	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
][	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
[]	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:undo_ftplugin = 'setlocal sw< sts< et< isk< com< cms< path< inex< sua< def< fo<'.$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/kotlin.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dircolors.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dircolors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/fish.vim	/^let s:save_cpo = &cpo$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:match_ignorecase = 0$/;"	v
s:if	plugged/vim-polyglot/ftplugin/fish.vim	/^    let s:if = '%(else\\s\\+)\\@15<!if'$/;"	v
s:if	plugged/vim-polyglot/ftplugin/fish.vim	/^    let s:if = '%(else\\s\\+)\\@<!if'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:match_words = escape($/;"	v
b:endwise_addition	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_addition = 'end'$/;"	v
b:endwise_words	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_words = 'begin,function,if,switch,while,for'$/;"	v
b:endwise_syngroups	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_syngroups = 'fishKeyword,fishConditional,fishRepeat'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:undo_ftplugin = "$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nanorc.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nanorc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
s:cpo	plugged/vim-polyglot/ftplugin/scheme.vim	/^let s:cpo = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:undo_ftplugin = 'setl lisp< comments< commentstring< define< iskeyword<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:undo_ftplugin = b:undo_ftplugin . ' lispwords<'$/;"	v
b:did_scheme_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:did_scheme_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/scheme.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vb.vim	/^let b:did_ftplugin = 1$/;"	v
VbSearch	plugged/vim-polyglot/ftplugin/vb.vim	/^fun! <SID>VbSearch(pattern, flags)$/;"	f
s:cpo_save	plugged/vim-polyglot/ftplugin/vb.vim	/^let s:cpo_save = &cpo$/;"	v
[[	plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> [[ :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(function\\\\|sub\\)', 'bW')<cr>$/;"	m
]]	plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> ]] :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(function\\\\|sub\\)', 'W')<cr>$/;"	m
[]	plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> [] :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', 'bW')<cr>$/;"	m
][	plugged/vim-polyglot/ftplugin/vb.vim	/^nnoremap <buffer> <silent> ][ :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', 'W')<cr>$/;"	m
b:match_ignorecase	plugged/vim-polyglot/ftplugin/vb.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/vb.vim	/^    let b:match_words=$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hog.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/hog.vim	/^let s:undo_ftplugin = "setl fo< com< cms< def< inc<"$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hog.vim	/^let s:cpo_save = &cpo$/;"	v
s:hog_keyword_match	plugged/vim-polyglot/ftplugin/hog.vim	/^let s:hog_keyword_match = '\\c^\\s*\\<\\(preprocessor\\\\|config\\\\|output\\\\|include\\\\|ipvar\\\\|portvar\\\\|var\\\\|dynamicpreprocessor\\\\|' . $/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/hog.vim	/^    let b:match_words =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/hog.vim	/^    let b:match_skip = 'r:\\\\.\\{-}$\\|^\\s*#.\\{-}$\\|^\\s*$'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/udevperm.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/udevperm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/csc.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/csc.vim	/^let s:save_cpo = &cpo$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/csc.vim	/^    let b:match_words=$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/csc.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/qml.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpoptions_save	plugged/vim-polyglot/ftplugin/qml.vim	/^let s:cpoptions_save = &cpoptions$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/qml.vim	/^let b:undo_ftplugin =$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/qml.vim	/^   let b:browsefilter =$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:undo_ftplugin = 'setlocal formatoptions<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let b:undo_ftplugin .= ' iskeyword<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let b:undo_ftplugin .= ' foldmethod<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:undo_ftplugin .= ' commentstring<'$/;"	v
=	plugged/vim-polyglot/ftplugin/terraform.vim	/^  inoremap <buffer> <silent> = =<Esc>:call terraform#align()<CR>a$/;"	m
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let b:undo_ftplugin .= '|iunmap <buffer> ='$/;"	v
g:terraform_binary_path	plugged/vim-polyglot/ftplugin/terraform.vim	/^  let g:terraform_binary_path='terraform'$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
Terraform	plugged/vim-polyglot/ftplugin/terraform.vim	/^command! -nargs=+ -complete=custom,terraform#commands -buffer Terraform$/;"	c
TerraformFmt	plugged/vim-polyglot/ftplugin/terraform.vim	/^command! -nargs=0 -buffer TerraformFmt call terraform#fmt()$/;"	c
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/terraform.vim	/^let b:undo_ftplugin .= '|delcommand Terraform|delcommand TerraformFmt'$/;"	v
vim	plugged/vim-polyglot/ftplugin/terraform.vim	/^  augroup vim.terraform.fmt$/;"	a
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo< ml<"$/;"	v
choose	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^function! s:choose(word) abort$/;"	f
cycle	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^function! s:cycle(count) abort$/;"	f
Pick	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Pick   :<line1>,<line2>call s:choose('pick')$/;"	c
Squash	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Squash :<line1>,<line2>call s:choose('squash')$/;"	c
Edit	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Edit   :<line1>,<line2>call s:choose('edit')$/;"	c
Reword	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Reword :<line1>,<line2>call s:choose('reword')$/;"	c
Fixup	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Fixup  :<line1>,<line2>call s:choose('fixup')$/;"	c
Drop	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Drop   :<line1>,<line2>call s:choose('drop')$/;"	c
Cycle	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -count=1 -bar -bang Cycle call s:cycle(<bang>0 ? -<count> : <count>)$/;"	c
K	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\w\\+\\s\\+\\x\\+\\>' ? 'wK' : 'K'$/;"	m
<C-A>	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <silent> <C-A> :<C-U><C-R>=v:count1<CR>Cycle<CR>$/;"	m
<C-X>	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <silent> <C-X> :<C-U><C-R>=v:count1<CR>Cycle!<CR>$/;"	m
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|exe 'nunmap <buffer> K'|exe 'nunmap <buffer> <C-A>'|exe 'nunmap <buffer> <C-X>'"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/razor.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/text.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/text.vim	/^let b:undo_ftplugin = 'setlocal comments< commentstring<'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mako.vim	/^let b:did_ftplugin = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/mako.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/mako.vim	/^  let b:match_words = "<:>," .$/;"	v
s:save_expandtab	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_expandtab = &l:expandtab$/;"	v
s:save_shiftwidth	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_shiftwidth = &l:shiftwidth$/;"	v
s:save_softtabstop	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_softtabstop = &l:softtabstop$/;"	v
s:save_tabstop	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_tabstop = &l:tabstop$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/bzl.vim	/^let s:save_cpo = &cpo$/;"	v
BzlFoldText	plugged/vim-polyglot/ftplugin/bzl.vim	/^function BzlFoldText() abort$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lprolog.vim	/^let b:did_ftplugin = 1$/;"	v
<LocalLeader>c	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<Plug>LUncomOn	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i\/* <ESC>$A *\/<ESC>`z$/;"	m
<Plug>LUncomOff	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOff <ESC>:s\/^\\\/\\* \\(.*\\) \\*\\\/\/\\1\/<CR>$/;"	m
<Plug>BUncomOn	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i\/*<ESC>`>o<ESC>0i*\/<ESC>`<$/;"	m
<Plug>BUncomOff	plugged/vim-polyglot/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
b:did_ftplugin	plugged/vim-polyglot/ftplugin/occam.vim	/^let b:did_ftplugin = 1$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/occam.vim	/^let s:keepcpo= &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/occam.vim	/^  let b:browsefilter = "All Occam Files (*.occ *.inc)\\t*.occ;*.inc\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/occam.vim	/^let b:undo_ftplugin = "setlocal shiftwidth< softtabstop< expandtab<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/svelte.vim	/^let b:did_ftplugin = 1$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/svelte.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/svelte.vim	/^  let b:match_words =$/;"	v
b:ale_fixers	plugged/vim-polyglot/ftplugin/svelte.vim	/^    let b:ale_fixers = ['eslint', 'prettier', 'prettier_standard']$/;"	v
b:ale_linter_aliases	plugged/vim-polyglot/ftplugin/svelte.vim	/^    let b:ale_linter_aliases = ['css', 'javascript']$/;"	v
b:ale_linters	plugged/vim-polyglot/ftplugin/svelte.vim	/^    let b:ale_linters = ['stylelint', 'eslint']$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:did_ftplugin=1$/;"	v
Fnameescape	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Fnameescape(s)$/;"	f
Fnameescape	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Fnameescape(s)$/;"	f
s:cposet	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
<LocalLeader>c	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<Plug>LUncomOn	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn gI(* <End> *)<ESC>$/;"	m
<Plug>LUncomOff	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<LocalLeader>s	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>s <Plug>OCamlSwitchEdit$/;"	m
<LocalLeader>S	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>S <Plug>OCamlSwitchNewWin$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>t <Plug>OCamlPrintType$/;"	m
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw =         '\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:match_ignorecase=0$/;"	v
OcpGrep	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function! s:OcpGrep(bang,args) abort$/;"	f
Ocpgrep	plugged/vim-polyglot/ftplugin/ocaml.vim	/^command! -bar -bang -complete=file -nargs=+ Ocpgrep exe s:OcpGrep(<q-bang>, <q-args>)$/;"	c
g:did_ocaml_switch	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
<Plug>OCamlSwitchEdit	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <Plug>OCamlSwitchEdit :<C-u>call OCaml_switch(0)<CR>$/;"	m
<Plug>OCamlSwitchNewWin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <Plug>OCamlSwitchNewWin :<C-u>call OCaml_switch(1)<CR>$/;"	m
OCaml_switch	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
lnum	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let lnum = search('^\\s*(\\*:o\\?caml:', 'n')$/;"	v
s:modeline	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:modeline = lnum? getline(lnum): ""$/;"	v
s:m	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = 2$/;"	v
s:m	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = s:idef$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:undo_ftplugin = "setlocal efm< foldmethod< foldexpr<"$/;"	v
topindent	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function s:topindent(lnum)$/;"	f
OMLetFoldLevel	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
Find_common_path	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Find_common_path (p1,p2)$/;"	f
Locate_annotation	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  function! s:Locate_annotation()$/;"	f
s:annot_file_list	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:annot_file_list = {}$/;"	v
Enter_annotation_buffer	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Enter_annotation_buffer(annot_file_path)$/;"	f
Exit_annotation_buffer	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Exit_annotation_buffer()$/;"	f
Load_annotation	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Load_annotation(annot_file_name)$/;"	f
Block_pattern	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Block_pattern(lin1,lin2,col1,col2)$/;"	f
Match_data	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Match_data()$/;"	f
Extract_type_data	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Extract_type_data(block_pattern, annot_file_name)$/;"	f
s:ocaml_word_char	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    let s:ocaml_word_char = '\\w|[\\xc0-\\xff]|'''$/;"	v
Match_borders	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Match_borders(mode)$/;"	f
Get_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function! s:Get_type(mode, annot_file_name)$/;"	f
unformat_ocaml_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    function s:unformat_ocaml_type(res)$/;"	f
Ocaml_get_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_get_type(mode)$/;"	f
Ocaml_get_type_or_not	plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_get_type_or_not(mode)$/;"	f
Ocaml_print_type	plugged/vim-polyglot/ftplugin/ocaml.vim	/^      function Ocaml_print_type(mode)$/;"	f
<Plug>OCamlPrintType	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <silent> <Plug>OCamlPrintType :<C-U>call Ocaml_print_type("normal")<CR>$/;"	m
b:did_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let s:cpo_save = &cpoptions$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "setlocal include< includeexpr< isfname<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= " foldexpr< foldmethod<"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:browsefilter = "Abaqus Input Files (*.inp *.inc)\\t*.inp;*.inc\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:browsefilter"$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:match_words = $/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:match_ignorecase b:match_words"$/;"	v
[[	plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> [[ ?^\\*\\a<CR>:nohlsearch<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> ]] \/^\\*\\a<CR>:nohlsearch<CR>$/;"	m
<LocalLeader><LocalLeader>	plugged/vim-polyglot/ftplugin/abaqus.vim	/^noremap <silent><buffer> <LocalLeader><LocalLeader> $/;"	m
Abaqus_ToggleComment	plugged/vim-polyglot/ftplugin/abaqus.vim	/^function! <SID>Abaqus_ToggleComment() range$/;"	f
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin .= "|unmap <buffer> [[|unmap <buffer> ]]"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "let s:cpo_save = &cpoptions|"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dart.vim	/^let b:did_ftplugin = 1$/;"	v
s:win_sep	plugged/vim-polyglot/ftplugin/dart.vim	/^let s:win_sep = (has('win32') || has('win64')) ? '\/' : ''$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dart.vim	/^let b:undo_ftplugin = 'setl et< fo< sw< sts< com< cms< inex< isf<'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sbt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/falcon.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/falcon.vim	/^let s:cpo_save = &cpo$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:match_words =$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/falcon.vim	/^  let b:browsefilter = "Falcon Source Files (*.fal *.ftd)\\t*.fal;*.ftd\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/falcon.vim	/^let b:undo_ftplugin = "setlocal tabstop< shiftwidth< expandtab< fileencoding<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/basic.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/basic.vim	/^let s:cpo_save = &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/basic.vim	/^  let b:browsefilter = "BASIC Source Files (*.bas)\\t*.bas\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/basic.vim	/^let b:undo_ftplugin = "setl fo< com< cms< sua<" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/csv.vim	/^let s:cpo_save = &cpo$/;"	v
b:csv_start	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_start = get(g:, 'csv_start', 1)$/;"	v
b:csv_end	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_end   = get(g:, 'csv_end', line('$'))$/;"	v
b:csv_result	plugged/vim-polyglot/ftplugin/csv.vim	/^let b:csv_result = ''$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/tmux.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/tmux.vim	/^let b:undo_ftplugin = "setlocal comments< commentstring<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/blade.vim	/^let b:did_ftplugin = 1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_words .= ',' .$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_skip = 'synIDattr(synID(line("."), col("."), 0), "name") !=# "bladeKeyword"'$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_ignorecase = 0$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xinetd.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xinetd.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/grub.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/grub.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/grub.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/alsaconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/julia.vim	/^let s:save_cpo = &cpo$/;"	v
b:julia_vim_loaded	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:julia_vim_loaded = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin = "setlocal include< suffixesadd< comments< commentstring<"$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_ignorecase = 0$/;"	v
b:julia_begin_keywords	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_begin_keywords = '\\%(\\%(\\.\\s*\\)\\@<!\\|\\%(@\\s*.\\s*\\)\\@<=\\)\\<\\%(function\\|macro\\|begin\\|mutable\\s\\+struct\\|\\%(mutable\\s\\+\\)\\@<!struct\\|\\%(abstract\\|primitive\\)\\s\\+type\\|let\\|do\\|\\%(bare\\)\\?module\\|quote\\|if\\|for\\|while\\|try\\)\\>'$/;"	v
s:macro_regex	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:macro_regex = '\\%(@\\%([#(]\\@!\\S\\)\\+\\|\\<\\%(local\\|global\\)\\)\\s\\+'$/;"	v
s:nomacro	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:nomacro = '\\%(' . s:macro_regex . '\\)\\@<!'$/;"	v
s:yesmacro	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:yesmacro = s:nomacro . '\\%('. s:macro_regex . '\\)\\+'$/;"	v
b:julia_begin_keywordsm	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_begin_keywordsm = '\\%(' . s:yesmacro . b:julia_begin_keywords . '\\)\\|'$/;"	v
b:julia_end_keywords	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_end_keywords = '\\<end\\>'$/;"	v
JuliaGetMatchWords	plugged/vim-polyglot/ftplugin/julia.vim	/^  function! JuliaGetMatchWords()$/;"	f
b:match_words	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_words = 'JuliaGetMatchWords()'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_skip = 'synIDattr(synID(line("."),col("."),1),"name") =~ '$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^    let b:undo_ftplugin .= " | call julia_blocks#remove_mappings()"$/;"	v
b:commentary_format	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:commentary_format = "# %s"           " for tpope\/vim-commentary$/;"	v
b:smartcomment_force_linemode	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:smartcomment_force_linemode = 1      " for carlobaldassi\/vim-smartcomment$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:browsefilter = "Julia Source Files (*.jl)\\t*.jl\\n"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:undo_ftplugin = b:undo_ftplugin . " | unlet! b:browsefilter"$/;"	v
<Plug>(JuliaDocPrompt)	plugged/vim-polyglot/ftplugin/julia.vim	/^nnoremap <silent><buffer> <Plug>(JuliaDocPrompt) :<C-u>call julia#doc#prompt()<CR>$/;"	m
JuliaDoc	plugged/vim-polyglot/ftplugin/julia.vim	/^command! -nargs=1 -buffer -complete=customlist,julia#doc#complete JuliaDoc call julia#doc#open(<q-args>)$/;"	c
JuliaDocKeywordprg	plugged/vim-polyglot/ftplugin/julia.vim	/^command! -nargs=1 -buffer JuliaDocKeywordprg call julia#doc#keywordprg(<q-args>)$/;"	c
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin .= " | setlocal keywordprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin .= " | delcommand JuliaDoc | delcommand JuliaDocKeywordprg"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fennel.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/fennel.vim	/^let s:cpo_save = &cpo$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/systemd.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/systemd.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/systemd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^let b:did_ftplugin = 1$/;"	v
s:delimiters	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^let s:delimiters = {'left': '#'}$/;"	v
g:NERDDelimiterMap	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^		let g:NERDDelimiterMap.caddyfile = s:delimiters$/;"	v
g:NERDDelimiterMap	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^		let g:NERDDelimiterMap.caddyfile = s:delimiters$/;"	v
g:NERDCustomDelimiters	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^	let g:NERDCustomDelimiters = {'caddyfile': s:delimiters}$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nsis.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/nsis.vim	/^let b:undo_ftplugin = "setl com< cms< fo< def< inc<"$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/nsis.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/nsis.vim	/^  let b:match_words =$/;"	v
g:tagbar_type_scala	plugged/vim-polyglot/ftplugin/scala/tagbar.vim	/^let g:tagbar_type_scala = {$/;"	v
g:tagbar_type_scala	plugged/vim-polyglot/ftplugin/scala/tagbar.vim	/^  let g:tagbar_type_scala.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/scala.ctags'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let s:save_cpo = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= 'setlocal conceallevel< concealcursor< wrap<'$/;"	v
<Plug>(JuliaDocPrompt)	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^nnoremap <silent><buffer> <Plug>(JuliaDocPrompt) :<C-u>call julia#doc#prompt()<CR>$/;"	m
JuliaDoc	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^command! -nargs=1 -buffer -complete=customlist,julia#doc#complete JuliaDoc call julia#doc#open(<q-args>)$/;"	c
JuliaDocKeywordprg	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^command! -nargs=1 -buffer JuliaDocKeywordprg call julia#doc#keywordprg(<q-args>)$/;"	c
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= " | setlocal keywordprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/juliadoc.vim	/^let b:undo_ftplugin .= " | delcommand JuliaDoc | delcommand JuliaDocKeywordprg"$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let b:undo_ftplugin = "setl isk<" . " | " . s:undo_ftplugin$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xsd.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xsd.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/xsd.vim	/^    let  b:browsefilter="XSD Files (*.xsd)\\t*.xsd\\n" . s:browsefilter$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xsd.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:match_words = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:match_words = b:match_words$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let b:browsefilter="Stylus Files (*.styl)\\t*.styl\\n" . s:browsefilter$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let b:match_words = s:match_words$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
Stylus	plugged/vim-polyglot/ftplugin/stylus.vim	/^command! Stylus !clear; cat % | stylus$/;"	c
b:did_ftplugin	plugged/vim-polyglot/ftplugin/logtalk.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/logtalk.vim	/^let b:undo_ftplugin = "setl ts< sw< fdm< fdc< ai< dict<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vroom.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vroom.vim	/^let b:undo_ftplugin = 'setlocal formatoptions< shiftwidth< softtabstop<' .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/css.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/css.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/css.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo< ofu< isk<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cs.vim	/^let b:did_ftplugin = 1$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/cs.vim	/^let s:keepcpo= &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/cs.vim	/^    let b:browsefilter = "C# Source Files (*.cs)\\t*.cs\\n" .$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^let s:cpo_save = &cpo$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^let b:did_ftplugin = 1$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rrst\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:undo_ftplugin .= " | setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^  let b:undo_ftplugin = "setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/opencl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dosini.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dosini.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dosini.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
Fixedgq	plugged/vim-polyglot/ftplugin/typescript.vim	/^function! Fixedgq(lnum, count)$/;"	f
TsIncludeExpr	plugged/vim-polyglot/ftplugin/typescript.vim	/^function! TsIncludeExpr(file)$/;"	f
g:tagbar_type_typescript	plugged/vim-polyglot/ftplugin/typescript.vim	/^let g:tagbar_type_typescript = {$/;"	v
g:tagbar_type_typescript	plugged/vim-polyglot/ftplugin/typescript.vim	/^  let g:tagbar_type_typescript.deffile = expand('<sfile>:p:h:h') . '\/ctags\/typescript.ctags'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = 'setl modeline< tabstop< formatoptions< tw< com< cms< formatlistpat<'$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
DiffGitCached	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdiffcached(<bang>0,b:git_dir,<f-args>)$/;"	c
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|delc DiffGitCached"$/;"	v
diffcomplete	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
gitdiffcached	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vala.vim	/^let b:did_ftplugin = 1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/vala.vim	/^let b:match_words = '^\\s*#\\s*if\\(\\|def\\|ndef\\)\\>:^\\s*#\\s*elif\\>:^\\s*#\\s*else\\>:^\\s*#\\s*endif\\>'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/vala.vim	/^let b:match_skip = 's:comment\\|string\\|character\\|special'$/;"	v
CCode	plugged/vim-polyglot/ftplugin/vala.vim	/^function! CCode() abort$/;"	f
ValaCodingStyle	plugged/vim-polyglot/ftplugin/vala.vim	/^function! ValaCodingStyle() abort$/;"	f
CCode	plugged/vim-polyglot/ftplugin/vala.vim	/^command! -buffer -bar CCode call CCode()$/;"	c
ValaCodingStyle	plugged/vim-polyglot/ftplugin/vala.vim	/^command! -buffer -bar ValaCodingStyle call ValaCodingStyle()$/;"	c
b:browsefilter	plugged/vim-polyglot/ftplugin/vala.vim	/^  let b:browsefilter = "Vala Source Files (*.vala)\\t*.vala\\n" .$/;"	v
b:twigMatchWords	plugged/vim-polyglot/ftplugin/twig.vim	/^    let b:twigMatchWords = [$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^        let s:pattern = ''$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^                let s:pattern .= ':'$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^            let s:pattern .= '{%\\s*\\<' . s:tag . '\\>\\s*\\%(.*=\\)\\@![^}]\\{-}%}'$/;"	v
s:pattern	plugged/vim-polyglot/ftplugin/twig.vim	/^        let s:pattern .= ':{%\\s*\\<' . s:element[-1:][0] . '\\>\\s*.\\{-}%}'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/twig.vim	/^        let b:match_words .= ',' . s:pattern$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin .= "|setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dictconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dictconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:cucumber_root	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:cucumber_steps_glob	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  let b:cucumber_steps_glob = b:cucumber_root.'\/**\/*.rb'$/;"	v
<SID>foldopen	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  cnoremap <SID>foldopen <Bar>if &foldopen =~# 'tag'<Bar>exe 'norm! zv'<Bar>endif$/;"	m
[<C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldopen<CR>$/;"	m
]<C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldopen<CR>$/;"	m
<C-W>d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<SID>foldopen<CR>$/;"	m
<C-W><C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<SID>foldopen<CR>$/;"	m
[d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
jump	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
allsteps	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
steps	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f
stepmatch	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
bsub	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
CucumberComplete	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/netrc.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/netrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xdefaults.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/pyrex.vim	/^let s:keepcpo= &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/pyrex.vim	/^    let  b:browsefilter = "Pyrex files (*.pyx,*.pxd)\\t*.pyx;*.pxd\\n" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/postscr.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/postscr.vim	/^let s:cpo_save = &cpo$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:match_words = '<<:>>,\\<begin\\>:\\<end\\>,\\<save\\>:\\<restore\\>,\\<gsave\\>:\\<grestore\\>'$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/postscr.vim	/^  let b:browsefilter = "PostScript Files (*.ps)\\t*.ps\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/postscr.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
g:smt2_solver_command	plugged/vim-polyglot/ftplugin/smt2.vim	/^        let g:smt2_solver_command = "z3"$/;"	v
g:smt2_solver_command	plugged/vim-polyglot/ftplugin/smt2.vim	/^        let g:smt2_solver_command = "boolector"$/;"	v
g:smt2_solver_version_switch	plugged/vim-polyglot/ftplugin/smt2.vim	/^    let g:smt2_solver_version_switch = "--version"$/;"	v
<localleader>r	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>r :call smt2#RunSolver()<cr>$/;"	m
<localleader>R	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>R :call smt2#RunSolverAndShowResult()<cr>$/;"	m
<localleader>v	plugged/vim-polyglot/ftplugin/smt2.vim	/^nnoremap <silent> <buffer> <localleader>v :call smt2#PrintSolverVersion()<cr>$/;"	m
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dtd.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/dtd.vim	/^let s:save_cpo = &cpo$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/dtd.vim	/^    let b:match_words = '<!--:-->,<!:>'$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/dtd.vim	/^    let  b:browsefilter="DTD Files (*.dtd)\\t*.dtd\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dtd.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/toml.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/toml.vim	/^let s:save_cpo = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/toml.vim	/^let b:undo_ftplugin = 'setlocal commentstring< comments<'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/passwd.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/passwd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dune.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cfg.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cfg.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cfg.vim	/^let b:undo_ftplugin = "setl cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/raku.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/raku.vim	/^let s:save_cpo = &cpo$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/raku.vim	/^                let perlpath = system('perl6 -e  "@*INC.join(q\/,\/).say"')$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/raku.vim	/^                let perlpath = system("perl6 -e  '@*INC.join(q\/,\/).say'")$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/raku.vim	/^            let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/raku.vim	/^            let perlpath = ".,,"$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/raku.vim	/^        let perlpath = ".,,"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/raku.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< isk< kp< path<" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:undo_ftplugin = "setlocal cms< com< | unlet! b:match_words"$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pdf.vim	/^    let b:match_words = '\\<\\%(\\d\\+\\s\\+\\d\\+\\s\\+\\)obj\\>:\\<endobj\\>,\\<stream$:\\<endstream\\>,\\<xref\\>:\\<trailer\\>,<<:>>'$/;"	v
b:pdf_tagstack	plugged/vim-polyglot/ftplugin/pdf.vim	/^    let b:pdf_tagstack = []$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pdf.vim	/^let b:undo_ftplugin .= " | silent! nunmap <buffer> <C-]> | silent! nunmap <buffer> <C-T>"$/;"	v
<C-]>	plugged/vim-polyglot/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-]> :call <SID>Tag()<CR>$/;"	m
<C-T>	plugged/vim-polyglot/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-T> :if len(b:pdf_tagstack) > 0 <Bar> call setpos('.',remove(b:pdf_tagstack, -1)) <Bar> else <Bar> exe "norm! \\<Lt>C-T>" <Bar> endif<CR>$/;"	m
Tag	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:Tag()$/;"	f
doobject	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:doobject(string)$/;"	f
dodigits	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:dodigits(digits)$/;"	f
notag	plugged/vim-polyglot/ftplugin/pdf.vim	/^function! s:notag()$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^  let b:browsefilter = "DOS Batch Files (*.bat, *.cmd)\\t*.bat;*.cmd\\nAll Files (*.*)\\t*.*\\n"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dosbatch.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions< keywordprg<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/modconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/modconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/framescript.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/framescript.vim	/^let b:undo_ftplugin = "setl com< cms< fo< inc< | unlet! b:matchwords"$/;"	v
s:not_end	plugged/vim-polyglot/ftplugin/framescript.vim	/^  let s:not_end = '\\c\\%(\\<End\\)\\@<!'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/framescript.vim	/^  let b:match_words =$/;"	v
TextileRenderFile	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderFile call TextileRenderBufferToFile()$/;"	c
TextileRenderTab	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderTab call TextileRenderBufferToTab()$/;"	c
TextilePreview	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextilePreview call TextileRenderBufferToPreview()$/;"	c
<Leader>rp	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rp :TextilePreview<CR>$/;"	m
<Leader>rf	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rf :TextileRenderFile<CR>$/;"	m
<Leader>rt	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rt :TextileRenderTab<CR>$/;"	m
TextileRender	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRender(lines)$/;"	f
TextileRenderFile	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderFile(lines, filename)$/;"	f
TextileRenderBufferToPreview	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToPreview()$/;"	f
TextileRenderBufferToFile	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToFile()$/;"	f
TextileRenderBufferToTab	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToTab()$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/yaml.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/yaml.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/yaml.vim	/^  let b:undo_ftplugin .= " sw< sts<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/awk.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^let b:undo_ftplugin = "setl fo< com< cms< def< sua<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^    let b:undo_ftplugin .= " | setl fp<"$/;"	v
path	plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = system("gawk 'BEGIN { printf ENVIRON[\\"AWKPATH\\"] }'")$/;"	v
path	plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = substitute(path, '^\\.\\=:\\|:\\.\\=$\\|:\\.\\=:', ',,', 'g') " POSIX cwd$/;"	v
path	plugged/vim-polyglot/ftplugin/awk.vim	/^  let path = substitute(path, ':', ',', 'g')$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/awk.vim	/^  let b:undo_ftplugin .= " | setl inc< path<"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/awk.vim	/^  let b:browsefilter = "Awk Source Files (*.awk,*.gawk)\\t*.awk;*.gawk\\n" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/logcheck.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/logcheck.vim	/^let b:undo_ftplugin = 'setl fo<'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/aap.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/aap.vim	/^let b:undo_ftplugin = "setl fo< com< et<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dictdconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/jproperties.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/jproperties.vim	/^let b:undo_ftplugin = "setl cms< com< fo<"$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/kwt.vim	/^let s:cpo_save = &cpo$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:browsefilter = "Kimwitu\/Kimwitu++ Files (*.k)\\t*.k\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:undo_ftplugin = b:undo_ftplugin . " | setlocal efm<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/kwt.vim	/^    let b:undo_ftplugin = "setlocal efm<"$/;"	v
JsonnetFmt	plugged/vim-polyglot/ftplugin/jsonnet.vim	/^command! -nargs=0 JsonnetFmt call jsonnet#Format()$/;"	c
b:did_ftplugin	plugged/vim-polyglot/ftplugin/calendar.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/calendar.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cvsrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/libao.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/libao.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/libao.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rnc.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rnc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hostconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hostconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let b:did_ftplugin=1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let b:undo_ftplugin = 'setlocal tw< comments< foldmethod< foldexpr< foldtext<'$/;"	v
g:did_changelog_ftplugin	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^let g:did_changelog_ftplugin = 1$/;"	v
FullName	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>FullName()$/;"	f
Email	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Email()$/;"	f
Date	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Date()$/;"	f
WarnIfNotUnfinalised	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>WarnIfNotUnfinalised()$/;"	f
Finalised	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>Finalised()$/;"	f
NewVersion	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function NewVersion()$/;"	f
AddEntry	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function AddEntry()$/;"	f
CloseBug	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function CloseBug()$/;"	f
Distribution	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Distribution(dist)$/;"	f
Urgency	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Urgency(urg)$/;"	f
UnfinaliseMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>UnfinaliseMenu()$/;"	f
Unfinalise	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Unfinalise()$/;"	f
FinaliseMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>FinaliseMenu()$/;"	f
Finalise	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function Finalise()$/;"	f
MakeMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function <SID>MakeMenu()$/;"	f
changelogMenu	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^augroup changelogMenu$/;"	a
getAuthor	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! s:getAuthor(zonestart, zoneend)$/;"	f
DebGetPkgSrcName	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebGetPkgSrcName(lineno)$/;"	f
DebChangelogFoldText	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebChangelogFoldText()$/;"	f
DebGetChangelogFold	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^function! DebGetChangelogFold(lnum)$/;"	f
g:debchangelog_listbugs_severities	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^  let g:debchangelog_listbugs_severities = 'critical,grave,serious,important,normal,minor,wishlist'$/;"	v
DebCompleteBugs	plugged/vim-polyglot/ftplugin/debchangelog.vim	/^fun! DebCompleteBugs(findstart, base)$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/clojure.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^let b:undo_ftplugin = 'setlocal iskeyword< define< formatoptions< comments< commentstring< lispwords<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let b:undo_ftplugin .= ' | setlocal ' . s:setting . '<'$/;"	v
s:dir	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = fnameescape(s:dir)$/;"	v
s:dir	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\', '\\\\\\\\', 'g')$/;"	v
s:dir	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\ ', '\\\\ ', 'g')$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | setlocal path<'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:match_words = &matchpairs$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:match_skip = 's:comment\\|string\\|regex\\|character'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:match_words b:match_skip'$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:browsefilter = "Clojure Source Files (*.clj)\\t*.clj\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let s:match_words = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words . "," . s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let b:match_words = s:match_words$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/xhtml.vim	/^    let  b:browsefilter="XHTML files (*.xhtml, *.xhtm)\\t*.xhtml;*.xhtm\\n" . s:browsefilter$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/xhtml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:undo_ftplugin = ""$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:match_words = ""$/;"	v
g:eelixir_default_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
s:lines	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:lines = join(getline(1, 5) + [getline('$')], "\\n")$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^leex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^sface\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.sface\\|\\.leex\\|\\.eelixir\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let b:did_ftplugin = 1$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:match_words = s:match_words$/;"	v
b:surround_45	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_45 = "<% \\r %>"$/;"	v
b:surround_61	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_61 = "<%= \\r %>"$/;"	v
b:surround_35	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_35 = "<%# \\r %>"$/;"	v
b:surround_123	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_123 = "{{ \\r }}"$/;"	v
b:surround_5	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_5 = "<% \\r %>\\n<% end %>"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/updatedb.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/updatedb.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/html.vim	/^let b:did_ftplugin = 1$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/html.vim	/^let s:save_cpo = &cpo$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/html.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/html.vim	/^    let b:match_words = '<:>,' .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/html.vim	/^    let  b:browsefilter="HTML Files (*.html,*.htm)\\t*.htm;*.html\\n" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/html.vim	/^let b:undo_ftplugin = "setlocal commentstring< matchpairs< omnifunc< comments< formatoptions<" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitignore.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitignore.vim	/^let b:undo_ftplugin = 'setlocal commentstring<'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/protocols.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/protocols.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cdrdaoconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/bst.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/bst.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/crystal.vim	/^let b:did_ftplugin = 1$/;"	v
g:crystal_compiler_command	plugged/vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_compiler_command = get(g:, 'crystal_compiler_command', 'crystal')$/;"	v
g:crystal_auto_format	plugged/vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_auto_format = get(g:, 'crystal_auto_format', 0)$/;"	v
CrystalImpl	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalImpl           echo crystal_lang#impl(expand('%'), getpos('.'), <q-args>).output$/;"	c
CrystalDef	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=0 CrystalDef            call crystal_lang#jump_to_definition(expand('%'), getpos('.'))$/;"	c
CrystalContext	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalContext        echo crystal_lang#context(expand('%'), getpos('.'), <q-args>).output$/;"	c
CrystalHierarchy	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalHierarchy      echo crystal_lang#type_hierarchy(expand('%'), <q-args>)$/;"	c
CrystalSpecSwitch	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecSwitch     call crystal_lang#switch_spec_file(<f-args>)$/;"	c
CrystalSpecRunAll	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunAll     call crystal_lang#run_all_spec(<f-args>)$/;"	c
CrystalSpecRunCurrent	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunCurrent call crystal_lang#run_current_spec(<f-args>)$/;"	c
CrystalFormat	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* -bar CrystalFormat    call crystal_lang#format(<q-args>, 0)$/;"	c
CrystalExpand	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalExpand         echo crystal_lang#expand(expand('%'), getpos('.'), <q-args>).output$/;"	c
<Plug>(crystal-jump-to-definition)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-jump-to-definition) :<C-u>CrystalDef<CR>$/;"	m
<Plug>(crystal-show-context)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-show-context)       :<C-u>CrystalContext<CR>$/;"	m
<Plug>(crystal-spec-switch)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-switch)        :<C-u>CrystalSpecSwitch<CR>$/;"	m
<Plug>(crystal-spec-run-all)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-run-all)       :<C-u>CrystalSpecRunAll<CR>$/;"	m
<Plug>(crystal-spec-run-current)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-run-current)   :<C-u>CrystalSpecRunCurrent<CR>$/;"	m
<Plug>(crystal-format)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-format)             :<C-u>CrystalFormat<CR>$/;"	m
plugin	plugged/vim-polyglot/ftplugin/crystal.vim	/^augroup plugin-ft-crystal$/;"	a
gd	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gd  <Plug>(crystal-jump-to-definition)$/;"	m
gc	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gc  <Plug>(crystal-show-context)$/;"	m
gss	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gss <Plug>(crystal-spec-switch)$/;"	m
gsa	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsa <Plug>(crystal-spec-run-all)$/;"	m
gsc	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsc <Plug>(crystal-spec-run-current)$/;"	m
b:match_ignorecase	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_words =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_skip =$/;"	v
b:AutoPairs	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:AutoPairs = { '{%': '%}' }$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/help.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/help.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/help.vim	/^let b:undo_ftplugin = "setl fo< tw< cole< cocu< keywordprg<"$/;"	v
show_toc	plugged/vim-polyglot/ftplugin/help.vim	/^  function! s:show_toc() abort$/;"	f
gO	plugged/vim-polyglot/ftplugin/help.vim	/^  nnoremap <silent><buffer> gO :call <sid>show_toc()<cr>$/;"	m
b:did_ftplugin	plugged/vim-polyglot/ftplugin/lftp.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/lftp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/setserial.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/setserial.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/limits.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/limits.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/limits.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
IndentLevel	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! IndentLevel(lnum)$/;"	f
NextNonBlankLine	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! NextNonBlankLine(lnum)$/;"	f
GetPotionFold	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! GetPotionFold(lnum)$/;"	f
b:did_ftplugin	plugged/vim-polyglot/ftplugin/elinks.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/elinks.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slpspi.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slpspi.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/graphql.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/graphql.vim	/^let b:undo_ftplugin = 'setlocal com< cms< fo< isk< sts< sw< et<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sxhkdrc.vim	/^	let b:undo_ftplugin .= "|setlocal commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sxhkdrc.vim	/^	let b:undo_ftplugin = "setlocal commentstring<"$/;"	v
b:loaded_plantuml_plugin	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:loaded_plantuml_plugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let s:cpo_save = &cpoptions$/;"	v
g:plantuml_executable_script	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let g:plantuml_executable_script='plantuml'$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_words =$/;"	v
b:endwise_addition	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_addition = '\\=index(["dot","mindmap","uml","salt","wbs"], submatch(0))!=-1 ? "@end" . submatch(0) : index(["note","legend"], submatch(0))!=-1 ? "end " . submatch(0) : "end"'$/;"	v
b:endwise_words	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_words = 'loop,group,alt,note,legend,startdot,startmindmap,startuml,startsalt,startwbs'$/;"	v
b:endwise_pattern	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_pattern = '^\\s*\\zs\\(loop\\|group\\|alt\\|note\\ze[^:]*$\\|legend\\|@start\\zs\\(dot\\|mindmap\\|uml\\|salt\\|wbs\\)\\)\\>.*$'$/;"	v
b:endwise_syngroups	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_syngroups = 'plantumlKeyword,plantumlPreProc'$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/arch.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/arch.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/arch.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/mplayerconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/meson.vim	/^let b:did_ftplugin = 1$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/meson.vim	/^let s:keepcpo= &cpo$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/pamconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pamconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/screen.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/screen.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/screen.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^  let b:browsefilter = $/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo<" .$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hostsaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:match_ignorecase = 0$/;"	v
b:tsx_match_words	plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:tsx_match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/typescriptreact.vim	/^  let b:match_words = exists('b:match_words')$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/udevconf.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/udevconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ansible_hosts.vim	/^  let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ansible_hosts.vim	/^let b:undo_ftplugin = "setl comments< commentstring< formatoptions<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/sieve.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/sieve.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/neomuttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/fstab.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/fstab.vim	/^let b:undo_ftplugin = "setlocal commentstring<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cobol.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/cobol.vim	/^let s:cpo_save = &cpo$/;"	v
s:ordot	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let s:ordot = '\\|\\ze\\.\\%( \\@=\\|$\\)'$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:match_words=$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/cobol.vim	/^  let b:browsefilter = "COBOL Source Files (*.cbl, *.cob)\\t*.cbl;*.cob;*.lib\\n".$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cobol.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo< et< tw<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cobol.vim	/^    let b:undo_ftplugin = b:undo_ftplugin .$/;"	v
>	plugged/vim-polyglot/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> > :set opfunc=<SID>IncreaseFunc<CR>g@$/;"	m
<	plugged/vim-polyglot/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> < :set opfunc=<SID>DecreaseFunc<CR>g@$/;"	m
>>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> >> :call CobolIndentBlock(1)<CR>$/;"	m
<<	plugged/vim-polyglot/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> << :call CobolIndentBlock(-1)<CR>$/;"	m
>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> > :call CobolIndentBlock(v:count1)<CR>$/;"	m
<	plugged/vim-polyglot/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> < :call CobolIndentBlock(-v:count1)<CR>$/;"	m
<C-T>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-T> <C-R>=<SID>IncreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<C-D>	plugged/vim-polyglot/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-D> <C-R>=<SID>DecreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<Tab>	plugged/vim-polyglot/ftplugin/cobol.vim	/^        inoremap <silent> <buffer> <Tab> <C-R>=<SID>Tab()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [[ m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z0-9-]\\+\\s\\+\\%(division\\<Bar>section\\)\\s*\\.','bW')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ]] m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z0-9-]\\+\\s\\+\\%(division\\<Bar>section\\)\\.','W')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [] m':call <SID>toend('b')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ][ m':call <SID>toend('')<CR>$/;"	m
<Plug>Traditional	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Traditional      :call <SID>Comment('t')<CR>$/;"	m
<Plug>Comment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Comment          :call <SID>Comment('c')<CR>$/;"	m
<Plug>DeComment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>DeComment        :call <SID>Comment('u')<CR>$/;"	m
<Plug>VisualTraditional	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualTraditional :'<,'>call <SID>Comment('t')<CR>$/;"	m
<Plug>VisualComment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualComment     :'<,'>call <SID>Comment('c')<CR>$/;"	m
<Plug>VisualDeComment	plugged/vim-polyglot/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualDeComment   :'<,'>call <SID>Comment('u')<CR>$/;"	m
g:did_cobol_ftplugin_functions	plugged/vim-polyglot/ftplugin/cobol.vim	/^let g:did_cobol_ftplugin_functions = 1$/;"	v
repeat	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:repeat(str,count)$/;"	f
increase	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:increase(...)$/;"	f
decrease	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:decrease(...)$/;"	f
CobolIndentBlock	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! CobolIndentBlock(shift)$/;"	f
IncreaseFunc	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:IncreaseFunc(type)$/;"	f
DecreaseFunc	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:DecreaseFunc(type)$/;"	f
IncreaseIndent	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:IncreaseIndent()$/;"	f
DecreaseIndent	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:DecreaseIndent()$/;"	f
RestoreShiftwidth	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:RestoreShiftwidth()$/;"	f
Tab	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:Tab()$/;"	f
Comment	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:Comment(arg)$/;"	f
toend	plugged/vim-polyglot/ftplugin/cobol.vim	/^function! s:toend(direction)$/;"	f
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vlang.vim	/^	let b:undo_ftplugin .= "|setlocal commentstring< makeprg<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vlang.vim	/^	let b:undo_ftplugin = "setlocal commentstring< makeprg<"$/;"	v
v_fmt	plugged/vim-polyglot/ftplugin/vlang.vim	/^	augroup v_fmt$/;"	a
b:did_ftplugin	plugged/vim-polyglot/ftplugin/moon.vim	/^let b:did_ftplugin = 1$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/moon.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<"$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/hamster.vim	/^let b:did_ftplugin = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/hamster.vim	/^let s:cpo_save = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/hamster.vim	/^let b:undo_ftplugin = "setl fo< com< tw< commentstring<"$/;"	v
[[	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [[ :call search('^\\s*sub\\>', "bW")<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ]] :call search('^\\s*sub\\>', "W")<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [] :call search('^\\s*endsub\\>', "bW")<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ][ :call search('^\\s*endsub\\>', "W")<CR>$/;"	m
]#	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> ]# :call search('^\\s*#\\@!', "W")<CR>$/;"	m
[#	plugged/vim-polyglot/ftplugin/hamster.vim	/^noremap <silent><buffer> [# :call search('^\\s*#\\@!', "bW")<CR>$/;"	m
b:match_ignorecase	plugged/vim-polyglot/ftplugin/hamster.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/hamster.vim	/^  let b:match_words =$/;"	v
foobar	plugged/vim-polyglot/tests/indent/2.1/test.js	/^function foobar() {$/;"	f
foobar	plugged/vim-polyglot/tests/indent/4.1/test.js	/^function foobar() {$/;"	f
Test_detection	plugged/vim-polyglot/tests/native.vim	/^func Test_detection()$/;"	f
Test_conf_type	plugged/vim-polyglot/tests/native.vim	/^func Test_conf_type()$/;"	f
Test_other_type	plugged/vim-polyglot/tests/native.vim	/^func Test_other_type()$/;"	f
s:filename_checks	plugged/vim-polyglot/tests/native.vim	/^let s:filename_checks = {$/;"	v
s:filename_case_checks	plugged/vim-polyglot/tests/native.vim	/^let s:filename_case_checks = {$/;"	v
CheckItems	plugged/vim-polyglot/tests/native.vim	/^func CheckItems(checks)$/;"	f
NewTest_filetype_detection	plugged/vim-polyglot/tests/native.vim	/^func NewTest_filetype_detection()$/;"	f
s:script_checks	plugged/vim-polyglot/tests/native.vim	/^let s:script_checks = {$/;"	v
s:script_env_checks	plugged/vim-polyglot/tests/native.vim	/^let s:script_env_checks = {$/;"	v
Run_script_detection	plugged/vim-polyglot/tests/native.vim	/^func Run_script_detection(test_dict)$/;"	f
Test_script_detection	plugged/vim-polyglot/tests/native.vim	/^func Test_script_detection()$/;"	f
Test_setfiletype_completion	plugged/vim-polyglot/tests/native.vim	/^func Test_setfiletype_completion()$/;"	f
Test_emptybuf_ftdetect	plugged/vim-polyglot/tests/native.vim	/^func Test_emptybuf_ftdetect()$/;"	f
Test_filetype_indent_off	plugged/vim-polyglot/tests/native.vim	/^func Test_filetype_indent_off()$/;"	f
Test_hook_file	plugged/vim-polyglot/tests/native.vim	/^func Test_hook_file()$/;"	f
TestExtension	plugged/vim-polyglot/tests/extensions.vim	/^function! TestExtension(filetype, filename, content)$/;"	f
g:filetype_asa	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_asa = "fizfuz"$/;"	v
g:filetype_asp	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_asp = "fizfuz"$/;"	v
g:filetype_idr	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_idr = "fizfuz"$/;"	v
g:filetype_m	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_m = "fizfuz"$/;"	v
g:filetype_fs	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_fs = "fizfuz"$/;"	v
g:c_syntax_for_h	plugged/vim-polyglot/tests/extensions.vim	/^let g:c_syntax_for_h = 1$/;"	v
g:ch_syntax_for_h	plugged/vim-polyglot/tests/extensions.vim	/^let g:ch_syntax_for_h = 1$/;"	v
g:filetype_pm	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_pm = "fizfuz"$/;"	v
g:filetype_pl	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_pl = "fizfuz"$/;"	v
g:filetype_t	plugged/vim-polyglot/tests/extensions.vim	/^let g:filetype_t = "fizfuz"$/;"	v
TestFiletype	plugged/vim-polyglot/tests/filetypes.vim	/^func! TestFiletype(filetype)$/;"	f
polyglot	plugged/vim-polyglot/plugin/polyglot.vim	/^    augroup polyglot-sensible$/;"	a
<C-U>	plugged/vim-polyglot/plugin/polyglot.vim	/^    inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-W>	plugged/vim-polyglot/plugin/polyglot.vim	/^    inoremap <C-W> <C-G>u<C-W>$/;"	m
loaded_eregex	plugged/vim-polyglot/scripts/eregex.vim	/^let loaded_eregex=1$/;"	v
E2v	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range E2v :<line1>,<line2>call <SID>ExtendedRegex2VimRegexLineWise(<q-args>)$/;"	c
M	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -count=1 M :let s:eregex_tmp_hlsearch = &hlsearch | let v:searchforward = <SID>Ematch(<count>, <q-args>) | if s:eregex_tmp_hlsearch == 1 | set hlsearch | endif$/;"	c
S	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range S :<line1>,<line2>call <SID>Esubstitute(<q-args>) <Bar> :noh$/;"	c
G	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range=% -bang G :<line1>,<line2>call <SID>Eglobal(<q-bang>, <q-args>)$/;"	c
V	plugged/vim-polyglot/scripts/eregex.vim	/^command! -nargs=? -range=% V :<line1>,<line2>call <SID>Evglobal(<q-args>)$/;"	c
s:eglobal_working	plugged/vim-polyglot/scripts/eregex.vim	/^let s:eglobal_working=0$/;"	v
s:ch_with_backslash	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_with_backslash=0$/;"	v
s:ch_posix_charclass	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_posix_charclass=1$/;"	v
s:ch_brackets	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_brackets=2$/;"	v
s:ch_braces	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_braces=3$/;"	v
s:ch_parentheses_option	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_parentheses_option=4$/;"	v
s:ch_parentheses	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ch_parentheses=5$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{0}='\\\\\\%([^x_]\\|x\\x\\{0,2}\\|_[.$^]\\=\\)'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{1}= '\\[:\\%(alnum\\|alpha\\|blank\\|cntrl\\|digit\\|graph\\|lower\\|print\\|punct\\|' .$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{2}='\\[\\%([^^][^]]*\\|\\^.[^]]*\\)\\]'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{3}='{[0-9,]\\+}?\\='$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{4}='(?[iImM]\\{1,2})'$/;"	v
s:re_factor	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor{5}='(\\(?:\\|?=\\|?!\\|?<=\\|?<!\\|?>\\|?[-#ixm]\\)\\=[^()]*)'$/;"	v
s:re_factor_size	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_factor_size=6$/;"	v
s:mark_left	plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_left="\\<Esc>" . strftime("%X") . ":" . strftime("%d") . "\\<C-f>"$/;"	v
s:mark_right	plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_right="\\<C-l>" . strftime("%X") . ":" . strftime("%d") . "\\<Esc>"$/;"	v
s:stack_size	plugged/vim-polyglot/scripts/eregex.vim	/^let s:stack_size=0$/;"	v
s:invert	plugged/vim-polyglot/scripts/eregex.vim	/^let s:invert=0$/;"	v
s:multiline	plugged/vim-polyglot/scripts/eregex.vim	/^let s:multiline=0$/;"	v
s:ignorecase	plugged/vim-polyglot/scripts/eregex.vim	/^let s:ignorecase=0$/;"	v
s:re_unescaped	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_unescaped='\\%(\\\\\\)\\@<!\\%(\\\\\\\\\\)*\\zs'$/;"	v
s:re_escaped	plugged/vim-polyglot/scripts/eregex.vim	/^let s:re_escaped='\\%(\\\\\\)\\@<!\\%(\\\\\\\\\\)*\\zs\\\\'$/;"	v
s:bakregex	plugged/vim-polyglot/scripts/eregex.vim	/^let s:bakregex=''$/;"	v
s:mark_complements	plugged/vim-polyglot/scripts/eregex.vim	/^let s:mark_complements=s:mark_left . 'cOmPLemEnTs' . s:mark_right$/;"	v
s:extended_spaces	plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_spaces=0$/;"	v
s:extended_complements	plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_complements=0$/;"	v
s:extended_dots	plugged/vim-polyglot/scripts/eregex.vim	/^let s:extended_dots=0$/;"	v
s:str_modifiers	plugged/vim-polyglot/scripts/eregex.vim	/^let s:str_modifiers='iISCDMm'$/;"	v
s:meta_chars	plugged/vim-polyglot/scripts/eregex.vim	/^let s:meta_chars='$*.[\\]^~'$/;"	v
s:countermeasure	plugged/vim-polyglot/scripts/eregex.vim	/^let s:countermeasure=1$/;"	v
s:eregex_replacement	plugged/vim-polyglot/scripts/eregex.vim	/^let s:eregex_replacement=0$/;"	v
s:eregex_replacement	plugged/vim-polyglot/scripts/eregex.vim	/^    let s:eregex_replacement=eregex_replacement$/;"	v
s:tmp	plugged/vim-polyglot/scripts/eregex.vim	/^let s:tmp=matchstr("$Revision: 2.60 $", '[0-9.]\\+')$/;"	v
s:maj	plugged/vim-polyglot/scripts/eregex.vim	/^let s:maj=matchstr(s:tmp, '\\d\\+') * 100$/;"	v
s:min	plugged/vim-polyglot/scripts/eregex.vim	/^let s:min=matchstr(s:tmp, '\\.\\zs\\d\\+') + 0$/;"	v
s:version	plugged/vim-polyglot/scripts/eregex.vim	/^let s:version = s:maj + s:min$/;"	v
g:eregex_forward_delim	plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_forward_delim = '\/'$/;"	v
g:eregex_backward_delim	plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_backward_delim = '?'$/;"	v
g:eregex_force_case	plugged/vim-polyglot/scripts/eregex.vim	/^  let g:eregex_force_case = 0$/;"	v
s:enable	plugged/vim-polyglot/scripts/eregex.vim	/^let s:enable = 0$/;"	v
eregex#toggle	plugged/vim-polyglot/scripts/eregex.vim	/^function! eregex#toggle(...)$/;"	f
Push	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Push(fct, kind)$/;"	f
ExpandAtomsInBrackets	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExpandAtomsInBrackets(bracket)$/;"	f
Pop	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Pop()$/;"	f
UnletStack	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:UnletStack()$/;"	f
ReplaceExtendedRegexFactorWithNumberFactor	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceExtendedRegexFactorWithNumberFactor(extendedregex)$/;"	f
ReplaceRemainFactorWithVimRegexFactor	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceRemainFactorWithVimRegexFactor(halfway)$/;"	f
ReplaceNumberFactorWithVimRegexFactor	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceNumberFactorWithVimRegexFactor(halfway)$/;"	f
ExtendedRegex2VimRegex	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExtendedRegex2VimRegex(extendedregex, ...)$/;"	f
ExtendedRegex2VimRegexLineWise	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExtendedRegex2VimRegexLineWise(...) range$/;"	f
E2v	plugged/vim-polyglot/scripts/eregex.vim	/^function! E2v(extendedregex, ...)$/;"	f
Ematch	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Ematch(...)$/;"	f
Esubstitute	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Esubstitute(...) range$/;"	f
Eglobal	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Eglobal(bang, ...) range$/;"	f
Evglobal	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:Evglobal(...) range$/;"	f
GetDelim	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:GetDelim(str)$/;"	f
EscapeAndUnescape	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:EscapeAndUnescape(vimregex, delim)$/;"	f
SetModifiers	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:SetModifiers(mods)$/;"	f
ExchangeReplaceSpecials	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ExchangeReplaceSpecials(replacement, sort)$/;"	f
ReplaceAsStr	plugged/vim-polyglot/scripts/eregex.vim	/^function! s:ReplaceAsStr(str, search, replacement, ...)$/;"	f
ExtendedRegex2VimRegex	plugged/vim-polyglot/scripts/eregex.vim	/^function! ExtendedRegex2VimRegex(data)$/;"	f
run_script	plugged/vim-polyglot/scripts/test	/^def run_script(src)$/;"	f
run_vimscript	plugged/vim-polyglot/scripts/test	/^def run_vimscript(src)$/;"	f
comma_expanson	plugged/vim-polyglot/scripts/import_vim	/^def comma_expanson(s)$/;"	f
import_autocommands	plugged/vim-polyglot/scripts/import_vim	/^def import_autocommands$/;"	f
print_pattern	plugged/vim-polyglot/scripts/import_vim	/^def print_pattern(p)$/;"	f
generate_packages_entries	plugged/vim-polyglot/scripts/import_vim	/^def generate_packages_entries(filetypes, comments)$/;"	f
fix_quotes	plugged/vim-polyglot/scripts/import_vim	/^def fix_quotes(a)$/;"	f
get_comments	plugged/vim-polyglot/scripts/import_vim	/^def get_comments$/;"	f
square_expansion	plugged/vim-polyglot/scripts/import_vim	/^def square_expansion(s)$/;"	f
brace_expansion	plugged/vim-polyglot/scripts/import_vim	/^def brace_expansion(s)$/;"	f
generate_tests	plugged/vim-polyglot/scripts/import_vim	/^def generate_tests(autocommands)$/;"	f
camelize	plugged/vim-polyglot/scripts/build	/^def camelize(str)$/;"	f
except	plugged/vim-polyglot/scripts/build	/^def except(hash, *keys)$/;"	f
verify	plugged/vim-polyglot/scripts/build	/^def verify(packages, heuristics)$/;"	f
sort_packages	plugged/vim-polyglot/scripts/build	/^def sort_packages(packages)$/;"	f
load_data	plugged/vim-polyglot/scripts/build	/^def load_data()$/;"	f
patterns_to_vim_patterns	plugged/vim-polyglot/scripts/build	/^def patterns_to_vim_patterns(patterns)$/;"	f
each_hash	plugged/vim-polyglot/scripts/build	/^def each_hash(data, &block)$/;"	f
transform_patterns	plugged/vim-polyglot/scripts/build	/^def transform_patterns(heuristics)$/;"	f
load_languages	plugged/vim-polyglot/scripts/build	/^def load_languages$/;"	f
load_packages	plugged/vim-polyglot/scripts/build	/^def load_packages$/;"	f
load_heuristics	plugged/vim-polyglot/scripts/build	/^def load_heuristics$/;"	f
parse_remote	plugged/vim-polyglot/scripts/build	/^def parse_remote(remote)$/;"	f
copy_file	plugged/vim-polyglot/scripts/build	/^def copy_file(name, src, dest)$/;"	f
download	plugged/vim-polyglot/scripts/build	/^def download(packages)$/;"	f
progress	plugged/vim-polyglot/scripts/build	/^def progress$/;"	f
indent	plugged/vim-polyglot/scripts/build	/^def indent(str, amount)$/;"	f
pattern_to_condition	plugged/vim-polyglot/scripts/build	/^def pattern_to_condition(rule)$/;"	f
rules_to_code	plugged/vim-polyglot/scripts/build	/^def rules_to_code(rules)$/;"	f
rule_to_code	plugged/vim-polyglot/scripts/build	/^def rule_to_code(rule)$/;"	f	class:rules_to_code
extract	plugged/vim-polyglot/scripts/build	/^def extract(packages)$/;"	f	class:rules_to_code.rule_to_code
print_and	plugged/vim-polyglot/scripts/build	/^def print_and(list)$/;"	f	class:rules_to_code.rule_to_code
generate_ftdetect	plugged/vim-polyglot/scripts/build	/^def generate_ftdetect(packages, heuristics)$/;"	f	class:rules_to_code.rule_to_code
inject_code	plugged/vim-polyglot/scripts/build	/^def inject_code(path, code)$/;"	f	class:rules_to_code.rule_to_code
generate_tests	plugged/vim-polyglot/scripts/build	/^def generate_tests(packages)$/;"	f	class:rules_to_code.rule_to_code
brace_expansion	plugged/vim-polyglot/scripts/build	/^def brace_expansion(s)$/;"	f	class:rules_to_code.rule_to_code
square_expansion	plugged/vim-polyglot/scripts/build	/^def square_expansion(s)$/;"	f	class:rules_to_code.rule_to_code
comma_expanson	plugged/vim-polyglot/scripts/build	/^def comma_expanson(s)$/;"	f	class:rules_to_code.rule_to_code
expand_all	plugged/vim-polyglot/scripts/build	/^def expand_all(pattern, all = false)$/;"	f	class:rules_to_code.rule_to_code
detect_filetypes_str	plugged/vim-polyglot/scripts/build	/^def detect_filetypes_str(contents)$/;"	f	class:rules_to_code.rule_to_code
detect_filetypes	plugged/vim-polyglot/scripts/build	/^def detect_filetypes(glob)$/;"	f	class:rules_to_code.rule_to_code.detect_filetypes_str
generate_plugins	plugged/vim-polyglot/scripts/build	/^def generate_plugins(packages)$/;"	f	class:rules_to_code.rule_to_code.detect_filetypes_str.detect_filetypes
process_list	plugged/vim-polyglot/scripts/build	/^def process_list(list, extras)$/;"	f	class:rules_to_code.rule_to_code.detect_filetypes_str.detect_filetypes
show_warnings	plugged/vim-polyglot/scripts/build	/^def show_warnings(all_filetypes, expected_filetypes)$/;"	f	class:rules_to_code.rule_to_code.detect_filetypes_str.detect_filetypes
generate_fallback	plugged/vim-polyglot/scripts/build	/^def generate_fallback$/;"	f	class:rules_to_code.rule_to_code.detect_filetypes_str.detect_filetypes.show_warnings
s:save_cpo	plugged/vim-polyglot/autoload/requirements.vim	/^let s:save_cpo = &cpo$/;"	v
s:syng_multiline	plugged/vim-polyglot/autoload/yats.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_linecom	plugged/vim-polyglot/autoload/yats.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
yats#IsInMultilineComment	plugged/vim-polyglot/autoload/yats.vim	/^function yats#IsInMultilineComment(lnum, col)$/;"	f
yats#IsLineComment	plugged/vim-polyglot/autoload/yats.vim	/^function yats#IsLineComment(lnum, col)$/;"	f
s:ecrystal_extensions	plugged/vim-polyglot/autoload/ecrystal.vim	/^let s:ecrystal_extensions = {$/;"	v
ecrystal#SetSubtype	plugged/vim-polyglot/autoload/ecrystal.vim	/^function! ecrystal#SetSubtype() abort$/;"	f
zig#fmt#Format	plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! zig#fmt#Format() abort$/;"	f
parse_errors	plugged/vim-polyglot/autoload/zig/fmt.vim	/^function! s:parse_errors(filename, lines) abort$/;"	f
g:nim_log	plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_log = []$/;"	v
s:plugin_path	plugged/vim-polyglot/autoload/nim.vim	/^let s:plugin_path = escape(expand('<sfile>:p:h'), '\\')$/;"	v
g:nim_caas_enabled	plugged/vim-polyglot/autoload/nim.vim	/^  let g:nim_caas_enabled = 0$/;"	v
nim#init	plugged/vim-polyglot/autoload/nim.vim	/^fun! nim#init() abort$/;"	f
UpdateNimLog	plugged/vim-polyglot/autoload/nim.vim	/^fun! s:UpdateNimLog() abort$/;"	f
NimVim	plugged/vim-polyglot/autoload/nim.vim	/^augroup NimVim$/;"	a
NimLog	plugged/vim-polyglot/autoload/nim.vim	/^command! NimLog :e log:\/\/nim$/;"	c
NimTerminateService	plugged/vim-polyglot/autoload/nim.vim	/^command! NimTerminateService$/;"	c
NimRestartService	plugged/vim-polyglot/autoload/nim.vim	/^command! NimRestartService$/;"	c
CurrentNimFile	plugged/vim-polyglot/autoload/nim.vim	/^fun! s:CurrentNimFile() abort$/;"	f
g:nim_symbol_types	plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_symbol_types = {$/;"	v
NimExec	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimExec(op) abort$/;"	f
NimExecAsync	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimExecAsync(op, Handler) abort$/;"	f
NimComplete	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimComplete(findstart, base) abort$/;"	f
g:neocomplcache_omni_patterns	plugged/vim-polyglot/autoload/nim.vim	/^  let g:neocomplcache_omni_patterns = {}$/;"	v
g:neocomplcache_omni_patterns	plugged/vim-polyglot/autoload/nim.vim	/^let g:neocomplcache_omni_patterns['nim'] = '[^. *\\t]\\.\\w*'$/;"	v
g:neocomplete#sources#omni#input_patterns	plugged/vim-polyglot/autoload/nim.vim	/^  let g:neocomplete#sources#omni#input_patterns = {}$/;"	v
g:neocomplete#sources#omni#input_patterns	plugged/vim-polyglot/autoload/nim.vim	/^let g:neocomplete#sources#omni#input_patterns['nim'] = '[^. *\\t]\\.\\w*'$/;"	v
g:nim_completion_callbacks	plugged/vim-polyglot/autoload/nim.vim	/^let g:nim_completion_callbacks = {}$/;"	v
NimAsyncCmdComplete	plugged/vim-polyglot/autoload/nim.vim	/^fun! NimAsyncCmdComplete(cmd, output) abort$/;"	f
GotoDefinition_nim_ready	plugged/vim-polyglot/autoload/nim.vim	/^fun! GotoDefinition_nim_ready(def_output) abort$/;"	f
GotoDefinition_nim	plugged/vim-polyglot/autoload/nim.vim	/^fun! GotoDefinition_nim() abort$/;"	f
FindReferences_nim	plugged/vim-polyglot/autoload/nim.vim	/^fun! FindReferences_nim() abort$/;"	f
SyntaxCheckers_nim_nim_GetLocList	plugged/vim-polyglot/autoload/nim.vim	/^fun! SyntaxCheckers_nim_nim_GetLocList() abort$/;"	f
SyntaxCheckers_nim_nim_IsAvailable	plugged/vim-polyglot/autoload/nim.vim	/^function! SyntaxCheckers_nim_nim_IsAvailable() abort$/;"	f
rust#Load	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Load()$/;"	f
rust#GetConfigVar	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#GetConfigVar(name, default)$/;"	f
rust#IncludeExpr	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#IncludeExpr(fname) abort$/;"	f
rust#Jump	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Jump(mode, function) range$/;"	f
Jump_Back	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Jump_Back()$/;"	f
Jump_Forward	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Jump_Forward()$/;"	f
rust#Run	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Run(bang, args)$/;"	f
Run	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Run(dict, rustc_args, args)$/;"	f
rust#Expand	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Expand(bang, args)$/;"	f
Expand	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Expand(dict, pretty, args)$/;"	f
rust#CompleteExpand	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#CompleteExpand(lead, line, pos)$/;"	f
rust#Emit	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Emit(type, args)$/;"	f
Emit	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Emit(dict, type, args)$/;"	f
WithPath	plugged/vim-polyglot/autoload/rust.vim	/^function! s:WithPath(func, ...)$/;"	f
rust#AppendCmdLine	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#AppendCmdLine(text)$/;"	f
ShellTokenize	plugged/vim-polyglot/autoload/rust.vim	/^function! s:ShellTokenize(text)$/;"	f
RmDir	plugged/vim-polyglot/autoload/rust.vim	/^function! s:RmDir(path)$/;"	f
system	plugged/vim-polyglot/autoload/rust.vim	/^function! s:system(pwd, cmd)$/;"	f
has_webapi	plugged/vim-polyglot/autoload/rust.vim	/^function! s:has_webapi()$/;"	f
rust#Play	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Play(count, line1, line2, ...) abort$/;"	f
SearchTestFunctionNameUnderCursor	plugged/vim-polyglot/autoload/rust.vim	/^function! s:SearchTestFunctionNameUnderCursor() abort$/;"	f
rust#Test	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Test(mods, winsize, all, options) abort$/;"	f
s:cpo_save	plugged/vim-polyglot/autoload/go/config.vim	/^let s:cpo_save = &cpo$/;"	v
go#config#ListTypeCommands	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListTypeCommands() abort$/;"	f
go#config#VersionWarning	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#VersionWarning() abort$/;"	f
go#config#BuildTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#BuildTags() abort$/;"	f
go#config#SetBuildTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetBuildTags(value) abort$/;"	f
go#config#TestTimeout	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TestTimeout() abort$/;"	f
go#config#TestShowName	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TestShowName() abort$/;"	f
go#config#TermHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermHeight() abort$/;"	f
go#config#TermWidth	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermWidth() abort$/;"	f
go#config#TermMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermMode() abort$/;"	f
go#config#TermCloseOnExit	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermCloseOnExit() abort$/;"	f
go#config#TermReuse	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermReuse() abort$/;"	f
go#config#SetTermCloseOnExit	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTermCloseOnExit(value) abort$/;"	f
go#config#TermEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermEnabled() abort$/;"	f
go#config#SetTermEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTermEnabled(value) abort$/;"	f
go#config#TemplateUsePkg	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateUsePkg() abort$/;"	f
go#config#TemplateTestFile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateTestFile() abort$/;"	f
go#config#TemplateFile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateFile() abort$/;"	f
go#config#StatuslineDuration	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#StatuslineDuration() abort$/;"	f
go#config#SnippetEngine	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SnippetEngine() abort$/;"	f
go#config#PlayBrowserCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#PlayBrowserCommand() abort$/;"	f
go#config#MetalinterDeadline	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterDeadline() abort$/;"	f
go#config#ListType	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListType() abort$/;"	f
go#config#ListAutoclose	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListAutoclose() abort$/;"	f
go#config#InfoMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#InfoMode() abort$/;"	f
go#config#GuruScope	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GuruScope() abort$/;"	f
go#config#SetGuruScope	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetGuruScope(scope) abort$/;"	f
go#config#EchoCommandInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#EchoCommandInfo() abort$/;"	f
go#config#DocUrl	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocUrl() abort$/;"	f
go#config#DocPopupWindow	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocPopupWindow() abort$/;"	f
go#config#DefReuseBuffer	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DefReuseBuffer() abort$/;"	f
go#config#DefMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DefMode() abort$/;"	f
go#config#DeclsIncludes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DeclsIncludes() abort$/;"	f
go#config#Debug	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#Debug() abort$/;"	f
go#config#DebugWindows	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugWindows() abort$/;"	f
go#config#DebugPreserveLayout	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugPreserveLayout() abort$/;"	f
go#config#DebugAddress	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugAddress() abort$/;"	f
go#config#DebugCommands	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugCommands() abort$/;"	f
go#config#DebugLogOutput	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugLogOutput() abort$/;"	f
go#config#LspLog	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#LspLog() abort$/;"	f
go#config#SetDebugDiag	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetDebugDiag(value) abort$/;"	f
go#config#AutoSameids	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutoSameids() abort$/;"	f
go#config#SetAutoSameids	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAutoSameids(value) abort$/;"	f
go#config#AddtagsTransform	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AddtagsTransform() abort$/;"	f
go#config#AddtagsSkipUnexported	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AddtagsSkipUnexported() abort$/;"	f
go#config#TemplateAutocreate	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateAutocreate() abort$/;"	f
go#config#SetTemplateAutocreate	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTemplateAutocreate(value) abort$/;"	f
s:default_metalinter	plugged/vim-polyglot/autoload/go/config.vim	/^let s:default_metalinter = 'staticcheck'$/;"	v
go#config#MetalinterCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterCommand() abort$/;"	f
go#config#MetalinterAutosaveEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterAutosaveEnabled() abort$/;"	f
go#config#MetalinterEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterEnabled() abort$/;"	f
go#config#GolintBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GolintBin() abort$/;"	f
go#config#ErrcheckBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ErrcheckBin() abort$/;"	f
go#config#MetalinterAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterAutosave() abort$/;"	f
go#config#SetMetalinterAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetMetalinterAutosave(value) abort$/;"	f
go#config#ListHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListHeight() abort$/;"	f
go#config#FmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtAutosave() abort$/;"	f
go#config#ImportsAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImportsAutosave() abort$/;"	f
go#config#SetFmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetFmtAutosave(value) abort$/;"	f
go#config#AsmfmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AsmfmtAutosave() abort$/;"	f
go#config#SetAsmfmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAsmfmtAutosave(value) abort$/;"	f
go#config#ModFmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ModFmtAutosave() abort$/;"	f
go#config#SetModFmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetModFmtAutosave(value) abort$/;"	f
go#config#DocMaxHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocMaxHeight() abort$/;"	f
go#config#AutoTypeInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutoTypeInfo() abort$/;"	f
go#config#SetAutoTypeInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAutoTypeInfo(value) abort$/;"	f
go#config#AlternateMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AlternateMode() abort$/;"	f
go#config#DeclsMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DeclsMode() abort$/;"	f
go#config#FmtCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtCommand() abort$/;"	f
go#config#ImportsMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImportsMode() abort$/;"	f
go#config#FmtOptions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtOptions() abort$/;"	f
go#config#FmtFailSilently	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtFailSilently() abort$/;"	f
go#config#FmtExperimental	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtExperimental() abort$/;"	f
go#config#PlayOpenBrowser	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#PlayOpenBrowser() abort$/;"	f
go#config#RenameCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#RenameCommand() abort$/;"	f
go#config#GorenameBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GorenameBin() abort$/;"	f
go#config#GorenamePrefill	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GorenamePrefill() abort$/;"	f
go#config#TextobjIncludeFunctionDoc	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TextobjIncludeFunctionDoc() abort$/;"	f
go#config#TextobjIncludeVariable	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TextobjIncludeVariable() abort$/;"	f
go#config#BinPath	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#BinPath() abort$/;"	f
go#config#SearchBinPathFirst	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SearchBinPathFirst() abort$/;"	f
go#config#HighlightArrayWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightArrayWhitespaceError() abort$/;"	f
go#config#HighlightChanWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightChanWhitespaceError() abort$/;"	f
go#config#HighlightExtraTypes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightExtraTypes() abort$/;"	f
go#config#HighlightSpaceTabError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightSpaceTabError() abort$/;"	f
go#config#HighlightTrailingWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightTrailingWhitespaceError() abort$/;"	f
go#config#HighlightOperators	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightOperators() abort$/;"	f
go#config#HighlightFunctions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctions() abort$/;"	f
go#config#HighlightFunctionParameters	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctionParameters() abort$/;"	f
go#config#HighlightFunctionCalls	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctionCalls() abort$/;"	f
go#config#HighlightFields	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFields() abort$/;"	f
go#config#HighlightTypes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightTypes() abort$/;"	f
go#config#HighlightBuildConstraints	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightBuildConstraints() abort$/;"	f
go#config#HighlightStringSpellcheck	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightStringSpellcheck() abort$/;"	f
go#config#HighlightFormatStrings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFormatStrings() abort$/;"	f
go#config#HighlightGenerateTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightGenerateTags() abort$/;"	f
go#config#HighlightVariableAssignments	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightVariableAssignments() abort$/;"	f
go#config#HighlightVariableDeclarations	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightVariableDeclarations() abort$/;"	f
go#config#HighlightDiagnosticErrors	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDiagnosticErrors() abort$/;"	f
go#config#HighlightDiagnosticWarnings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDiagnosticWarnings() abort$/;"	f
go#config#HighlightDebug	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightDebug() abort$/;"	f
go#config#DebugBreakpointSignText	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugBreakpointSignText() abort$/;"	f
go#config#FoldEnable	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FoldEnable(...) abort$/;"	f
go#config#EchoGoInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#EchoGoInfo() abort$/;"	f
go#config#CodeCompletionEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#CodeCompletionEnabled() abort$/;"	f
go#config#CodeCompletionIcase	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#CodeCompletionIcase() abort$/;"	f
go#config#Updatetime	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#Updatetime() abort$/;"	f
go#config#ReferrersMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ReferrersMode() abort$/;"	f
go#config#ImplementsMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ImplementsMode() abort$/;"	f
go#config#GoplsCompleteUnimported	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsCompleteUnimported() abort$/;"	f
go#config#GoplsDeepCompletion	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsDeepCompletion() abort$/;"	f
go#config#GoplsMatcher	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsMatcher() abort$/;"	f
go#config#GoplsStaticCheck	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsStaticCheck() abort$/;"	f
go#config#GoplsUsePlaceholders	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsUsePlaceholders() abort$/;"	f
go#config#GoplsTempModfile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsTempModfile() abort$/;"	f
go#config#GoplsAnalyses	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsAnalyses() abort$/;"	f
go#config#GoplsLocal	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsLocal() abort$/;"	f
go#config#GoplsGofumpt	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsGofumpt() abort$/;"	f
go#config#GoplsSettings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsSettings() abort$/;"	f
go#config#GoplsEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsEnabled() abort$/;"	f
go#config#DiagnosticsEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DiagnosticsEnabled() abort$/;"	f
go#config#DiagnosticsLevel	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DiagnosticsLevel() abort$/;"	f
go#config#GoplsOptions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GoplsOptions() abort$/;"	f
go#config#FillStructMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FillStructMode() abort$/;"	f
go#config#DebugMappings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugMappings() abort$/;"	f
s:V	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:V = vital#crystal#new()$/;"	v
s:P	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:P = s:V.import('Process')$/;"	v
s:C	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:C = s:V.import('ColorEcho')$/;"	v
s:IS_WINDOWS	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:IS_WINDOWS = has('win32')$/;"	v
decode_json	plugged/vim-polyglot/autoload/crystal_lang.vim	/^  function! s:decode_json(text) abort$/;"	f
s:J	plugged/vim-polyglot/autoload/crystal_lang.vim	/^  let s:J = s:V.import('Web.JSON')$/;"	v
decode_json	plugged/vim-polyglot/autoload/crystal_lang.vim	/^  function! s:decode_json(text) abort$/;"	f
echo_error	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:echo_error(msg, ...) abort$/;"	f
run_cmd	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_cmd(cmd) abort$/;"	f
find_root_by	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by(search_dir, d) abort$/;"	f
find_root_by_spec_and_src	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by_spec_and_src(d) abort$/;"	f
crystal_lang#entrypoint_for	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#entrypoint_for(file_path) abort$/;"	f
crystal_lang#tool	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#tool(name, file, pos, option_str) abort$/;"	f
crystal_lang#impl	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#impl(file, pos, option_str) abort$/;"	f
jump_to_impl	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:jump_to_impl(impl) abort$/;"	f
crystal_lang#jump_to_definition	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#jump_to_definition(file, pos) abort$/;"	f
crystal_lang#context	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#context(file, pos, option_str) abort$/;"	f
crystal_lang#type_hierarchy	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#type_hierarchy(file, option_str) abort$/;"	f
find_completion_start	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_completion_start() abort$/;"	f
crystal_lang#complete	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#complete(findstart, base) abort$/;"	f
crystal_lang#get_spec_switched_path	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#get_spec_switched_path(absolute_path) abort$/;"	f
crystal_lang#switch_spec_file	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#switch_spec_file(...) abort$/;"	f
run_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_spec(root, path, ...) abort$/;"	f
crystal_lang#run_all_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_all_spec(...) abort$/;"	f
crystal_lang#run_current_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_current_spec(...) abort$/;"	f
crystal_lang#format_string	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format_string(code, ...) abort$/;"	f
crystal_lang#format	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format(option_str, ...) abort$/;"	f
crystal_lang#expand	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#expand(file, pos, ...) abort$/;"	f
s:cpo_save	plugged/vim-polyglot/autoload/pony.vim	/^let s:cpo_save = &cpo$/;"	v
s:skip2	plugged/vim-polyglot/autoload/pony.vim	/^let s:skip2 = '<SID>InLiteral(line("."), col(".")) || <SID>InComment(line("."), col(".")) == 1'$/;"	v
s:skip3	plugged/vim-polyglot/autoload/pony.vim	/^let s:skip3 = '!<SID>InKeyword(line("."), col("."))'$/;"	v
s:skip4	plugged/vim-polyglot/autoload/pony.vim	/^let s:skip4 = '!<SID>InBracket(line("."), col("."))'$/;"	v
s:cfstart	plugged/vim-polyglot/autoload/pony.vim	/^let s:cfstart = '\\v<%(ifdef|if|match|while|for|repeat|try|with|recover|object|lambda|iftype)>'$/;"	v
s:cfmiddle	plugged/vim-polyglot/autoload/pony.vim	/^let s:cfmiddle = '\\v<%(then|elseif|else|until|do|in|elseiftype)>|\\|'$/;"	v
s:cfend	plugged/vim-polyglot/autoload/pony.vim	/^let s:cfend = '\\v<end>'$/;"	v
s:bstartp	plugged/vim-polyglot/autoload/pony.vim	/^let s:bstartp = '\\v<%(ifdef|if|then|elseif|else|(match)|while|for|in|do|try|with|recover|repeat|until|(object)|lambda|iftype|elseiftype)>'$/;"	v
pony#Indent	plugged/vim-polyglot/autoload/pony.vim	/^function! pony#Indent()$/;"	f
PrevNonblank	plugged/vim-polyglot/autoload/pony.vim	/^function! s:PrevNonblank(lnum)$/;"	f
IsContinued	plugged/vim-polyglot/autoload/pony.vim	/^function! s:IsContinued(lnum)$/;"	f
InCommentOrLiteral	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InCommentOrLiteral(...)$/;"	f
InKeyword	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InKeyword(...)$/;"	f
InBracket	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InBracket(...)$/;"	f
InComment	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InComment(...)$/;"	f
InLiteral	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InLiteral(...)$/;"	f
InComment2	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InComment2(...)$/;"	f
InLiteral2	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InLiteral2(...)$/;"	f
CharAtCursor	plugged/vim-polyglot/autoload/pony.vim	/^function! s:CharAtCursor(...)$/;"	f
Or	plugged/vim-polyglot/autoload/pony.vim	/^function! s:Or(x, y)$/;"	f
InnerPos	plugged/vim-polyglot/autoload/pony.vim	/^function! s:InnerPos(x, y)$/;"	f
OuterPos	plugged/vim-polyglot/autoload/pony.vim	/^function! s:OuterPos(x, y)$/;"	f
pony#ClearTrailingSpace	plugged/vim-polyglot/autoload/pony.vim	/^function! pony#ClearTrailingSpace(all, alt, ...)$/;"	f
python#utils#fix_qflist	plugged/vim-polyglot/autoload/python/utils.vim	/^function! python#utils#fix_qflist() " {{{$/;"	f
g:elixir_indent_max_lookbehind	plugged/vim-polyglot/autoload/elixir/indent.vim	/^  let g:elixir_indent_max_lookbehind = 30$/;"	v
sw	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:sw()$/;"	f
elixir#indent#indent	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#indent(lnum)$/;"	f
debug	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:debug(str)$/;"	f
starts_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:starts_with(context, expr)$/;"	f
prev_starts_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:prev_starts_with(context, expr)$/;"	f
_starts_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:_starts_with(text, expr, lnum)$/;"	f
prev_ends_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:prev_ends_with(context, expr)$/;"	f
_ends_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:_ends_with(text, expr, lnum)$/;"	f
is_string_or_comment	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:is_string_or_comment(line, col)$/;"	f
syntax_name	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:syntax_name(line, col)$/;"	f
elixir#indent#searchpair_back_skip	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#searchpair_back_skip()$/;"	f
keyword	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:keyword(expr)$/;"	f
find_last_pos	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:find_last_pos(lnum, text, match)$/;"	f
elixir#indent#handle_top_of_file	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_top_of_file(context)$/;"	f
elixir#indent#handle_starts_with_string_continuation	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_string_continuation(context)$/;"	f
elixir#indent#handle_follow_prev_nb	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_follow_prev_nb(context)$/;"	f
get_base_indent	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:get_base_indent(lnum, text)$/;"	f
elixir#indent#handle_following_trailing_binary_operator	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_trailing_binary_operator(context)$/;"	f
elixir#indent#handle_starts_with_pipe	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_pipe(context)$/;"	f
elixir#indent#handle_starts_with_end	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_end(context)$/;"	f
elixir#indent#handle_starts_with_binary_operator	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_binary_operator(context)$/;"	f
elixir#indent#handle_inside_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_block(context)$/;"	f
handle_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:handle_with(start_lnum, start_col, context)$/;"	f
do_handle_pattern_match_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_pattern_match_block(relative_line, context)$/;"	f
elixir#indent#handle_inside_generic_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_generic_block(context)$/;"	f
elixir#util#get_filename	plugged/vim-polyglot/autoload/elixir/util.vim	/^function! elixir#util#get_filename(word) abort$/;"	f
g:loaded_autoload_fsharp	plugged/vim-polyglot/autoload/fsharp.vim	/^let g:loaded_autoload_fsharp = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:cpo_save = &cpo$/;"	v
prompt	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:prompt(msg)$/;"	f
PlainNotification	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:PlainNotification(content)$/;"	f
TextDocumentIdentifier	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:TextDocumentIdentifier(path)$/;"	f
Position	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:Position(line, character)$/;"	f
TextDocumentPositionParams	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:TextDocumentPositionParams(documentUri, line, character)$/;"	f
DocumentationForSymbolRequest	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:DocumentationForSymbolRequest(xmlSig, assembly)$/;"	f
ProjectParms	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:ProjectParms(projectUri)$/;"	f
WorkspacePeekRequest	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:WorkspacePeekRequest(directory, deep, excludedDirs)$/;"	f
WorkspaceLoadParms	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:WorkspaceLoadParms(files)$/;"	f
FsdnRequest	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:FsdnRequest(query)$/;"	f
call	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:call(method, params, cont)$/;"	f
signature	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:signature(filePath, line, character, cont)$/;"	f
signatureData	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:signatureData(filePath, line, character, cont)$/;"	f
lineLens	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:lineLens(projectPath, cont)$/;"	f
compilerLocation	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:compilerLocation(cont)$/;"	f
compile	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:compile(projectPath, cont)$/;"	f
workspacePeek	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:workspacePeek(directory, depth, excludedDirs, cont)$/;"	f
workspaceLoad	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:workspaceLoad(files, cont)$/;"	f
project	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:project(projectPath, cont)$/;"	f
fsdn	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:fsdn(signature, cont)$/;"	f
f1Help	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:f1Help(filePath, line, character, cont)$/;"	f
fsharp#documentation	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#documentation(filePath, line, character, cont)$/;"	f
documentationSymbol	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:documentationSymbol(xmlSig, assembly, cont)$/;"	f
s:config_keys_camel	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:config_keys_camel =$/;"	v
s:config_keys	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:config_keys = []$/;"	v
fsharp#toSnakeCase	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#toSnakeCase(str)$/;"	f
buildConfigKeys	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:buildConfigKeys()$/;"	f
findWorkspace	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:findWorkspace(dir, cont)$/;"	f
s:workspace	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:workspace = []$/;"	v
load	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:load(arg)$/;"	f
fsharp#loadProject	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#loadProject(...)$/;"	f
fsharp#loadWorkspaceAuto	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#loadWorkspaceAuto()$/;"	f
fsharp#reloadProjects	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#reloadProjects()$/;"	f
fsharp#OnFSProjSave	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#OnFSProjSave()$/;"	f
fsharp#showSignature	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showSignature()$/;"	f
fsharp#OnCursorMove	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#OnCursorMove()$/;"	f
fsharp#showF1Help	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showF1Help()$/;"	f
fsharp#showTooltip	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#showTooltip()$/;"	f
s:script_root_dir	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:script_root_dir = expand('<sfile>:p:h') . "\/..\/"$/;"	v
s:fsac	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsac = fnamemodify(s:script_root_dir . "fsac\/fsautocomplete.dll", ":p")$/;"	v
g:fsharp#languageserver_command	plugged/vim-polyglot/autoload/fsharp.vim	/^let g:fsharp#languageserver_command =$/;"	v
download	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:download(branch)$/;"	f
fsharp#updateFSAC	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#updateFSAC(...)$/;"	f
s:fsi_buffer	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_buffer = -1$/;"	v
s:fsi_job	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_job    = -1$/;"	v
s:fsi_width	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_width  = 0$/;"	v
s:fsi_height	plugged/vim-polyglot/autoload/fsharp.vim	/^let s:fsi_height = 0$/;"	v
win_gotoid_safe	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:win_gotoid_safe(winid)$/;"	f
get_fsi_command	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_fsi_command()$/;"	f
fsharp#openFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#openFsi(returnFocus)$/;"	f
fsharp#toggleFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#toggleFsi()$/;"	f
fsharp#quitFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#quitFsi()$/;"	f
fsharp#resetFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#resetFsi()$/;"	f
fsharp#sendFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendFsi(text)$/;"	f
get_visual_selection	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_visual_selection()$/;"	f
get_complete_buffer	plugged/vim-polyglot/autoload/fsharp.vim	/^function! s:get_complete_buffer()$/;"	f
fsharp#sendSelectionToFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendSelectionToFsi() range$/;"	f
fsharp#sendLineToFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendLineToFsi()$/;"	f
fsharp#sendAllToFsi	plugged/vim-polyglot/autoload/fsharp.vim	/^function! fsharp#sendAllToFsi()$/;"	f
g:aria_attributes_complete	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^  let g:aria_attributes_complete = 1$/;"	v
htmlcomplete#DetectOmniFlavor	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f
htmlcomplete#CompleteTags	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#LoadAria	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f
htmlcomplete#LoadData	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
htmlcomplete#CheckDoctype	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
s:keepcpo	plugged/vim-polyglot/autoload/ada.vim	/^let s:keepcpo= &cpo$/;"	v
g:ada#DotWordRegex	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#DotWordRegex	   = '\\a\\w*\\(\\_s*\\.\\_s*\\a\\w*\\)*'$/;"	v
g:ada#WordRegex	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#WordRegex	   = '\\a\\w*'$/;"	v
g:ada#Comment	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Comment	   = "\\\\v^(\\"[^\\"]*\\"|'.'|[^\\"']){-}\\\\zs\\\\s*--.*"$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Keywords	   = []$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^       let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	plugged/vim-polyglot/autoload/ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Ctags_Kinds	plugged/vim-polyglot/autoload/ada.vim	/^let g:ada#Ctags_Kinds = {$/;"	v
ada#Word	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Word (...)$/;"	f
ada#List_Tag	plugged/vim-polyglot/autoload/ada.vim	/^function ada#List_Tag (...)$/;"	f
ada#Jump_Tag	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Jump_Tag (Word, Mode)$/;"	f
ada#Insert_Backspace	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Insert_Backspace ()$/;"	f
ada#User_Complete	plugged/vim-polyglot/autoload/ada.vim	/^function! ada#User_Complete(findstart, base)$/;"	f
ada#Completion	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Completion (cmd)$/;"	f
ada#Completion_End	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Completion_End ()$/;"	f
ada#Create_Tags	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Create_Tags (option)$/;"	f
ada#Switch_Session	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Switch_Session (New_Session)$/;"	f
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^   let s:Fold_Collate = '^\\([;)]*$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<is\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<begin\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<private\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<exception\\>$\\|'$/;"	v
s:Fold_Collate	plugged/vim-polyglot/autoload/ada.vim	/^   let s:Fold_Collate .= '--\\)'$/;"	v
ada#Pretty_Print_Folding	plugged/vim-polyglot/autoload/ada.vim	/^   function ada#Pretty_Print_Folding (Line)			     " {{{2$/;"	f
ada#Switch_Syntax_Option	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Switch_Syntax_Option (option)$/;"	f
ada#Map_Menu	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Map_Menu (Text, Keys, Command)$/;"	f
ada#Map_Popup	plugged/vim-polyglot/autoload/ada.vim	/^function ada#Map_Popup (Text, Keys, Command)$/;"	f
cargo#quickfix#CmdPre	plugged/vim-polyglot/autoload/cargo/quickfix.vim	/^function! cargo#quickfix#CmdPre() abort$/;"	f
cargo#quickfix#CmdPost	plugged/vim-polyglot/autoload/cargo/quickfix.vim	/^function! cargo#quickfix#CmdPost() abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_SID() abort$/;"	f
_true	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_true() abort$/;"	f
_false	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_false() abort$/;"	f
_null	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_null() abort$/;"	f
_resolve	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_resolve(val, prefix) abort$/;"	f
_vital_created	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_loaded	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_depends	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_depends() abort$/;"	f
decode	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:decode(json, ...) abort$/;"	f
encode	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:encode(val, ...) abort$/;"	f
_encode_list	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_encode_list(val, settings) abort$/;"	f
_encode_dict	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_encode_dict(val, settings) abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:_SID() abort$/;"	f
s:is_windows	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_unix	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:need_trans	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:TYPE_DICT	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
spawn	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
iconv	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
has_vimproc	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:has_vimproc() abort$/;"	f
system	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:system(str, ...) abort$/;"	f
get_last_status	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:get_last_status() abort$/;"	f
shellescape	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_SID() abort$/;"	f
pop	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:pop(list) abort$/;"	f
push	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
shift	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:shift(list) abort$/;"	f
unshift	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
cons	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
conj	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
uniq	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
clear	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:clear(list) abort$/;"	f
concat	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:concat(list) abort$/;"	f
flatten	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
sort	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
_compare	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
sort_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
max_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
min_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
char_range	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
has	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
span	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
break	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
take_while	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
drop_while	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:drop_while(f, xs) abort$/;"	f
partition	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
all	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
any	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
and	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:and(xs) abort$/;"	f
or	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:or(xs) abort$/;"	f
map_accum	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
foldl	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
zip	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
with_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
find	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
_call_string_expr	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_call_string_expr(expr, args) abort$/;"	f
find_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_last_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_indices	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
has_common_items	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
intersect	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
group_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
_default_compare	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
binary_search	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
product	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:product(lists) abort$/;"	f
permutations	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
combinations	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_SID() abort$/;"	f
_vital_loaded	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_depends	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_created	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
replace	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace_first	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
_replace	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
scan	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
reverse	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
starts_with	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
ends_with	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
common_head	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
split_leftright	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split3	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
nsplit	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
s:strchars	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
strchars	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
contains_multibyte	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
chop	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chomp	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
_split_by_wcswidth_once	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_by_wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
trim	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim_start	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
trim_end	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
wrap	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
nr2byte	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
diffidx	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
substitute_last	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
dstring	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
lines	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:lines(str) abort$/;"	f
_pad_with_char	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
pad_left	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
pad_both_sides	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_between_letters	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
justify_equal_spacing	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
levenshtein_distance	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
padding_by_displaywidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
split_by_displaywidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
hash	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:hash(str) abort$/;"	f
truncate	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
strwidthpart	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
s:wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
_wcwidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
remove_ansi_sequences	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
escape_pattern	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
unescape_pattern	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
unescape	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
iconv	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
repair_posix_text	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
join_posix_lines	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
split_posix_text	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_SID() abort$/;"	f
_is_available	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_is_available() abort$/;"	f
is_available	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:is_available() abort$/;"	f
_define_ansi_highlights	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_define_ansi_highlights() abort$/;"	f
s:echorizer	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:echorizer = {$/;"	v
echorizer.eat	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.eat() abort$/;"	f
s:COLORS	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:COLORS = {$/;"	v
echorizer.echo_ansi	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo_ansi(code) abort$/;"	f
echorizer.echo	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo() abort$/;"	f
get_echorizer	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:get_echorizer(str) abort$/;"	f
echo	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:echo(str) abort$/;"	f
s:_plugin_name	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
vital#	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
s:plugin_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:vital_base_dir	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:project_root	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:is_vital_vim	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:loaded	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:loaded = {}$/;"	v
s:cache_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:cache_sid = {}$/;"	v
_function	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_function(fstr) abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_SID() abort$/;"	f
s:_s	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
_function	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_function(fstr) abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital = {}$/;"	v
new	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:new(plugin_name) abort$/;"	f
vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:vital_files() abort$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
import	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:import(name, ...) abort dict$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
load	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:load(...) abort dict$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
unload	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:unload() abort dict$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
exists	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:exists(name) abort dict$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
search	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:search(pattern) abort dict$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
plugin_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:plugin_name() abort dict$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
_self_vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_self_vital_files() abort$/;"	f
_global_vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_global_vital_files() abort$/;"	f
_extract_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
_file2module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_file2module(file) abort$/;"	f
_import	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_import(name) abort dict$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
_get_module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_get_module(name) abort dict$/;"	f
_get_builtin_module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
_import_func_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
_module_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_sid(name) abort$/;"	f
_module_path	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_path(name) abort$/;"	f
_module_sid_base_dir	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
_dot_to_sharp	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
_source	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_source(path) abort$/;"	f
_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
_execute	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_execute(cmd) abort$/;"	f
s:_unify_path_cache	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:_unify_path_cache = {}$/;"	v
_unify_path	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_unify_path(path) abort$/;"	f
s:SNR	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val])) . "]"'), '')$/;"	v
sid2sfuncs	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
_sfuncname	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
_uniq	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_uniq(list) abort$/;"	f
template_sink	plugged/vim-polyglot/autoload/fzf_gitignore.vim	/^function! s:template_sink(templates) abort$/;"	f
fzf_gitignore#run	plugged/vim-polyglot/autoload/fzf_gitignore.vim	/^function! fzf_gitignore#run() abort$/;"	f
s:global_variable_list	plugged/vim-polyglot/autoload/rust/debugging.vim	/^let s:global_variable_list = [$/;"	v
Echo	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! s:Echo(message) abort$/;"	f
EchoGlobalVariables	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! s:EchoGlobalVariables() abort$/;"	f
rust#debugging#Info	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#Info() abort$/;"	f
rust#debugging#InfoToClipboard	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#InfoToClipboard() abort$/;"	f
rust#debugging#InfoToFile	plugged/vim-polyglot/autoload/rust/debugging.vim	/^function! rust#debugging#InfoToFile(filename) abort$/;"	f
s:delimitMate_extra_excluded_regions	plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^let s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate'$/;"	v
rust#delimitmate#onMap	plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^function! rust#delimitmate#onMap() abort$/;"	f
rust#delimitmate#onUnmap	plugged/vim-polyglot/autoload/rust/delimitmate.vim	/^function! rust#delimitmate#onUnmap() abort$/;"	f
s:ctags_is_uctags	plugged/vim-polyglot/autoload/rust/tags.vim	/^let s:ctags_is_uctags = 0$/;"	v
s:checked_ctags	plugged/vim-polyglot/autoload/rust/tags.vim	/^let s:checked_ctags = 0$/;"	v
rust#tags#IsUCtags	plugged/vim-polyglot/autoload/rust/tags.vim	/^function! rust#tags#IsUCtags() abort$/;"	f
coffee#CoffeeSetUpVariables	plugged/vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
coffee#CoffeeSetUpErrorFormat	plugged/vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
s:words	plugged/vim-polyglot/autoload/clojurecomplete.vim	/^let s:words = ["*","*'","*1","*2","*3","*agent*","*allow-unresolved-vars*","*assert*","*clojure-version*","*command-line-args*","*compile-files*","*compile-path*","*compiler-options*","*data-readers*","*default-data-reader-fn*","*e","*err*","*file*","*flush-on-newline*","*fn-loader*","*in*","*math-context*","*ns*","*out*","*print-dup*","*print-length*","*print-level*","*print-meta*","*print-readably*","*read-eval*","*source-path*","*suppress-read*","*unchecked-math*","*use-context-classloader*","*verbose-defrecords*","*warn-on-reflection*","+","+'","-","-'","->","->>","->ArrayChunk","->Eduction","->Vec","->VecNode","->VecSeq","-cache-protocol-fn","-reset-methods",".","..","\/","<","<=","=","==",">",">=","EMPTY-NODE","Throwable->map","accessor","aclone","add-classpath","add-watch","agent","agent-error","agent-errors","aget","alength","alias","all-ns","alter","alter-meta!","alter-var-root","amap","ancestors","and","apply","areduce","array-map","as->","aset","aset-boolean","aset-byte","aset-char","aset-double","aset-float","aset-int","aset-long","aset-short","assert","assoc!","assoc","assoc-in","associative?","atom","await","await-for","await1","bases","bean","bigdec","bigint","biginteger","binding","bit-and","bit-and-not","bit-clear","bit-flip","bit-not","bit-or","bit-set","bit-shift-left","bit-shift-right","bit-test","bit-xor","boolean","boolean-array","booleans","bound-fn","bound-fn*","bound?","butlast","byte","byte-array","bytes","case","cast","cat","catch","char","char-array","char-escape-string","char-name-string","char?","chars","chunk","chunk-append","chunk-buffer","chunk-cons","chunk-first","chunk-next","chunk-rest","chunked-seq?","class","class?","clear-agent-errors","clojure-version","coll?","comment","commute","comp","comparator","compare","compare-and-set!","compile","complement","completing","concat","cond","cond->","cond->>","condp","conj!","conj","cons","constantly","construct-proxy","contains?","count","counted?","create-ns","create-struct","cycle","dec","dec'","decimal?","declare","dedupe","def","default-data-readers","definline","definterface","defmacro","defmethod","defmulti","defn","defn-","defonce","defprotocol","defrecord","defstruct","deftype","delay","delay?","deliver","denominator","deref","derive","descendants","destructure","disj!","disj","dissoc!","dissoc","distinct","distinct?","do","doall","dorun","doseq","dosync","dotimes","doto","double","double-array","doubles","drop","drop-last","drop-while","eduction","empty","empty?","ensure","ensure-reduced","enumeration-seq","error-handler","error-mode","eval","even?","every-pred","every?","ex-data","ex-info","extend","extend-protocol","extend-type","extenders","extends?","false?","ffirst","file-seq","filter","filterv","finally","find","find-keyword","find-ns","find-protocol-impl","find-protocol-method","find-var","first","flatten","float","float-array","float?","floats","flush","fn","fn","fn?","fnext","fnil","for","force","format","frequencies","future","future-call","future-cancel","future-cancelled?","future-done?","future?","gen-class","gen-interface","gensym","get","get-in","get-method","get-proxy-class","get-thread-bindings","get-validator","group-by","hash","hash-combine","hash-map","hash-ordered-coll","hash-set","hash-unordered-coll","identical?","identity","if","if-let","if-not","if-some","ifn?","import","in-ns","inc","inc'","init-proxy","instance?","int","int-array","integer?","interleave","intern","interpose","into","into-array","ints","io!","isa?","iterate","iterator-seq","juxt","keep","keep-indexed","key","keys","keyword","keyword?","last","lazy-cat","lazy-seq","let","let","letfn","line-seq","list","list*","list?","load","load-file","load-reader","load-string","loaded-libs","locking","long","long-array","longs","loop","loop","macroexpand","macroexpand-1","make-array","make-hierarchy","map","map-entry?","map-indexed","map?","mapcat","mapv","max","max-key","memfn","memoize","merge","merge-with","meta","method-sig","methods","min","min-key","mix-collection-hash","mod","monitor-enter","monitor-exit","munge","name","namespace","namespace-munge","neg?","new","newline","next","nfirst","nil?","nnext","not","not-any?","not-empty","not-every?","not=","ns","ns-aliases","ns-imports","ns-interns","ns-map","ns-name","ns-publics","ns-refers","ns-resolve","ns-unalias","ns-unmap","nth","nthnext","nthrest","num","number?","numerator","object-array","odd?","or","parents","partial","partition","partition-all","partition-by","pcalls","peek","persistent!","pmap","pop!","pop","pop-thread-bindings","pos?","pr","pr-str","prefer-method","prefers","primitives-classnames","print","print-ctor","print-dup","print-method","print-simple","print-str","printf","println","println-str","prn","prn-str","promise","proxy","proxy-call-with-super","proxy-mappings","proxy-name","proxy-super","push-thread-bindings","pvalues","quot","quote","rand","rand-int","rand-nth","random-sample","range","ratio?","rational?","rationalize","re-find","re-groups","re-matcher","re-matches","re-pattern","re-seq","read","read-line","read-string","reader-conditional","reader-conditional?","realized?","record?","recur","reduce","reduce-kv","reduced","reduced?","reductions","ref","ref-history-count","ref-max-history","ref-min-history","ref-set","refer","refer-clojure","reify","release-pending-sends","rem","remove","remove-all-methods","remove-method","remove-ns","remove-watch","repeat","repeatedly","replace","replicate","require","reset!","reset-meta!","resolve","rest","restart-agent","resultset-seq","reverse","reversible?","rseq","rsubseq","run!","satisfies?","second","select-keys","send","send-off","send-via","seq","seq?","seque","sequence","sequential?","set!","set","set-agent-send-executor!","set-agent-send-off-executor!","set-error-handler!","set-error-mode!","set-validator!","set?","short","short-array","shorts","shuffle","shutdown-agents","slurp","some","some->","some->>","some-fn","some?","sort","sort-by","sorted-map","sorted-map-by","sorted-set","sorted-set-by","sorted?","special-symbol?","spit","split-at","split-with","str","string?","struct","struct-map","subs","subseq","subvec","supers","swap!","symbol","symbol?","sync","tagged-literal","tagged-literal?","take","take-last","take-nth","take-while","test","the-ns","thread-bound?","throw","time","to-array","to-array-2d","trampoline","transduce","transient","tree-seq","true?","try","type","unchecked-add","unchecked-add-int","unchecked-byte","unchecked-char","unchecked-dec","unchecked-dec-int","unchecked-divide-int","unchecked-double","unchecked-float","unchecked-inc","unchecked-inc-int","unchecked-int","unchecked-long","unchecked-multiply","unchecked-multiply-int","unchecked-negate","unchecked-negate-int","unchecked-remainder-int","unchecked-short","unchecked-subtract","unchecked-subtract-int","underive","unquote","unquote-splicing","unreduced","unsigned-bit-shift-right","update","update-in","update-proxy","use","val","vals","var","var-get","var-set","var?","vary-meta","vec","vector","vector-of","vector?","volatile!","volatile?","vreset!","vswap!","when","when-first","when-let","when-not","when-some","while","with-bindings","with-bindings*","with-in-str","with-loading-context","with-local-vars","with-meta","with-open","with-out-str","with-precision","with-redefs","with-redefs-fn","xml-seq","zero?","zipmap"]$/;"	v
clojurecomplete#Complete	plugged/vim-polyglot/autoload/clojurecomplete.vim	/^function! clojurecomplete#Complete(findstart, base)$/;"	f
g:crystal#indent#syng_string	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_string =$/;"	v
g:crystal#indent#syng_strcom	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_strcom =$/;"	v
g:crystal#indent#syng_delim	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_delim =$/;"	v
g:crystal#indent#syng_strcomdelim	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#syng_strcomdelim =$/;"	v
g:crystal#indent#sol	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#sol = '\\%(\\_^\\|;\\)\\s*\\zs'$/;"	v
g:crystal#indent#eol	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#eol = '\\ze\\s*\\%(#.*\\)\\=\\%(\\_$\\|;\\)'$/;"	v
g:crystal#indent#skip_expr	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#skip_expr =$/;"	v
g:crystal#indent#link_attribute_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#link_attribute_regex =$/;"	v
g:crystal#indent#type_declaration_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#type_declaration_regex =$/;"	v
g:crystal#indent#operator_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#operator_regex =$/;"	v
g:crystal#indent#block_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#block_regex =$/;"	v
g:crystal#indent#hanging_assignment_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#hanging_assignment_regex =$/;"	v
g:crystal#indent#end_start_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_start_regex =$/;"	v
g:crystal#indent#end_middle_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_middle_regex =$/;"	v
g:crystal#indent#end_end_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#end_end_regex =$/;"	v
g:crystal#indent#crystal_indent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_indent_keywords =$/;"	v
g:crystal#indent#crystal_deindent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_deindent_keywords =$/;"	v
g:crystal#indent#macro_hanging_assignment_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_hanging_assignment_regex =$/;"	v
g:crystal#indent#macro_end_start_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_start_regex =$/;"	v
g:crystal#indent#macro_end_middle_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_middle_regex =$/;"	v
g:crystal#indent#macro_end_end_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#macro_end_end_regex =$/;"	v
g:crystal#indent#crystal_macro_indent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_macro_indent_keywords =$/;"	v
g:crystal#indent#crystal_macro_deindent_keywords	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#crystal_macro_deindent_keywords =$/;"	v
g:crystal#indent#bracket_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#bracket_continuation_regex =$/;"	v
g:crystal#indent#non_bracket_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#non_bracket_continuation_regex =$/;"	v
g:crystal#indent#continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#continuation_regex =$/;"	v
g:crystal#indent#dot_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#dot_continuation_regex = '\\.'.g:crystal#indent#eol$/;"	v
g:crystal#indent#bracket_switch_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#bracket_switch_continuation_regex =$/;"	v
g:crystal#indent#block_continuation_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#block_continuation_regex =$/;"	v
g:crystal#indent#leading_operator_regex	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#leading_operator_regex = g:crystal#indent#sol.'\\.'$/;"	v
g:crystal#indent#curr_line_callbacks	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#curr_line_callbacks = [$/;"	v
g:crystal#indent#prev_line_callbacks	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#prev_line_callbacks = [$/;"	v
g:crystal#indent#msl_callbacks	plugged/vim-polyglot/autoload/crystal/indent.vim	/^let g:crystal#indent#msl_callbacks = [$/;"	v
crystal#indent#ClosingBracketOnEmptyLine	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
crystal#indent#DeindentingKeyword	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#DeindentingKeyword(cline_info) abort$/;"	f
crystal#indent#DeindentingMacroTag	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#DeindentingMacroTag(cline_info) abort$/;"	f
crystal#indent#MultilineString	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#MultilineString(cline_info) abort$/;"	f
crystal#indent#LeadingOperator	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#LeadingOperator(cline_info) abort$/;"	f
crystal#indent#EmptyInsideString	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#EmptyInsideString(pline_info) abort$/;"	f
crystal#indent#StartOfFile	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#StartOfFile(pline_info) abort$/;"	f
crystal#indent#AfterTypeDeclaration	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterTypeDeclaration(pline_info) abort$/;"	f
crystal#indent#AfterLinkAttribute	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterLinkAttribute(pline_info) abort$/;"	f
crystal#indent#ContinuedLine	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ContinuedLine(pline_info) abort$/;"	f
crystal#indent#AfterBlockOpening	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterBlockOpening(pline_info) abort$/;"	f
crystal#indent#AfterLeadingOperator	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterLeadingOperator(pline_info) abort$/;"	f
crystal#indent#AfterUnbalancedBracket	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterUnbalancedBracket(pline_info) abort$/;"	f
crystal#indent#AfterEndKeyword	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterEndKeyword(pline_info) abort$/;"	f
crystal#indent#AfterEndMacroTag	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterEndMacroTag(pline_info) abort$/;"	f
crystal#indent#AfterIndentKeyword	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterIndentKeyword(pline_info) abort$/;"	f
crystal#indent#AfterIndentMacroTag	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#AfterIndentMacroTag(pline_info) abort$/;"	f
crystal#indent#PreviousNotMSL	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#PreviousNotMSL(msl_info) abort$/;"	f
crystal#indent#IndentingKeywordInMSL	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IndentingKeywordInMSL(msl_info) abort$/;"	f
crystal#indent#ContinuedHangingOperator	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ContinuedHangingOperator(msl_info) abort$/;"	f
crystal#indent#IsInString	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInString(lnum, col) abort$/;"	f
crystal#indent#IsInStringDelimiter	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringDelimiter(lnum, col) abort$/;"	f
crystal#indent#IsInStringOrComment	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringOrComment(lnum, col) abort$/;"	f
crystal#indent#IsInStringOrCommentOrDelimiter	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsInStringOrCommentOrDelimiter(lnum, col) abort$/;"	f
crystal#indent#IsAssignment	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsAssignment(str, pos) abort$/;"	f
crystal#indent#IsLineComment	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#IsLineComment(lnum) abort$/;"	f
crystal#indent#RelativeMacroDepth	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#RelativeMacroDepth(a, b) abort$/;"	f
crystal#indent#PrevNonBlank	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#PrevNonBlank(lnum) abort$/;"	f
crystal#indent#GetMSL	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#GetMSL(lnum) abort$/;"	f
crystal#indent#ExtraBrackets	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#ExtraBrackets(lnum) abort$/;"	f
crystal#indent#Match	plugged/vim-polyglot/autoload/crystal/indent.vim	/^function! crystal#indent#Match(lnum, regex) abort$/;"	f
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
default_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
widget_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let widget_role = [$/;"	v
document_structure	plugged/vim-polyglot/autoload/xml/aria.vim	/^let document_structure = [$/;"	v
landmark_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let landmark_role = [$/;"	v
dpub_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let dpub_role = [$/;"	v
graphic_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let graphic_role = [$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, dpub_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, graphic_role)$/;"	v
global_states_and_properties	plugged/vim-polyglot/autoload/xml/aria.vim	/^let global_states_and_properties = {$/;"	v
widget_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let widget_attributes = {$/;"	v
live_region_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let live_region_attributes = {$/;"	v
drag_and_drop_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {$/;"	v
relationship_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let relationship_attributes = {$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = global_states_and_properties$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, widget_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_role['input']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria-selected', 'aria-setsize']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['radio']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria-required'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-selected']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['searchbox'] = role_attributes['textbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['switch'] = role_attributes['checkbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-level', 'aria-multiselectable', 'aria-readonly']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['cell'] = abstract_role['section'] + ['aria-colindex', 'aria-colspan', 'aria-rowindex', 'aria-rowspan']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead'] + ['aria-sort']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['feed'] = role_attributes['list']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['figure'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['none'] = role_attributes['presentation']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['table'] = abstract_role['section'] + ['aria-colcount', 'aria-rowcount']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['term'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
aria_attributes_value	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
default_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let default_role = {$/;"	v
g:xmldata_aria	plugged/vim-polyglot/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
lang_tag	plugged/vim-polyglot/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
charset	plugged/vim-polyglot/autoload/xml/html5.vim	/^let charset = [$/;"	v
autofill_tokens	plugged/vim-polyglot/autoload/xml/html5.vim	/^let autofill_tokens = ['on', 'off', 'name', 'honorific-prefix', 'given-name', 'additional-name', 'family-name', 'honorific-suffix', 'nickname', 'organization-title', 'username', 'new-password', 'current-password', 'organization', 'street-address', 'address-line1', 'address-line2', 'address-line3', 'address-level4', 'address-level3', 'address-level2', 'address-level1', 'country', 'country-name', 'postal-code', 'cc-name', 'cc-given-name', 'cc-additional-name', 'cc-family-name', 'cc-number', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-csc', 'cc-type', 'transaction-currency', 'transaction-amount', 'language', 'bday', 'bday-day', 'bday-month', 'bday-year', 'sex', 'url', 'photo', 'tel', 'tel-country-code', 'tel-national', 'tel-area-code', 'tel-local', 'tel-local-prefix', 'tel-local-suffix', 'tel-extension', 'email', 'impp']$/;"	v
core_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], 'contextmenu': [], 'dir': ['ltr', 'rtl'], 'draggable': ['true', 'false'], 'hidden': ['hidden', ''], 'id': [], 'is': [], 'lang': lang_tag, 'spellcheck': ['true', 'false', ''], 'style': [], 'tabindex': [], 'title': []}$/;"	v
xml_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': ['http:\/\/www.w3.org\/1999\/xhtml', 'http:\/\/www.w3.org\/1998\/Math\/MathML', 'http:\/\/www.w3.org\/2000\/svg', 'http:\/\/www.w3.org\/1999\/xlink']}$/;"	v
body_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
g:html5_event_handler_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
event_handler_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythrough': [], 'onchange': [], 'onclick': [], 'oncontextmenu': [], 'ondblclick': [], 'ondrag': [], 'ondragend': [], 'ondragenter': [], 'ondragleave': [], 'ondragover': [], 'ondragstart': [], 'ondrop': [], 'ondurationchange': [], 'onemptied': [], 'onended': [], 'onerror': [], 'onfocus': [], 'onformchange': [], 'onforminput': [], 'oninput': [], 'oninvalid': [], 'onkeydown': [], 'onkeypress': [], 'onkeyup': [], 'onload': [], 'onloadeddata': [], 'onloadedmetadata': [], 'onloadstart': [], 'onmousedown': [], 'onmousemove': [], 'onmouseout': [], 'onmouseover': [], 'onmouseup': [], 'onmousewheel': [], 'onpause': [], 'onplay': [], 'onplaying': [], 'onprogress': [], 'onratechange': [], 'onreadystatechange': [], 'onscroll': [], 'onseeked': [], 'onseeking': [], 'onselect': [], 'onshow': [], 'onstalled': [], 'onsubmit': [], 'onsuspend': [], 'ontimeupdate': [], 'onvolumechange': [], 'onwaiting': [], 'onselectstart': [], 'onselectchange': []}$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
body_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblur': [], 'onerror': [], 'onfocus': [], 'onhashchange': [], 'onload': [], 'onmessage': [], 'onoffline': [], 'ononline': [], 'onpopstate': [], 'onredo': [], 'onresize': [], 'onstorage': [], 'onundo': [], 'onunload': []}$/;"	v
event_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
g:html5_rdfa_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
relrev	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'index', 'last', 'license', 'meta', 'next', 'p3pv1', 'prev', 'role', 'section', 'stylesheet', 'subsection', 'start', 'top', 'up']$/;"	v
rdfa_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': [], 'property': [], 'resource': [], 'rel': relrev, 'rev': relrev, 'typeof': [], 'vocab': []}$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
rdfa_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
g:html5_microdata_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
microdata_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'itemprop': [], 'itemref': []}$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
microdata_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
g:html5_aria_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
widget_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'searchbox', 'slider', 'spinbutton', 'status', 'switch', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
document_structure	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let document_structure = ['article', 'cell', 'columnheader', 'definition', 'directory', 'document', 'feed', 'figure', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'none', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator', 'table', 'term']$/;"	v
landmark_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
dpub_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let dpub_role = ['dpub-abstract', 'dpub-afterword', 'dpub-appendix', 'dpub-biblioentry', 'dpub-bibliography', 'dpub-biblioref', 'dpub-chapter', 'dpub-cover', 'dpub-epilogue', 'dpub-footnote', 'dpub-footnotes', 'dpub-foreword', 'dpub-glossary', 'dpub-glossdef', 'dpub-glossref', 'dpub-glossterm', 'dpub-index', 'dpub-locator', 'dpub-noteref', 'dpub-notice', 'dpub-pagebreak', 'dpub-pagelist', 'dpub-part', 'dpub-preface', 'dpub-prologue', 'dpub-pullquote', 'dpub-qna', 'dpub-subtitle', 'dpub-tip', 'dpub-title', 'dpub-toc']$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, dpub_role)$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
phrasing_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'code', 'var', 'samp', 'kbd', 'sup', 'sub', 'q', 'cite', 'span', 'bdo', 'bdi', 'br', 'wbr', 'ins', 'del', 'img', 'picture', 'embed', 'object', 'iframe', 'map', 'area', 'script', 'noscript', 'ruby', 'video', 'audio', 'input', 'textarea', 'select', 'button', 'label', 'output', 'datalist', 'keygen', 'progress', 'command', 'canvas', 'time', 'meter', 'data', 'content', 'shadow']$/;"	v
metadata_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
flow_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hgroup', 'address', 'blockquote', 'ins', 'del', 'element', 'object', 'main', 'map', 'noscript', 'section', 'nav', 'article', 'aside', 'header', 'footer', 'video', 'audio', 'figure', 'table', 'template', 'form', 'fieldset', 'menu', 'canvas', 'details']$/;"	v
linktypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'dns-prefetch', 'external', 'help', 'icon', 'license', 'next', 'nofollow', 'noreferrer', 'noopener', 'pingback', 'preconnect', 'prefetch', 'preload', 'prerender', 'prev', 'search', 'stylesheet', 'tag']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linktypes$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['manifest']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['canonical']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['import']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['webmention']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['search']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['sitemap']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['amphtml']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['apple-touch-icon', 'apple-touch-icon-precomposed', 'apple-touch-startup-image']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['chrome-webstore-item']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['hub']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['pgpkey']$/;"	v
abutton_dec	plugged/vim-polyglot/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|textarea'$/;"	v
crossorigin	plugged/vim-polyglot/autoload/xml/html5.vim	/^let crossorigin = ['anonymous', 'use-credentials']$/;"	v
referrerpolicy	plugged/vim-polyglot/autoload/xml/html5.vim	/^let referrerpolicy = ['no-referrer', 'no-referrer-when-downgrade', 'same-origin', 'origin', 'strict-origin', 'origin-when-cross-origin', 'strict-origin-when-cross-origin', 'unsafe-url']$/;"	v
g:xmldata_html5	plugged/vim-polyglot/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
g:xmldata_xsd	plugged/vim-polyglot/autoload/xml/xsd.vim	/^let g:xmldata_xsd = {$/;"	v
IsString	plugged/vim-polyglot/autoload/fish.vim	/^function! s:IsString(lnum, col)$/;"	f
IsContinuedLine	plugged/vim-polyglot/autoload/fish.vim	/^function! s:IsContinuedLine(lnum)$/;"	f
FindPrevLnum	plugged/vim-polyglot/autoload/fish.vim	/^function! s:FindPrevLnum(lnum)$/;"	f
IsSwitch	plugged/vim-polyglot/autoload/fish.vim	/^function! s:IsSwitch(lnum)$/;"	f
fish#Indent	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Indent()$/;"	f
fish#Format	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Format()$/;"	f
fish#Fold	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Fold()$/;"	f
fish#Complete	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Complete(findstart, base)$/;"	f
fish#errorformat	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#errorformat()$/;"	f
ledger#transaction_state_toggle	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_state_toggle(lnum, ...) abort$/;"	f
ledger#transaction_state_set	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_state_set(lnum, char) abort$/;"	f
ledger#transaction_date_set	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_date_set(lnum, type, ...) abort$/;"	f
ledger#transaction_from_lnum	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transaction_from_lnum(lnum) abort$/;"	f
ledger#transactions	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#transactions(...) abort$/;"	f
s:transaction	plugged/vim-polyglot/autoload/ledger.vim	/^let s:transaction = {} "{{{1$/;"	v
transaction.new	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.new() abort dict$/;"	f
transaction.from_lnum	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.from_lnum(lnum) abort dict "{{{2$/;"	f
transaction.set_state	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.set_state(char) abort dict "{{{2$/;"	f
transaction.parse_body	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.parse_body(...) abort dict "{{{2$/;"	f
transaction.format_head	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:transaction.format_head() abort dict "{{{2$/;"	f
ledger#declared_accounts	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#declared_accounts(...) abort$/;"	f
get_transaction_extents	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:get_transaction_extents(lnum) abort$/;"	f
ledger#find_in_tree	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#find_in_tree(tree, levels) abort$/;"	f
ledger#filter_items	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#filter_items(list, keyword) abort$/;"	f
findall	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:findall(text, rx) abort$/;"	f
goto_col	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:goto_col(pos, min_spaces) abort$/;"	f
decimalpos	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:decimalpos(expr) abort$/;"	f
ledger#align_commodity	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_commodity() abort$/;"	f
ledger#align_commodity_buffer	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_commodity_buffer() abort$/;"	f
ledger#align_amount_at_cursor	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#align_amount_at_cursor() abort$/;"	f
s:winpos_map	plugged/vim-polyglot/autoload/ledger.vim	/^let s:winpos_map = {$/;"	v
error_message	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:error_message(msg) abort$/;"	f
warning_message	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:warning_message(msg) abort$/;"	f
quickfix_toggle	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:quickfix_toggle(...) abort$/;"	f
quickfix_populate	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:quickfix_populate(data) abort$/;"	f
ledger_cmd	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:ledger_cmd(file, args) abort$/;"	f
ledger#autocomplete_and_align	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#autocomplete_and_align() abort$/;"	f
ledger#entry	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#entry() abort$/;"	f
ledger#report	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#report(file, args) abort$/;"	f
ledger#output	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#output(report) abort$/;"	f
ledger#register	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#register(file, args) abort$/;"	f
ledger#reconcile	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#reconcile(file, account, target_amount) abort$/;"	f
finish_reconciling	plugged/vim-polyglot/autoload/ledger.vim	/^function! s:finish_reconciling() abort$/;"	f
ledger#show_balance	plugged/vim-polyglot/autoload/ledger.vim	/^function! ledger#show_balance(file, ...) abort$/;"	f
s:cpo_save	plugged/vim-polyglot/autoload/terraform.vim	/^let s:cpo_save = &cpoptions$/;"	v
$TF_CLI_ARGS_fmt	plugged/vim-polyglot/autoload/terraform.vim	/^let $TF_CLI_ARGS_fmt=''$/;"	v
terraform#fmt	plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#fmt() abort$/;"	f
terraform#align	plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#align() abort$/;"	f
terraform#commands	plugged/vim-polyglot/autoload/terraform.vim	/^function! terraform#commands(ArgLead, CmdLine, CursorPos) abort$/;"	f
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:cpo_save = &cpo$/;"	v
polyglot#ft#Check_inp	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#Check_inp()$/;"	f
polyglot#ft#FTasm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTasm()$/;"	f
polyglot#ft#FTasmsyntax	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTasmsyntax()$/;"	f
polyglot#ft#FTVB	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTVB(alt)$/;"	f
polyglot#ft#FTbtm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTbtm()$/;"	f
polyglot#ft#BindzoneCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#BindzoneCheck(default)$/;"	f
polyglot#ft#FTlpc	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTlpc()$/;"	f
polyglot#ft#FTheader	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTheader()$/;"	f
polyglot#ft#FTchange	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTchange()$/;"	f
polyglot#ft#FTent	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTent()$/;"	f
polyglot#ft#EuphoriaCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#EuphoriaCheck()$/;"	f
polyglot#ft#DtraceCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#DtraceCheck()$/;"	f
polyglot#ft#FTe	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTe()$/;"	f
polyglot#ft#FThtml	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FThtml()$/;"	f
polyglot#ft#FTidl	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTidl()$/;"	f
polyglot#ft#ProtoCheck	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#ProtoCheck(default)$/;"	f
polyglot#ft#FTm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTm()$/;"	f
polyglot#ft#FTmms	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTmms()$/;"	f
polyglot#ft#FTnroff	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTnroff()$/;"	f
polyglot#ft#FTmm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTmm()$/;"	f
polyglot#ft#FTpl	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTpl()$/;"	f
polyglot#ft#FTinc	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTinc()$/;"	f
polyglot#ft#FTprogress_cweb	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_cweb()$/;"	f
polyglot#ft#FTprogress_asm	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_asm()$/;"	f
s:ft_pascal_comments	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:ft_pascal_comments = '^\\s*\\%({\\|(\\*\\|\/\/\\)'$/;"	v
s:ft_pascal_keywords	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:ft_pascal_keywords = '^\\s*\\%(program\\|unit\\|library\\|uses\\|begin\\|procedure\\|function\\|const\\|type\\|var\\)\\>'$/;"	v
polyglot#ft#FTprogress_pascal	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTprogress_pascal()$/;"	f
polyglot#ft#FTpp	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTpp()$/;"	f
polyglot#ft#FTr	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTr()$/;"	f
polyglot#ft#McSetf	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#McSetf()$/;"	f
polyglot#ft#SetFileTypeSH	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SetFileTypeSH(name)$/;"	f
polyglot#ft#SetFileTypeShell	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SetFileTypeShell(name)$/;"	f
polyglot#ft#CSH	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#CSH()$/;"	f
s:ft_rules_udev_rules_pattern	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^let s:ft_rules_udev_rules_pattern = '^\\s*\\cudev_rules\\s*=\\s*"\\([^"]\\{-1,}\\)\/*".*'$/;"	v
polyglot#ft#FTRules	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTRules()$/;"	f
polyglot#ft#SQL	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#SQL()$/;"	f
polyglot#ft#FTperl	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTperl()$/;"	f
polyglot#ft#FTtex	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTtex()$/;"	f
polyglot#ft#FTxml	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTxml()$/;"	f
polyglot#ft#FTy	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#FTy()$/;"	f
polyglot#ft#Redif	plugged/vim-polyglot/autoload/polyglot/ft.vim	/^func polyglot#ft#Redif()$/;"	f
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^let s:cpo_save = &cpo$/;"	v
polyglot#detect#Inp	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Inp(...)$/;"	f
polyglot#detect#Asa	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Asa(...)$/;"	f
polyglot#detect#Asp	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Asp(...)$/;"	f
polyglot#detect#H	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#H(...)$/;"	f
polyglot#detect#M	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#M(...)$/;"	f
polyglot#detect#Fs	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Fs(...)$/;"	f
polyglot#detect#Re	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Re(...)$/;"	f
polyglot#detect#Idr	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Idr(...)$/;"	f
polyglot#detect#Lidr	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Lidr(...)$/;"	f
polyglot#detect#Bas	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Bas(...)$/;"	f
polyglot#detect#Pm	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Pm(...)$/;"	f
polyglot#detect#Pl	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Pl(...)$/;"	f
polyglot#detect#T	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#T(...)$/;"	f
polyglot#detect#Tt2	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Tt2(...)$/;"	f
polyglot#detect#Html	plugged/vim-polyglot/autoload/polyglot/detect.vim	/^func! polyglot#detect#Html(...)$/;"	f
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:cpo_save = &cpo$/;"	v
did_load_polyglot	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let did_load_polyglot = 1$/;"	v
g:polyglot_initialized	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let g:polyglot_initialized = 0$/;"	v
polyglot#init#init	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! polyglot#init#init()$/;"	f
polyglot#init#is_disabled	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! polyglot#init#is_disabled(caller, name, path)$/;"	f
g:polyglot_is_disabled	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let g:polyglot_is_disabled = {}$/;"	v
s:new_polyglot_disabled	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:new_polyglot_disabled = []$/;"	v
base	plugged/vim-polyglot/autoload/polyglot/init.vim	/^    let base = split(pkg, '\\.')$/;"	v
g:polyglot_is_disabled	plugged/vim-polyglot/autoload/polyglot/init.vim	/^      let g:polyglot_is_disabled[pkg] = 1$/;"	v
g:polyglot_disabled_not_set	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let g:polyglot_disabled_not_set = 1$/;"	v
PolyglotVerify	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! PolyglotVerify()$/;"	f
SetDefault	plugged/vim-polyglot/autoload/polyglot/init.vim	/^function! s:SetDefault(name, value)$/;"	f
Setf	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:Setf(ft)$/;"	f
StarSetf	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:StarSetf(ft)$/;"	f
polyglot	plugged/vim-polyglot/autoload/polyglot/init.vim	/^augroup polyglot-observer | augroup END$/;"	a
filetypedetect	plugged/vim-polyglot/autoload/polyglot/init.vim	/^augroup filetypedetect$/;"	a
filetypedetect	plugged/vim-polyglot/autoload/polyglot/init.vim	/^augroup filetypedetect$/;"	a
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:cpo_save = &cpo$/;"	v
did_load_filetypes	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let did_load_filetypes = 1$/;"	v
Observe	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:Observe(fn)$/;"	f
g:loaded_sleuth	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let g:loaded_sleuth = 1$/;"	v
s:default_shiftwidth	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let s:default_shiftwidth = &shiftwidth$/;"	v
get_shiftwidth	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! s:get_shiftwidth(indents) abort$/;"	f
guess	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! s:guess(lines) abort$/;"	f
detect_indent	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! s:detect_indent() abort$/;"	f
SleuthIndicator	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  func! SleuthIndicator() abort$/;"	f
polyglot	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  augroup polyglot-sleuth$/;"	a
Sleuth	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  command! -bar -bang Sleuth call s:detect_indent()$/;"	c
filetypedetect	plugged/vim-polyglot/autoload/polyglot/init.vim	/^augroup filetypedetect$/;"	a
g:ft_ignore_pat	plugged/vim-polyglot/autoload/polyglot/init.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
filetypedetect	plugged/vim-polyglot/autoload/polyglot/init.vim	/^augroup filetypedetect$/;"	a
s:runtime	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:runtime = resolve($VIMRUNTIME)$/;"	v
s:base	plugged/vim-polyglot/autoload/polyglot/init.vim	/^let s:base = resolve(expand('<sfile>:p:h:h:h'))$/;"	v
process_rtp	plugged/vim-polyglot/autoload/polyglot/init.vim	/^func! s:process_rtp(rtp)$/;"	f
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^let s:cpo_save = &cpo$/;"	v
s:globs	plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^let s:globs = {$/;"	v
polyglot#sleuth#GlobForFiletype	plugged/vim-polyglot/autoload/polyglot/sleuth.vim	/^func! polyglot#sleuth#GlobForFiletype(type)$/;"	f
s:cpo_save	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:cpo_save = &cpo$/;"	v
polyglot#shebang#Detect	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! polyglot#shebang#Detect()$/;"	f
s:r_hashbang	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_hashbang = '^#!\\s*\\(\\S\\+\\)\\s*\\(.*\\)\\s*'$/;"	v
s:r_envflag	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_envflag = '%(\\S\\+=\\S\\+\\|-[iS]\\|--ignore-environment\\|--split-string\\)'$/;"	v
s:r_env	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:r_env = '^\\%(\\' . s:r_envflag . '\\s\\+\\)*\\(\\S\\+\\)'$/;"	v
Filetype	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! s:Filetype()$/;"	f
polyglot#shebang#VimDetect	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^func! polyglot#shebang#VimDetect()$/;"	f
s:interpreters	plugged/vim-polyglot/autoload/polyglot/shebang.vim	/^let s:interpreters = {$/;"	v
error	plugged/vim-polyglot/autoload/dart.vim	/^function! s:error(text) abort$/;"	f
cexpr	plugged/vim-polyglot/autoload/dart.vim	/^function! s:cexpr(errorformat, lines, reason) abort$/;"	f
clearQfList	plugged/vim-polyglot/autoload/dart.vim	/^function! s:clearQfList(reason) abort$/;"	f
dart#fmt	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#fmt(...) abort$/;"	f
FindDartFmt	plugged/vim-polyglot/autoload/dart.vim	/^function! s:FindDartFmt() abort$/;"	f
dart#analyzer	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#analyzer(q_args) abort$/;"	f
dart#tojs	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#tojs(q_args) abort$/;"	f
dart#resolveUri	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#resolveUri(uri) abort$/;"	f
PackageMap	plugged/vim-polyglot/autoload/dart.vim	/^function! s:PackageMap() abort$/;"	f
dart#ToggleFormatOnSave	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#ToggleFormatOnSave() abort$/;"	f
DotPackagesFile	plugged/vim-polyglot/autoload/dart.vim	/^function! s:DotPackagesFile() abort$/;"	f
dart#setModifiable	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#setModifiable() abort$/;"	f
s:csv_numeric_sort	plugged/vim-polyglot/autoload/csv.vim	/^let s:csv_numeric_sort = v:version > 704 || v:version == 704 && has("patch341")$/;"	v
csv#CSVSortValues	plugged/vim-polyglot/autoload/csv.vim	/^  fu! csv#CSVSortValues(i1, i2) "{{{3$/;"	f
csv#CSVArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSVArrangeCol(first, last, bang, limit) range "{{{2$/;"	f
csv#Warn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Warn(mess) "{{{3$/;"	f
csv#Init	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Init(start, end, ...) "{{{3$/;"	f
csv#LocalSettings	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#LocalSettings(type) "{{{3$/;"	f
csv#DoAutoCommands	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DoAutoCommands() "{{{3$/;"	f
csv#GetPat	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetPat(colnr, maxcolnr, pat, allowmore) "{{{3$/;"	f
csv#SearchColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SearchColumn(arg) "{{{3$/;"	f
csv#DeleteColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DeleteColumn(arg) "{{{3$/;"	f
csv#DelColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DelColumn(colnr) "{{{3$/;"	f
csv#HiCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#HiCol(colnr, bang) "{{{3$/;"	f
csv#GetDelimiter	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetDelimiter(first, last, ...) "{{{3$/;"	f
csv#WColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#WColumn(...) "{{{3$/;"	f
csv#MaxColumns	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MaxColumns(...) "{{{3$/;"	f
csv#ColWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColWidth(colnr, row, silent) "{{{3$/;"	f
csv#ArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ArrangeCol(first, last, bang, limit, ...) range "{{{3$/;"	f
csv#ProgressBar	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ProgressBar(cnt, max) "{{{3$/;"	f
csv#PrepUnArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepUnArrangeCol(first, last) "{{{3$/;"	f
csv#UnArrangeCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#UnArrangeCol(match) "{{{3$/;"	f
csv#CalculateColumnWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CalculateColumnWidth(row, silent) "{{{3$/;"	f
csv#Columnize	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Columnize(field) "{{{3$/;"	f
csv#GetColPat	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetColPat(colnr, zs_flag) "{{{3$/;"	f
csv#SetupAutoCmd	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SetupAutoCmd(window,bufnr) "{{{3$/;"	f
csv#CSV_SetOption	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSV_SetOption(csvfile, header, option, value) "{{{3$/;"	f
csv#SplitHeaderLine	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SplitHeaderLine(lines, bang, hor) "{{{3$/;"	f
csv#SplitHeaderToggle	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SplitHeaderToggle(hor) "{{{3$/;"	f
csv#MoveCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveCol(forward, line, ...) "{{{3$/;"	f
csv#SortComplete	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SortComplete(A,L,P) "{{{3$/;"	f
csv#Sort	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Sort(bang, line1, line2, colnr) range "{{{3$/;"	f
csv#CopyCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CopyCol(reg, col, cnt) "{{{3$/;"	f
csv#MoveColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveColumn(start, stop, ...) range "{{{3$/;"	f
csv#DupColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DupColumn(start, stop, ...) range "{{{3$/;"	f
csv#AddColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AddColumn(start, stop, ...) range "{{{3$/;"	f
csv#SumColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SumColumn(list) "{{{3$/;"	f
csv#AvgColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AvgColumn(list) "{{{3$/;"	f
csv#VarianceColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#VarianceColumn(list, is_population) "{{{3$/;"	f
csv#SmplVarianceColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SmplVarianceColumn(list) "{{{2$/;"	f
csv#PopVarianceColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PopVarianceColumn(list) "{{{2$/;"	f
csv#SmplStdDevColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SmplStdDevColumn(list) "{{{2$/;"	f
csv#PopStdDevColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PopStdDevColumn(list) "{{{2$/;"	f
csv#MaxColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MaxColumn(list) "{{{3$/;"	f
csv#CountColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CountColumn(list) "{{{3$/;"	f
csv#DoForEachColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DoForEachColumn(start, stop, bang) range "{{{3$/;"	f
csv#PrepareDoForEachColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepareDoForEachColumn(start, stop, bang) range"{{{3$/;"	f
csv#EscapeValue	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#EscapeValue(val) "{{{3$/;"	f
csv#FoldValue	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#FoldValue(lnum, filter) "{{{3$/;"	f
csv#PrepareFolding	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#PrepareFolding(add, match)  "{{{3$/;"	f
csv#ProcessFieldValue	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ProcessFieldValue(field) "{{{3$/;"	f
csv#OutputFilters	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#OutputFilters(bang) "{{{3$/;"	f
csv#SortFilter	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SortFilter(a, b) "{{{3$/;"	f
csv#GetColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetColumn(line, col, strip) "{{{3$/;"	f
csv#RemoveLastItem	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#RemoveLastItem(count) "{{{3$/;"	f
csv#DisableFolding	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DisableFolding() "{{{3$/;"	f
csv#NumberFormat	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NumberFormat() "{{{3$/;"	f
csv#CheckHeaderLine	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CheckHeaderLine() "{{{3$/;"	f
csv#AnalyzeColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#AnalyzeColumn(...) "{{{3$/;"	f
csv#Vertfold	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Vertfold(bang, col) "{{{3$/;"	f
csv#InitCSVFixedWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#InitCSVFixedWidth() "{{{3$/;"	f
csv#NewRecord	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NewRecord(line1, line2, count) "{{{3$/;"	f
csv#MoveOver	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#MoveOver(outer) "{{{3$/;"	f
csv#CSVMappings	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CSVMappings() "{{{3$/;"	f
csv#CommandDefinitions	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CommandDefinitions() "{{{3$/;"	f
csv#ColumnWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColumnWidth()$/;"	f
csv#Map	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Map(map, name, definition, ...) "{{{3$/;"	f
csv#LocalCmd	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#LocalCmd(name, definition, args) "{{{3$/;"	f
csv#Menu	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Menu(enable) "{{{3$/;"	f
csv#SaveOptions	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SaveOptions(list) "{{{3$/;"	f
csv#NewDelimiter	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NewDelimiter(newdelimiter, firstl, lastl) "{{{3$/;"	f
csv#IN	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#IN(list, value) "{{{3$/;"	f
csv#DuplicateRows	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#DuplicateRows(columnlist) "{{{3$/;"	f
csv#CompleteColumnNr	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CompleteColumnNr(A,L,P) "{{{3$/;"	f
csv#CheckDuplicates	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#CheckDuplicates(list) "{{{3$/;"	f
csv#Transpose	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Transpose(line1, line2) "{{{3$/;"	f
csv#NrColumns	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#NrColumns(bang) "{{{3$/;"	f
csv#Tabularize	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Tabularize(bang, first, last) "{{{3$/;"	f
csv#SubstituteInColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SubstituteInColumn(command, line1, line2) range "{{{3$/;"	f
csv#ColumnMode	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#ColumnMode() "{{{3$/;"	f
csv#Timeout	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#Timeout(start) "{{{3$/;"	f
csv#GetCursorChar	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetCursorChar() "{{{3$/;"	f
csv#SameFieldRegion	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SameFieldRegion() "{{{3$/;"	f
csv#GetCells	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#GetCells(list) "{{{3$/;"	f
CSV_CloseBuffer	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_CloseBuffer(buffer) "{{{3$/;"	f
CSV_SetSplitOptions	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_SetSplitOptions(window) "{{{3$/;"	f
csv#EvalColumn	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#EvalColumn(nr, func, first, last, ...) range "{{{3$/;"	f
csv#SumCSVRow	plugged/vim-polyglot/autoload/csv.vim	/^fu! csv#SumCSVRow(line, nr) "{{{3$/;"	f
CSVField	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVField(x, y, ...) "{{{3$/;"	f
CSVCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVCol(...) "{{{3$/;"	f
CSVPat	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVPat(colnr, ...) "{{{3$/;"	f
CSVSum	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVSum(col, fmt, first, last) "{{{3$/;"	f
CSVMax	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVMax(col, fmt, first, last) "{{{3$/;"	f
CSVMin	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVMin(col, fmt, first, last) "{{{3$/;"	f
CSVCount	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVCount(col, fmt, first, last, ...) "{{{3$/;"	f
CSVWidth	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSVWidth(...) "{{{3$/;"	f
CSV_WCol	plugged/vim-polyglot/autoload/csv.vim	/^fu! CSV_WCol(...) "{{{3$/;"	f
julia#set_syntax_version	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#set_syntax_version(jvers)$/;"	f
julia#toggle_deprecated_syntax	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#toggle_deprecated_syntax()$/;"	f
julia#toggle_function_blockassign	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#toggle_function_blockassign()$/;"	f
julia#function_block2assign	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#function_block2assign()$/;"	f
julia#function_assign2block	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#function_assign2block()$/;"	f
s:nonid_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:nonid_chars = "\\U01-\\U07" . "\\U0E-\\U1F" .$/;"	v
s:nonidS_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:nonidS_chars = "[:space:])\\\\U5D}" . s:nonid_chars$/;"	v
s:uniop_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:uniop_chars = "+\\\\U2D~¬√∛∜"$/;"	v
s:binop_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:binop_chars = "=+\\\\U2D*\/\\\\%÷^&|⊻<>≤≥≡≠≢∈∉⋅×∪∩⊆⊈⊂⊄⊊←→∋∌⊕⊖⊞⊟∘∧⊗⊘↑↓∨⊠±"$/;"	v
s:binop_chars_extra	plugged/vim-polyglot/autoload/julia.vim	/^let s:binop_chars_extra = "\\\\U214B\\\\U2190-\\\\U2194\\\\U219A\\\\U219B\\\\U21A0\\\\U21A3\\\\U21A6\\\\U21AE\\\\U21CE\\\\U21CF\\\\U21D2\\\\U21D4\\\\U21F4-\\\\U21FF\\\\U2208-\\\\U220D\\\\U2213\\\\U2214\\\\U2217-\\\\U2219\\\\U221D\\\\U2224-\\\\U222A\\\\U2237\\\\U2238\\\\U223A\\\\U223B\\\\U223D\\\\U223E\\\\U2240-\\\\U228B\\\\U228D-\\\\U229C\\\\U229E-\\\\U22A3\\\\U22A9\\\\U22AC\\\\U22AE\\\\U22B0-\\\\U22B7\\\\U22BB-\\\\U22BD\\\\U22C4-\\\\U22C7\\\\U22C9-\\\\U22D3\\\\U22D5-\\\\U22ED\\\\U22F2-\\\\U22FF\\\\U25B7\\\\U27C8\\\\U27C9\\\\U27D1\\\\U27D2\\\\U27D5-\\\\U27D7\\\\U27F0\\\\U27F1\\\\U27F5-\\\\U27F7\\\\U27F7\\\\U27F9-\\\\U27FF\\\\U2900-\\\\U2918\\\\U291D-\\\\U2920\\\\U2944-\\\\U2970\\\\U29B7\\\\U29B8\\\\U29BC\\\\U29BE-\\\\U29C1\\\\U29E1\\\\U29E3-\\\\U29E5\\\\U29F4\\\\U29F6\\\\U29F7\\\\U29FA\\\\U29FB\\\\U2A07\\\\U2A08\\\\U2A1D\\\\U2A22-\\\\U2A2E\\\\U2A30-\\\\U2A3D\\\\U2A40-\\\\U2A45\\\\U2A4A-\\\\U2A58\\\\U2A5A-\\\\U2A63\\\\U2A66\\\\U2A67\\\\U2A6A-\\\\U2AD9\\\\U2ADB\\\\U2AF7-\\\\U2AFA\\\\U2B30-\\\\U2B44\\\\U2B47-\\\\U2B4C\\\\UFFE9-\\\\UFFEC"$/;"	v
s:idregex	plugged/vim-polyglot/autoload/julia.vim	/^let s:idregex = '[^' . s:nonidS_chars . '0-9!' . s:uniop_chars . s:binop_chars . '][^' . s:nonidS_chars . s:uniop_chars . s:binop_chars . s:binop_chars_extra . ']*'$/;"	v
s:operators	plugged/vim-polyglot/autoload/julia.vim	/^let s:operators = '\\%(' . '\\.\\%([-+*\/^÷%|&!]\\|\/\/\\|\\\\\\|<<\\|>>>\\?\\)\\?=' .$/;"	v
julia#idundercursor	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#idundercursor()$/;"	f
julia#gotodefinition	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#gotodefinition()$/;"	f
smt2#RunSolver	plugged/vim-polyglot/autoload/smt2.vim	/^function! smt2#RunSolver()$/;"	f
smt2#RunSolverAndShowResult	plugged/vim-polyglot/autoload/smt2.vim	/^function! smt2#RunSolverAndShowResult()$/;"	f
smt2#PrintSolverVersion	plugged/vim-polyglot/autoload/smt2.vim	/^function! smt2#PrintSolverVersion()$/;"	f
s:path	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^let s:path = expand('<sfile>:h')$/;"	v
s:cmd	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^let s:cmd = join(['mix', 'run', '--no-start', '--no-compile', shellescape(s:path.'\/get_repos.exs')])$/;"	v
repo_list	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! s:repo_list() abort$/;"	f
db#adapter#ecto#canonicalize	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! db#adapter#ecto#canonicalize(url) abort$/;"	f
db#adapter#ecto#complete_opaque	plugged/vim-polyglot/autoload/db/adapter/ecto.vim	/^function! db#adapter#ecto#complete_opaque(url) abort$/;"	f
sw	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^  function! s:sw()$/;"	f
sw	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^  function! s:sw()$/;"	f
s:start_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^let s:start_tag = '<\\_s*\\%(>\\|\\${\\|\\%(\\<[-:._$A-Za-z0-9]\\+\\>\\)\\)'$/;"	v
s:end_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^let s:end_tag = '\\%(<\\_s*\/\\_s*\\%(\\<[-:._$A-Za-z0-9]\\+\\>\\)\\_s*>\\|\/\\_s*>\\)'$/;"	v
trim	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:trim(line)$/;"	f
syntax_stack_at	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_stack_at(lnum, col)$/;"	f
syntax_at	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_at(lnum, col)$/;"	f
start_col	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:start_col(lnum)$/;"	f
start_syntax	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:start_syntax(lnum)$/;"	f
skip_if_not	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:skip_if_not(current_lnum, ...)$/;"	f
is_opening_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_opening_tag(syntax)$/;"	f
is_closing_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_closing_tag(syntax)$/;"	f
is_jsx_region	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_region(syntax)$/;"	f
is_jsx_element	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_element(syntax)$/;"	f
is_jsx_expression	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_expression(syntax)$/;"	f
is_jsx_brace	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_brace(syntax)$/;"	f
is_jsx_comment	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_comment(syntax)$/;"	f
is_comment	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_comment(syntax)$/;"	f
is_jsx_backticks	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_jsx_backticks(syntax)$/;"	f
prev_lnum	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:prev_lnum(lnum)$/;"	f
is_parent_element	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:is_parent_element(pos, element_count)$/;"	f
jsx_indent_trail_punct	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_trail_punct(lnum)$/;"	f
jsx_indent_closing_tag	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_closing_tag(lnum)$/;"	f
jsx_indent_element	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_element(lnum)$/;"	f
jsx_indent_comment	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_comment(lnum)$/;"	f
jsx_indent_backticks	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:jsx_indent_backticks(lnum)$/;"	f
syntax_context	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function s:syntax_context(lnum)$/;"	f
jsx_pretty#indent#get	plugged/vim-polyglot/autoload/jsx_pretty/indent.vim	/^function! jsx_pretty#indent#get(js_indent)$/;"	f
jsx_pretty#comment#update_commentstring	plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! jsx_pretty#comment#update_commentstring(original)$/;"	f
syn_name	plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! s:syn_name(lnum, cnum)$/;"	f
syn_contains	plugged/vim-polyglot/autoload/jsx_pretty/comment.vim	/^function! s:syn_contains(lnum, cnum, syn_name)$/;"	f
g:julia#doc#juliapath	plugged/vim-polyglot/autoload/julia/doc.vim	/^    let g:julia#doc#juliapath = 'julia'$/;"	v
pathlist	plugged/vim-polyglot/autoload/julia/doc.vim	/^    let pathlist = sort(glob($LOCALAPPDATA . '\\Julia-*\\bin\\julia.exe', 1, 1))$/;"	v
g:julia#doc#juliapath	plugged/vim-polyglot/autoload/julia/doc.vim	/^    let g:julia#doc#juliapath = get(pathlist, -1, 'julia')$/;"	v
g:julia#doc#juliapath	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let g:julia#doc#juliapath = get(g:, 'julia#doc#juliapath', 'julia')$/;"	v
version	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:version() abort$/;"	f
s:VERSION	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:VERSION = s:version()$/;"	v
s:NODOCPATTERN	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:NODOCPATTERN = '\\C\\VNo documentation found.'$/;"	v
julia#doc#lookup	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#lookup(keyword, ...) abort$/;"	f
julia#doc#open	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#open(keyword) abort$/;"	f
write_to_preview_window	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:write_to_preview_window(content, ftype, buffername)$/;"	f
warn	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:warn(...) abort$/;"	f
s:KEYWORDPATTERN	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:KEYWORDPATTERN = '\\m@\\?\\h\\k*!\\?'$/;"	v
julia#doc#keywordprg	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#keywordprg(word) abort$/;"	f
s:ESCAPEDCHARS	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:ESCAPEDCHARS = " \\t\\n\\"#%'*<?`|"$/;"	v
s:ESCAPEDCHARS	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:ESCAPEDCHARS = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:FNAMEESCAPEPATTERN	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:FNAMEESCAPEPATTERN = '\\\\\\ze[' . escape(s:ESCAPEDCHARS, ']^-\\') . ']'$/;"	v
unfnameescape	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:unfnameescape(str) abort$/;"	f
s:HELPPROMPT	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:HELPPROMPT = 'help?> '$/;"	v
s:HELPHISTORY	plugged/vim-polyglot/autoload/julia/doc.vim	/^let s:HELPHISTORY = []$/;"	v
julia#doc#prompt	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#prompt() abort$/;"	f
savehistory	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:savehistory(name) abort$/;"	f
restorehistory	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:restorehistory(name, history) abort$/;"	f
s:REPL_SEARCH	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:REPL_SEARCH = 'Base.Docs.repl_search'$/;"	v
s:REPL_SEARCH	plugged/vim-polyglot/autoload/julia/doc.vim	/^  let s:REPL_SEARCH = 'import REPL.repl_search; repl_search'$/;"	v
julia#doc#complete	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! julia#doc#complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
likely	plugged/vim-polyglot/autoload/julia/doc.vim	/^function! s:likely(str) abort$/;"	f
g:rustfmt_autosave	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_autosave = 0$/;"	v
g:rustfmt_command	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_command = "rustfmt"$/;"	v
g:rustfmt_options	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_options = ""$/;"	v
g:rustfmt_fail_silently	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_fail_silently = 0$/;"	v
rustfmt#DetectVersion	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#DetectVersion()$/;"	f
g:rustfmt_emit_files	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_emit_files = s:rustfmt_version >= "0.8.2"$/;"	v
g:rustfmt_file_lines	plugged/vim-polyglot/autoload/rustfmt.vim	/^    let g:rustfmt_file_lines = s:rustfmt_help =~# "--file-lines JSON"$/;"	v
s:got_fmt_error	plugged/vim-polyglot/autoload/rustfmt.vim	/^let s:got_fmt_error = 0$/;"	v
rustfmt#Load	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Load()$/;"	f
RustfmtWriteMode	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtWriteMode()$/;"	f
RustfmtConfigOptions	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtConfigOptions()$/;"	f
RustfmtCommandRange	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommandRange(filename, line1, line2)$/;"	f
RustfmtCommand	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommand()$/;"	f
DeleteLines	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:DeleteLines(start, end) abort$/;"	f
RunRustfmt	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RunRustfmt(command, tmpname, from_writepre)$/;"	f
rustfmt#FormatRange	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#FormatRange(line1, line2)$/;"	f
rustfmt#Format	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Format()$/;"	f
rustfmt#Cmd	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Cmd()$/;"	f
rustfmt#PreWrite	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#PreWrite()$/;"	f
g:jsonnet_command	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_command = "jsonnet"$/;"	v
g:jsonnet_fmt_command	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_command = "jsonnetfmt"$/;"	v
g:jsonnet_fmt_options	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_options = ''$/;"	v
g:jsonnet_fmt_fail_silently	plugged/vim-polyglot/autoload/jsonnet.vim	/^  let g:jsonnet_fmt_fail_silently = 1$/;"	v
jsonnet#System	plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#System(str, ...)$/;"	f
jsonnet#CheckBinPath	plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#CheckBinPath(binName)$/;"	f
jsonnet#Format	plugged/vim-polyglot/autoload/jsonnet.vim	/^function! jsonnet#Format()$/;"	f
s:default_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^let s:default_mappings = {$/;"	v
getmapchars	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:getmapchars(function)$/;"	f
map_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_move(function, toend, backwards)$/;"	f
julia_blocks#owrapper_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#owrapper_move(oper, function, toend, backwards)$/;"	f
julia_blocks#vwrapper_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#vwrapper_move(function)$/;"	f
unmap	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:unmap(function)$/;"	f
escape	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:escape(chars)$/;"	f
map_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_select(function)$/;"	f
julia_blocks#owrapper_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#owrapper_select(oper, function) ", toend, backwards)$/;"	f
julia_blocks#vwrapper_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#vwrapper_select(function)$/;"	f
map_aux	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_aux(function)$/;"	f
s:julia_blocks_functions	plugged/vim-polyglot/autoload/julia_blocks.vim	/^let s:julia_blocks_functions = {$/;"	v
julia_blocks#init_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#init_mappings()$/;"	f
julia_blocks#remove_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#remove_mappings()$/;"	f
restore_view	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:restore_view()$/;"	f
abort	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:abort()$/;"	f
set_mark_tick	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:set_mark_tick(...)$/;"	f
get_save_pos	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:get_save_pos(...)$/;"	f
on_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:on_end()$/;"	f
on_begin	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:on_begin()$/;"	f
matchit	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:matchit()$/;"	f
move_before_begin	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:move_before_begin()$/;"	f
cycle_until_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:cycle_until_end()$/;"	f
moveto_block_delim	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:moveto_block_delim(toend, backwards, ...)$/;"	f
compare_pos	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:compare_pos(pos1, pos2)$/;"	f
julia_blocks#move_N	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_N()$/;"	f
julia_blocks#move_n	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_n()$/;"	f
julia_blocks#move_p	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_p()$/;"	f
julia_blocks#move_P	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_P()$/;"	f
moveto_currentblock_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:moveto_currentblock_end()$/;"	f
julia_blocks#moveblock_N	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_N()$/;"	f
julia_blocks#moveblock_n	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_n()$/;"	f
julia_blocks#moveblock_p	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_p()$/;"	f
julia_blocks#moveblock_P	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_P()$/;"	f
julia_blocks#whereami	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#whereami()$/;"	f
find_block	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:find_block(current_mode)$/;"	f
repeated_find	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:repeated_find(ai_mode)$/;"	f
julia_blocks#select_a	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#select_a(...)$/;"	f
julia_blocks#select_i	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#select_i()$/;"	f
julia_blocks#select_reset	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function julia_blocks#select_reset()$/;"	f
cursor_moved	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:cursor_moved(...)$/;"	f
cargo#Load	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#Load()$/;"	f
cargo#cmd	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#cmd(args) abort$/;"	f
nearest_cargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! s:nearest_cargo(...) abort$/;"	f
cargo#nearestCargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestCargo(is_getcwd) abort$/;"	f
cargo#nearestWorkspaceCargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestWorkspaceCargo(is_getcwd) abort$/;"	f
cargo#nearestRootCargo	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#nearestRootCargo(is_getcwd) abort$/;"	f
cargo#build	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#build(args)$/;"	f
cargo#check	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#check(args)$/;"	f
cargo#clean	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#clean(args)$/;"	f
cargo#doc	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#doc(args)$/;"	f
cargo#new	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#new(args)$/;"	f
cargo#init	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#init(args)$/;"	f
cargo#run	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#run(args)$/;"	f
cargo#test	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#test(args)$/;"	f
cargo#bench	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#bench(args)$/;"	f
cargo#update	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#update(args)$/;"	f
cargo#search	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#search(args)$/;"	f
cargo#publish	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#publish(args)$/;"	f
cargo#install	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#install(args)$/;"	f
cargo#runtarget	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#runtarget(args)$/;"	f
puppet#align#IndentLevel	plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#IndentLevel(lnum)$/;"	f
puppet#align#LinesInBlock	plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#LinesInBlock(lnum)$/;"	f
puppet#align#AlignHashrockets	plugged/vim-polyglot/autoload/puppet/align.vim	/^function! puppet#align#AlignHashrockets(...) abort$/;"	f
s:ctags_type	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^  let s:ctags_type = 0$/;"	v
s:ctags_options_dir	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^let s:ctags_options_dir = expand('<sfile>:p:h:h:h') . '\/ctags\/'$/;"	v
puppet#ctags#OptionFile	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^function! puppet#ctags#OptionFile()$/;"	f
puppet#ctags#Type	plugged/vim-polyglot/autoload/puppet/ctags.vim	/^function! puppet#ctags#Type()$/;"	f
puppet#format#Format	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Format() abort$/;"	f
puppet#format#Hashrocket	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Hashrocket(start_lnum, end_lnum) abort$/;"	f
puppet#format#Indention	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Indention(start_lnum, end_lnum) abort$/;"	f
puppet#format#Fallback	plugged/vim-polyglot/autoload/puppet/format.vim	/^function! puppet#format#Fallback(start_lnum, end_lnum) abort$/;"	f
CacheRstFold	plugged/vim-polyglot/autoload/RstFold.vim	/^function s:CacheRstFold()$/;"	f
save_cursor	plugged/vim-polyglot/autoload/RstFold.vim	/^  let save_cursor = getcurpos()$/;"	v
save_mark	plugged/vim-polyglot/autoload/RstFold.vim	/^  let save_mark = getpos("'[")$/;"	v
b:RstFoldCache	plugged/vim-polyglot/autoload/RstFold.vim	/^  let b:RstFoldCache = closure.levels$/;"	v
RstFold#GetRstFold	plugged/vim-polyglot/autoload/RstFold.vim	/^function RstFold#GetRstFold()$/;"	f
RstFold#GetRstFoldText	plugged/vim-polyglot/autoload/RstFold.vim	/^function RstFold#GetRstFoldText()$/;"	f
graphql#has_syntax_group	plugged/vim-polyglot/autoload/graphql.vim	/^function! graphql#has_syntax_group(group) abort$/;"	f
graphql#javascript_tags	plugged/vim-polyglot/autoload/graphql.vim	/^function! graphql#javascript_tags() abort$/;"	f
L2U_Setup	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_Setup()$/;"	f
L2U_SetupGlobal	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetupGlobal()$/;"	f
LaTeXtoUnicode#Refresh	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Refresh()$/;"	f
LaTeXtoUnicode#Enable	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Enable(...)$/;"	f
LaTeXtoUnicode#Disable	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Disable(...)$/;"	f
L2U_deprecated_options	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_deprecated_options()$/;"	f
L2U_file_type_regex	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_file_type_regex(ft)$/;"	f
L2U_ResetLastCompletionInfo	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ResetLastCompletionInfo()$/;"	f
L2U_ismatch	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ismatch()$/;"	f
L2U_partmatches_sort	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_partmatches_sort(p1, p2)$/;"	f
L2U_fix_compose_chars	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_fix_compose_chars(uni)$/;"	f
L2U_longest_common_prefix	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_longest_common_prefix(partmatches)$/;"	f
LaTeXtoUnicode#omnifunc	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#omnifunc(findstart, base)$/;"	f
LaTeXtoUnicode#PutLiteral	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#PutLiteral(k)$/;"	f
L2U_SetFallbackMapping	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetFallbackMapping(s, k)$/;"	f
LaTeXtoUnicode#Tab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Tab()$/;"	f
LaTeXtoUnicode#FallbackCallback	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#FallbackCallback()$/;"	f
LaTeXtoUnicode#CmdTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#CmdTab(trigger)$/;"	f
L2U_SetTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetTab(wait_insert_enter)$/;"	f
L2U_UnsetTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetTab()$/;"	f
LaTeXtoUnicode#AutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#AutoSub(...)$/;"	f
L2U_SetAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetAutoSub(wait_insert_enter)$/;"	f
L2U_UnsetAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetAutoSub()$/;"	f
L2U_SetKeymap	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetKeymap()$/;"	f
L2U_UnsetKeymap	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetKeymap()$/;"	f
LaTeXtoUnicode#Init	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Init(...)$/;"	f
LaTeXtoUnicode#Toggle	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Toggle()$/;"	f
julia_latex_symbols#get_dict	plugged/vim-polyglot/autoload/julia_latex_symbols.vim	/^function! julia_latex_symbols#get_dict()$/;"	f
ErrMsg	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
g:rubycomplete_rails	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rubycomplete_classes_in_global	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_buffer_loading	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_include_object	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
s:end_start_regex	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_start_regex =$/;"	v
s:end_middle_regex	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_end_regex	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:rubycomplete_debug	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
dprint	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
GetBufferRubyModule	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubyClass	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubySingletonMethods	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetBufferRubyEntity	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
IsInClassDef	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsPosInClassDef	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsInComment	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInComment(pos)$/;"	f
GetRubyVarType	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
rubycomplete#Init	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
rubycomplete#Complete	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
DefRuby	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
s:rubycomplete_rails_loaded	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
b:indentexpr_base	plugged/vim-polyglot/after/indent/javascript-2.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
GetJavascriptGraphQLIndent	plugged/vim-polyglot/after/indent/javascript-2.vim	/^function GetJavascriptGraphQLIndent()$/;"	f
s:save_cpo	plugged/vim-polyglot/after/indent/objc.vim	/^let s:save_cpo = &cpo$/;"	v
s:topLev	plugged/vim-polyglot/after/indent/objc.vim	/^let s:topLev = '^\\s*@\\%(class\\|end\\|implementation\\|interface\\|protocol\\|\\)\\>'$/;"	v
GetObjCIndentImproved	plugged/vim-polyglot/after/indent/objc.vim	/^function! GetObjCIndentImproved()$/;"	f
s:cpo_save	plugged/vim-polyglot/after/indent/tex.vim	/^let s:cpo_save = &cpo$/;"	v
b:did_indent	plugged/vim-polyglot/after/indent/tex.vim	/^let b:did_indent = 1$/;"	v
g:tex_indent_items	plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_indent_items = 1$/;"	v
g:tex_indent_brace	plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_indent_brace = 1$/;"	v
g:tex_max_scan_line	plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_max_scan_line = 60$/;"	v
g:tex_itemize_env	plugged/vim-polyglot/after/indent/tex.vim	/^        let g:tex_itemize_env = 'itemize\\|description\\|enumerate\\|thebibliography'$/;"	v
g:tex_items	plugged/vim-polyglot/after/indent/tex.vim	/^        let g:tex_items = '\\\\bibitem\\|\\\\item'$/;"	v
g:tex_items	plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_items = ''$/;"	v
g:tex_noindent_env	plugged/vim-polyglot/after/indent/tex.vim	/^    let g:tex_noindent_env = 'document\\|verbatim\\|lstlisting'$/;"	v
g:tex_items	plugged/vim-polyglot/after/indent/tex.vim	/^let g:tex_items = '^\\s*' . substitute(g:tex_items, '^\\(\\^\\\\s\\*\\)*', '', '')$/;"	v
GetTeXIndent	plugged/vim-polyglot/after/indent/tex.vim	/^function! GetTeXIndent() " {{{$/;"	f
GetLastBeginIndentation	plugged/vim-polyglot/after/indent/tex.vim	/^function! s:GetLastBeginIndentation(lnum) " {{{$/;"	f
GetEndIndentation	plugged/vim-polyglot/after/indent/tex.vim	/^function! s:GetEndIndentation(lnum) " {{{$/;"	f
CheckPairedIsLastCharacter	plugged/vim-polyglot/after/indent/tex.vim	/^function! s:CheckPairedIsLastCharacter(lnum, col) "{{{$/;"	f
s:did_indent	plugged/vim-polyglot/after/indent/tsx.vim	/^  let s:did_indent = b:did_indent$/;"	v
s:keepcpo	plugged/vim-polyglot/after/indent/tsx.vim	/^let s:keepcpo = &cpo$/;"	v
b:did_indent	plugged/vim-polyglot/after/indent/tsx.vim	/^  let b:did_indent = s:did_indent$/;"	v
GetJsxIndent	plugged/vim-polyglot/after/indent/tsx.vim	/^function! GetJsxIndent()$/;"	f
b:indentexpr_base	plugged/vim-polyglot/after/indent/php.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
GetPHPGraphQLIndent	plugged/vim-polyglot/after/indent/php.vim	/^function GetPHPGraphQLIndent()$/;"	f
b:indentexpr_base	plugged/vim-polyglot/after/indent/typescript.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
GetTypescriptGraphQLIndent	plugged/vim-polyglot/after/indent/typescript.vim	/^function GetTypescriptGraphQLIndent()$/;"	f
b:did_indent	plugged/vim-polyglot/after/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:undo_indent	plugged/vim-polyglot/after/indent/html.vim	/^let b:undo_indent = "setlocal inde< indk<"$/;"	v
b:hi_indent	plugged/vim-polyglot/after/indent/html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
s:cpo_save	plugged/vim-polyglot/after/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
HtmlIndent_CheckUserSettings	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f
b:hi_lasttick	plugged/vim-polyglot/after/indent/html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_newstate	plugged/vim-polyglot/after/indent/html.vim	/^let b:hi_newstate = {}$/;"	v
s:countonly	plugged/vim-polyglot/after/indent/html.vim	/^let s:countonly = 0$/;"	v
s:indent_tags	plugged/vim-polyglot/after/indent/html.vim	/^let s:indent_tags = {}$/;"	v
s:endtags	plugged/vim-polyglot/after/indent/html.vim	/^let s:endtags = [0,0,0,0,0,0,0]   " long enough for the highest index$/;"	v
AddITags	plugged/vim-polyglot/after/indent/html.vim	/^func! s:AddITags(tags, taglist)$/;"	f
RemoveITags	plugged/vim-polyglot/after/indent/html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f
AddBlockTag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f
HtmlIndent_IsOpenTag	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f
get_tag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:get_tag(tagname)$/;"	f
CountITags	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CountITags(text)$/;"	f
CountTagsAndState	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CountTagsAndState(text)$/;"	f
CheckTag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CheckTag(itag)$/;"	f
CheckBlockTag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f
CheckCustomTag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CheckCustomTag(ctag)$/;"	f
GetScriptType	plugged/vim-polyglot/after/indent/html.vim	/^func! s:GetScriptType(str)$/;"	f
FreshState	plugged/vim-polyglot/after/indent/html.vim	/^func! s:FreshState(lnum)$/;"	f
Alien2	plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien2()$/;"	f
Alien3	plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien3()$/;"	f
Alien4	plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien4()$/;"	f
CSSIndent	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CSSIndent()$/;"	f
CssUnfinished	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CssUnfinished(text)$/;"	f
CssFirstUnfinished	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f
CssPrevNonComment	plugged/vim-polyglot/after/indent/html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f
HtmlIndent_CountBraces	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f
Alien5	plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien5()$/;"	f
Alien6	plugged/vim-polyglot/after/indent/html.vim	/^func! s:Alien6()$/;"	f
HtmlIndent_FindTagStart	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f
HtmlIndent_FindStartTag	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f
HtmlIndent_FindTagEnd	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f
InsideTag	plugged/vim-polyglot/after/indent/html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f
HtmlIndent	plugged/vim-polyglot/after/indent/html.vim	/^func! HtmlIndent()$/;"	f
s:did_indent	plugged/vim-polyglot/after/indent/jsx.vim	/^  let s:did_indent = b:did_indent$/;"	v
s:keepcpo	plugged/vim-polyglot/after/indent/jsx.vim	/^let s:keepcpo = &cpo$/;"	v
b:did_indent	plugged/vim-polyglot/after/indent/jsx.vim	/^  let b:did_indent = s:did_indent$/;"	v
GetJsxIndent	plugged/vim-polyglot/after/indent/jsx.vim	/^function! GetJsxIndent()$/;"	f
b:undo_ftplugin	plugged/vim-polyglot/after/ftplugin/javascript-1.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/after/ftplugin/javascript-1.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
g:llvm_ext_no_mapping	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let g:llvm_ext_no_mapping = get(g:, 'llvm_ext_no_mapping', 0)$/;"	v
g:llvm_ext_lli_executable	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let g:llvm_ext_lli_executable = get(g:, 'llvm_ext_lli_executable', 'lli')$/;"	v
s:KIND_BLOCK_PREC	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_BLOCK_PREC = 0$/;"	v
s:KIND_BLOCK_FOLLOW	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_BLOCK_FOLLOW = 1$/;"	v
s:KIND_FUNC_BEGIN	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_FUNC_BEGIN = 2$/;"	v
s:KIND_FUNC_END	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^let s:KIND_FUNC_END = 3$/;"	v
section_delim_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:section_delim_at(lnum) abort$/;"	f
is_section_delim	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:is_section_delim(line, func_delim) abort$/;"	f
next_section	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:next_section(stop_func_begin) abort$/;"	f
prev_section	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:prev_section(stop_func_begin) abort$/;"	f
<Plug>(llvm-next-section-begin)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-next-section-begin) :<C-u>call <SID>next_section(1)<CR>$/;"	m
<Plug>(llvm-prev-section-begin)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-prev-section-begin) :<C-u>call <SID>prev_section(1)<CR>$/;"	m
<Plug>(llvm-next-section-end)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-next-section-end) :<C-u>call <SID>next_section(0)<CR>$/;"	m
<Plug>(llvm-prev-section-end)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-prev-section-end) :<C-u>call <SID>prev_section(0)<CR>$/;"	m
]]	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>]] <Plug>(llvm-next-section-begin)$/;"	m
[[	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[[ <Plug>(llvm-prev-section-begin)$/;"	m
][	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>][ <Plug>(llvm-next-section-end)$/;"	m
[]	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[] <Plug>(llvm-prev-section-end)$/;"	m
function_range_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:function_range_at(linum) abort$/;"	f
blocks_graph_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:blocks_graph_at(linum) abort$/;"	f
find_pred_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:find_pred_block(linum) abort$/;"	f
move_to_pred_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:move_to_pred_block() abort$/;"	f
find_following_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:find_following_block(linum) abort$/;"	f
move_to_following_block	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:move_to_following_block() abort$/;"	f
<Plug>(llvm-move-block-prev)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-move-block-prev) :<C-u>call <SID>move_to_pred_block()<CR>$/;"	m
<Plug>(llvm-move-block-next)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-move-block-next) :<C-u>call <SID>move_to_following_block()<CR>$/;"	m
[b	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>[b <Plug>(llvm-move-block-prev)$/;"	m
]b	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>]b <Plug>(llvm-move-block-next)$/;"	m
get_func_identifiers	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:get_func_identifiers(line) abort$/;"	f
get_identifiers	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:get_identifiers(line) abort$/;"	f
extract_identifier	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:extract_identifier(word) abort$/;"	f
jump_to_identifier_at	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:jump_to_identifier_at(linum, ident) abort$/;"	f
browser_open_command	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:browser_open_command() abort$/;"	f
open_browser	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:open_browser(url) abort$/;"	f
goto_definition	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:goto_definition() abort$/;"	f
<Plug>(llvm-goto-definition)	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^nnoremap <buffer><Plug>(llvm-goto-definition) :<C-u>call <SID>goto_definition()<CR>$/;"	m
K	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    nmap <buffer><silent>K <Plug>(llvm-goto-definition)$/;"	m
run_lli	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^function! s:run_lli(...) abort$/;"	f
LLI	plugged/vim-polyglot/after/ftplugin/llvm.vim	/^    command! -buffer -nargs=? -bar -complete=file LLI call <SID>run_lli(<f-args>)$/;"	c
g:puppet_align_hashes	plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    let g:puppet_align_hashes = 1$/;"	v
=>	plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    inoremap <buffer> <silent> => =><Esc>:call puppet#align#AlignHashrockets()<CR>$a$/;"	m
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
s:save_cpo	plugged/vim-polyglot/after/ftplugin/tex.vim	/^let s:save_cpo = &cpo$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/after/ftplugin/tex.vim	/^let b:undo_ftplugin .= "| setl inex<"$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/tex.vim	/^  let b:match_words .= ',\\\\begin\\s*\\({\\a\\+\\*\\=}\\):\\\\end\\s*\\1'$/;"	v
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_words = '<\\@<=\\([^\/][^ \\t>]*\\)\\g{hlend}[^>]*\\%(\/\\@<!>\\|$\\):<\\@<=\/\\1>'$/;"	v
b:match_skip	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^  let b:match_skip = 's:comment\\|string'$/;"	v
b:jsx_pretty_old_cms	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^let b:jsx_pretty_old_cms = &l:commentstring$/;"	v
jsx_comment	plugged/vim-polyglot/after/ftplugin/tsx.vim	/^augroup jsx_comment$/;"	a
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '<\\@<=\\([^\/][^ \\t>]*\\)\\g{hlend}[^>]*\\%(\/\\@<!>\\|$\\):<\\@<=\/\\1>'$/;"	v
b:match_skip	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_skip = 's:comment\\|string'$/;"	v
b:jsx_pretty_old_cms	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^let b:jsx_pretty_old_cms = &l:commentstring$/;"	v
jsx_comment	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^augroup jsx_comment$/;"	a
s:highlight_close_tag	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:highlight_close_tag = get(g:, 'vim_jsx_pretty_highlight_close_tag', 0)$/;"	v
s:tags	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:tags = get(g:, 'vim_jsx_pretty_template_tags', ['html', 'jsx'])$/;"	v
s:enable_tagged_jsx	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:enable_tagged_jsx = !empty(s:tags)$/;"	v
s:vim_jsx_pretty_colorful_config	plugged/vim-polyglot/after/syntax/jsx_pretty.vim	/^let s:vim_jsx_pretty_colorful_config = get(g:, 'vim_jsx_pretty_colorful_config', 0)$/;"	v
rust	plugged/vim-polyglot/after/syntax/rust.vim	/^    augroup rust.vim.after$/;"	a
old_syntax	plugged/vim-polyglot/after/syntax/haskell.vim	/^let old_syntax = b:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/haskell.vim	/^let b:current_syntax = old_syntax$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris2.vim	/^let s:extraConceal = 1$/;"	v
s:doubleArrow	plugged/vim-polyglot/after/syntax/idris2.vim	/^let s:doubleArrow = 1$/;"	v
s:incompleteFont	plugged/vim-polyglot/after/syntax/idris2.vim	/^    let s:incompleteFont = [ 'Consolas'$/;"	v
s:mainfont	plugged/vim-polyglot/after/syntax/idris2.vim	/^    let s:mainfont = substitute( &guifont, '^\\([^:,]\\+\\).*', '\\1', '')$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris2.vim	/^            let s:extraConceal = 0$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
b:graphql_nested_syntax	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
s:tags	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^let s:tags = '\\%(' . join(graphql#javascript_tags(), '\\|') . '\\)'$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/mdx.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/mdx.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/rspec.vim	/^let b:current_syntax = 'rspec'$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/coffee.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/coffee.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris.vim	/^let s:extraConceal = 1$/;"	v
s:doubleArrow	plugged/vim-polyglot/after/syntax/idris.vim	/^let s:doubleArrow = 1$/;"	v
s:incompleteFont	plugged/vim-polyglot/after/syntax/idris.vim	/^    let s:incompleteFont = [ 'Consolas'$/;"	v
s:mainfont	plugged/vim-polyglot/after/syntax/idris.vim	/^    let s:mainfont = substitute( &guifont, '^\\([^:,]\\+\\).*', '\\1', '')$/;"	v
s:extraConceal	plugged/vim-polyglot/after/syntax/idris.vim	/^            let s:extraConceal = 0$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/php/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
b:graphql_nested_syntax	plugged/vim-polyglot/after/syntax/php/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/php/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
s:keepcpo	plugged/vim-polyglot/after/syntax/tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:tex_fast	plugged/vim-polyglot/after/syntax/tex.vim	/^let s:tex_fast= "bcmMprsSvV"$/;"	v
s:tex_fast	plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:tex_fast= ""$/;"	v
s:tex_fast	plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:tex_fast= g:tex_fast$/;"	v
s:tex_conceal	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_conceal= 'abdmgsS'$/;"	v
s:tex_conceal	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_conceal= g:tex_conceal$/;"	v
s:tex_superscripts	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_superscripts= '[0-9a-zA-W.,:;+-<>\/()=]'$/;"	v
s:tex_superscripts	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_superscripts= g:tex_superscripts$/;"	v
s:tex_subscripts	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_subscripts= '[0-9aehijklmnoprstuvx,+-\/().]'$/;"	v
s:tex_subscripts	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_subscripts= g:tex_subscripts$/;"	v
s:extfname	plugged/vim-polyglot/after/syntax/tex.vim	/^let s:extfname=expand("%:e")$/;"	v
b:tex_stylish	plugged/vim-polyglot/after/syntax/tex.vim	/^ let b:tex_stylish= g:tex_stylish$/;"	v
b:tex_stylish	plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_stylish= 1$/;"	v
b:tex_stylish	plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_stylish= 0$/;"	v
s:tex_fold_enabled	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_fold_enabled= 0$/;"	v
s:tex_fold_enabled	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_fold_enabled= 0$/;"	v
s:tex_fold_enabled	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_fold_enabled= 1$/;"	v
TexFold	plugged/vim-polyglot/after/syntax/tex.vim	/^ com! -nargs=* TexFold <args> fold $/;"	c
TexFold	plugged/vim-polyglot/after/syntax/tex.vim	/^ com! -nargs=* TexFold <args> $/;"	c
b:tex_isk	plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_isk= '@,'.g:tex_isk$/;"	v
b:tex_isk	plugged/vim-polyglot/after/syntax/tex.vim	/^  let b:tex_isk= g:tex_isk$/;"	v
b:tex_isk	plugged/vim-polyglot/after/syntax/tex.vim	/^ let b:tex_isk="@,48-57,a-z,A-Z,192-255"$/;"	v
b:tex_isk	plugged/vim-polyglot/after/syntax/tex.vim	/^ let b:tex_isk="48-57,a-z,A-Z,192-255"$/;"	v
s:tex_no_error	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_no_error= 1$/;"	v
s:tex_no_error	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_no_error= 0$/;"	v
s:tex_comment_nospell	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_comment_nospell= 1$/;"	v
s:tex_comment_nospell	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_comment_nospell= 0$/;"	v
s:tex_nospell	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_nospell = 1$/;"	v
s:tex_nospell	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_nospell = 0$/;"	v
s:tex_matchcheck	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_matchcheck= g:tex_matchcheck$/;"	v
s:tex_matchcheck	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_matchcheck= '[({[]'$/;"	v
s:tex_excludematcher	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_excludematcher= g:tex_excludematcher$/;"	v
s:tex_excludematcher	plugged/vim-polyglot/after/syntax/tex.vim	/^ let s:tex_excludematcher= 0$/;"	v
TexNewMathZone	plugged/vim-polyglot/after/syntax/tex.vim	/^ fun! TexNewMathZone(sfx,mathzone,starform)$/;"	f
s:texMathDelimList	plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:texMathDelimList=[$/;"	v
s:texMathDelimList	plugged/vim-polyglot/after/syntax/tex.vim	/^    let s:texMathDelimList= s:texMathDelimList + [$/;"	v
s:texMathDelimList	plugged/vim-polyglot/after/syntax/tex.vim	/^    let s:texMathDelimList= s:texMathDelimList + [$/;"	v
s:texMathList	plugged/vim-polyglot/after/syntax/tex.vim	/^  let s:texMathList=[$/;"	v
s:texMathList	plugged/vim-polyglot/after/syntax/tex.vim	/^    let s:texMathList= s:texMathList + [$/;"	v
s:texMathList	plugged/vim-polyglot/after/syntax/tex.vim	/^    let s:texMathList= s:texMathList + [$/;"	v
Greek	plugged/vim-polyglot/after/syntax/tex.vim	/^  fun! s:Greek(group,pat,cchar)$/;"	f
SuperSub	plugged/vim-polyglot/after/syntax/tex.vim	/^  fun! s:SuperSub(group,leader,pat,cchar)$/;"	f
Accents	plugged/vim-polyglot/after/syntax/tex.vim	/^   fun! s:Accents(chr,...)$/;"	f
b:current_syntax	plugged/vim-polyglot/after/syntax/tex.vim	/^let   b:current_syntax = "tex"$/;"	v
s:jsx_cpo	plugged/vim-polyglot/after/syntax/tsx.vim	/^let s:jsx_cpo = &cpo$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/tsx.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/tsx.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/tsx.vim	/^let b:current_syntax = 'typescript.tsx'$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/javascript/sql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/javascript/sql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
b:graphql_nested_syntax	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
s:tags	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^let s:tags = '\\%(' . join(graphql#javascript_tags(), '\\|') . '\\)'$/;"	v
s:jsx_cpo	plugged/vim-polyglot/after/syntax/jsx.vim	/^let s:jsx_cpo = &cpo$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^let b:current_syntax = 'javascript.jsx'$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
b:graphql_nested_syntax	plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/reason/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
s:keepcpo	plugged/vim-polyglot/after/compiler/tex.vim	/^let s:keepcpo= &cpo$/;"	v
CompilerSet	plugged/vim-polyglot/after/compiler/tex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/after/compiler/tex.vim	/^		let current_compiler = b:tex_flavor$/;"	v
current_compiler	plugged/vim-polyglot/after/compiler/tex.vim	/^		let current_compiler = g:tex_flavor$/;"	v
current_compiler	plugged/vim-polyglot/after/compiler/tex.vim	/^		let current_compiler = "latex"$/;"	v
current_compiler	plugged/vim-polyglot/after/compiler/tex.vim	/^	let current_compiler = 'make'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/litcoffee.vim	/^let b:current_syntax = "litcoffee"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/raml.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/raml.vim	/^let b:current_syntax = "raml"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cmod.vim	/^let s:cpo_save = &cpo$/;"	v
b:match_words	plugged/vim-polyglot/syntax/cmod.vim	/^let b:match_words = "({:}\\\\@1<=),^\\s*#\\s*\\%(if\\%(n\\?def\\)\\|else\\|el\\%(se\\)\\?if\\|endif\\)\\>"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cmod.vim	/^let b:current_syntax = "cmod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/requirements.vim	/^let b:current_syntax = "requirements"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mma.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mma.vim	/^let b:current_syntax = "mma"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/autodoc.vim	/^let s:cpo_save = &cpo$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/autodoc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/autodoc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/autodoc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/autodoc.vim	/^let b:current_syntax = "autodoc"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/8th.vim	/^let s:cpo_save = &cpo$/;"	v
Builtin	plugged/vim-polyglot/syntax/8th.vim	/^com! -nargs=+ Builtin syn keyword eighthBuiltin <args>$/;"	c
did_eighth_syntax_inits	plugged/vim-polyglot/syntax/8th.vim	/^    let did_eighth_syntax_inits=1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/8th.vim	/^let b:current_syntax = "8th"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sd.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sd.vim	/^let b:current_syntax = "sd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/config.vim	/^let b:current_syntax = "config"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cuda.vim	/^let b:current_syntax = "cuda"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pascal.vim	/^let b:current_syntax = "pascal"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/fortran.vim	/^let s:cpo_save = &cpo$/;"	v
b:fortran_retype	plugged/vim-polyglot/syntax/fortran.vim	/^let b:fortran_retype = getline(1)." ".getline(2)." ".getline(3)$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^  let b:fortran_dialect = "F"$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^  let b:fortran_dialect = "f08"$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_dialect = g:fortran_dialect$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_dialect = "f08"$/;"	v
b:fortran_dialect	plugged/vim-polyglot/syntax/fortran.vim	/^  let b:fortran_dialect = "f08"$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
s:lmax	plugged/vim-polyglot/syntax/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	plugged/vim-polyglot/syntax/fortran.vim	/^      let s:lmax = line("$")$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
s:ln	plugged/vim-polyglot/syntax/fortran.vim	/^    let s:ln=1$/;"	v
s:test	plugged/vim-polyglot/syntax/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
b:fortran_fixed_source	plugged/vim-polyglot/syntax/fortran.vim	/^        let b:fortran_fixed_source = 0$/;"	v
s:ln	plugged/vim-polyglot/syntax/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fortran.vim	/^let b:current_syntax = "fortran"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abc.vim	/^let b:current_syntax = "abc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cvs.vim	/^let b:current_syntax = "cvs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aml.vim	/^let b:current_syntax = "aml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slang.vim	/^let b:current_syntax = "slang"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hex.vim	/^let b:current_syntax = "hex"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sqlj.vim	/^let b:current_syntax = "sqlj"$/;"	v
s:cpo	plugged/vim-polyglot/syntax/debsources.vim	/^let s:cpo = &cpo$/;"	v
s:supported	plugged/vim-polyglot/syntax/debsources.vim	/^let s:supported = [$/;"	v
s:unsupported	plugged/vim-polyglot/syntax/debsources.vim	/^let s:unsupported = [$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debsources.vim	/^let b:current_syntax = 'debsources'$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/sil.vim	/^let s:keepcpo = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sil.vim	/^let b:current_syntax = "sil"$/;"	v
b:hs_chs	plugged/vim-polyglot/syntax/chaskell.vim	/^let b:hs_chs=1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ratpoison.vim	/^let b:current_syntax = "ratpoison"$/;"	v
g:rmd_syn_hl_yaml	plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_yaml = get(g:, 'rmd_syn_hl_yaml', 1)$/;"	v
g:rmd_syn_hl_citations	plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_citations = get(g:, 'rmd_syn_hl_citations', 1)$/;"	v
g:rmd_syn_hl_chunk	plugged/vim-polyglot/syntax/rmd.vim	/^let g:rmd_syn_hl_chunk = get(g:, 'g:rmd_syn_hl_chunk', 0)$/;"	v
g:pandoc#syntax#codeblocks#embeds#langs	plugged/vim-polyglot/syntax/rmd.vim	/^let g:pandoc#syntax#codeblocks#embeds#langs = get(g:, 'pandoc#syntax#codeblocks#embeds#langs', ['r'])$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rmd.vim	/^  let b:current_syntax = "rmd"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
g:rmd_fenced_languages	plugged/vim-polyglot/syntax/rmd.vim	/^    let g:rmd_fenced_languages = deepcopy(g:markdown_fenced_languages)$/;"	v
g:markdown_fenced_languages	plugged/vim-polyglot/syntax/rmd.vim	/^    let g:markdown_fenced_languages = []$/;"	v
g:rmd_fenced_languages	plugged/vim-polyglot/syntax/rmd.vim	/^  let g:rmd_fenced_languages = ['r']$/;"	v
s:ft	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:ft = substitute(s:type, '.*=', '', '')$/;"	v
s:nm	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:nm = substitute(s:type, '=.*', '', '')$/;"	v
s:ft	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:ft = s:type$/;"	v
s:nm	plugged/vim-polyglot/syntax/rmd.vim	/^    let s:nm  = s:type$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rmd.vim	/^let b:current_syntax = "rmd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elm.vim	/^let b:current_syntax = 'elm'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/abel.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abel.vim	/^let b:current_syntax = "abel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/purescript.vim	/^let b:current_syntax = "purescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gosum.vim	/^let b:current_syntax = "gomod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rtf.vim	/^let b:current_syntax = "rtf"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
b:eterm_minlines	plugged/vim-polyglot/syntax/eterm.vim	/^  let b:eterm_minlines = eterm_minlines$/;"	v
b:eterm_minlines	plugged/vim-polyglot/syntax/eterm.vim	/^  let b:eterm_minlines = 50$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eterm.vim	/^let b:current_syntax = "eterm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rnoweb-1.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/verilogams.vim	/^let b:current_syntax = "verilogams"$/;"	v
did_thrift_syn_inits	plugged/vim-polyglot/syntax/thrift.vim	/^    let did_thrift_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/thrift.vim	/^let b:current_syntax = "thrift"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
did_javascript_syn_inits	plugged/vim-polyglot/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lss.vim	/^let b:current_syntax = "lss"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/skill.vim	/^let b:current_syntax = "skill"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/aspvbs.vim	/^  let main_syntax = 'aspvbs'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aspvbs.vim	/^let b:current_syntax = "aspvbs"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/nroff.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nroff.vim	/^let b:current_syntax = "nroff"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dcov.vim	/^let b:current_syntax = "dcov"$/;"	v
HtmlHiLink	plugged/vim-polyglot/syntax/handlebars.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/handlebars.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/handlebars.vim	/^let b:current_syntax = "handlebars"$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/fvwm.vim	/^let s:keepcpo= &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fvwm.vim	/^let b:current_syntax = "fvwm"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/reva.vim	/^let s:cpo_save = &cpo$/;"	v
Builtin	plugged/vim-polyglot/syntax/reva.vim	/^com! -nargs=+ Builtin syn keyword revaBuiltin <args>$/;"	c
did_reva_syntax_inits	plugged/vim-polyglot/syntax/reva.vim	/^    let did_reva_syntax_inits=1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/reva.vim	/^let b:current_syntax = "reva"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/odin.vim	/^let b:current_syntax = "odin"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/apache.vim	/^let b:current_syntax = "apache"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rc.vim	/^let b:current_syntax = "rc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ave.vim	/^let b:current_syntax = "ave"$/;"	v
typescript_props	plugged/vim-polyglot/syntax/yats.vim	/^let typescript_props = 1$/;"	v
s:ant_cpo_save	plugged/vim-polyglot/syntax/ant.vim	/^let s:ant_cpo_save = &cpo$/;"	v
AntSyntaxScript	plugged/vim-polyglot/syntax/ant.vim	/^    fun AntSyntaxScript(tagname, synfilename)$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/ant.vim	/^let b:current_syntax = "ant"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/velocity.vim	/^  let main_syntax = 'html'$/;"	v
did_velocity_syn_inits	plugged/vim-polyglot/syntax/velocity.vim	/^    let did_velocity_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/velocity.vim	/^let b:current_syntax = "velocity"$/;"	v
HiLink	plugged/vim-polyglot/syntax/haproxy.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/haproxy.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/haproxy.vim	/^let b:current_syntax = "haproxy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/swiftgyb.vim	/^let b:current_syntax = "swiftgyb"$/;"	v
s:current_syntax	plugged/vim-polyglot/syntax/mint.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mint.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dsl.vim	/^let b:current_syntax = "dsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/omnimark.vim	/^let b:current_syntax = "omnimark"$/;"	v
s:xml_cpo_save	plugged/vim-polyglot/syntax/xml.vim	/^let s:xml_cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xml.vim	/^let b:current_syntax = "xml"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jst.vim	/^  let main_syntax = 'jst'$/;"	v
g:jst_default_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let g:jst_default_subtype = "html"$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(&filetype,'^jst\\.\\zs\\w\\+')$/;"	v
s:lines	plugged/vim-polyglot/syntax/jst.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(s:lines,'jst_subtype=\\zs\\w\\+')$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.jst\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'html'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'haml'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'html'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'html'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'html'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'ruby'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'yaml'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'javascript'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'text'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = g:jst_default_subtype$/;"	v
b:jst_nest_level	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:jst_nest_level	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jst.vim	/^let b:current_syntax = 'jst'$/;"	v
b:match_ignorecase	plugged/vim-polyglot/syntax/jst.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_words	plugged/vim-polyglot/syntax/jst.vim	/^  let b:match_words = '<:>,' .$/;"	v
g:vue_pre_processors	plugged/vim-polyglot/syntax/vue.vim	/^  let g:vue_pre_processors = []$/;"	v
attr	plugged/vim-polyglot/syntax/vue.vim	/^function! s:attr(name, value)$/;"	f
should_register	plugged/vim-polyglot/syntax/vue.vim	/^function! s:should_register(language, start_pattern)$/;"	f
s:languages	plugged/vim-polyglot/syntax/vue.vim	/^let s:languages = [$/;"	v
s:attr_pattern	plugged/vim-polyglot/syntax/vue.vim	/^  let s:attr_pattern = has_key(s:language, 'attr_pattern') ? s:language.attr_pattern : s:attr('lang', s:language.name)$/;"	v
s:start_pattern	plugged/vim-polyglot/syntax/vue.vim	/^  let s:start_pattern = '<' . s:language.tag . '\\>\\_[^>]*' . s:attr_pattern . '\\_[^>]*>'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vue.vim	/^let b:current_syntax = "vue"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dhall.vim	/^let b:current_syntax = 'dhall'$/;"	v
did_u_syntax_inits	plugged/vim-polyglot/syntax/unison.vim	/^    let did_u_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/unison.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/unison.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/unison.vim	/^let b:current_syntax = "unison"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/readline.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/readline.vim	/^let b:current_syntax = 'readline'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pccts.vim	/^let b:current_syntax = "pccts"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dsdl.vim	/^let b:current_syntax = "dsdl"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/ecrystal.vim	/^  let main_syntax = 'ecrystal'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ecrystal.vim	/^let b:current_syntax = 'ecrystal'$/;"	v
is_bash	plugged/vim-polyglot/syntax/initng.vim	/^let is_bash = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/initng.vim	/^let b:current_syntax = "initng"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/natural.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/natural.vim	/^let b:current_syntax = "natural"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gdscript3.vim	/^let b:current_syntax = "gdscript3"$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/gdscript3.vim	/^let s:save_cpo = &cpo$/;"	v
main_syntax	plugged/vim-polyglot/syntax/spyce.vim	/^  let main_syntax='spyce'$/;"	v
b:did_indent	plugged/vim-polyglot/syntax/spyce.vim	/^let b:did_indent = 1	     " don't perform HTML indentation!$/;"	v
html_no_rendering	plugged/vim-polyglot/syntax/spyce.vim	/^let html_no_rendering = 1    " do not render <b>,<i>, etc...$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spyce.vim	/^let b:current_syntax = "spyce"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hastepreproc.vim	/^let b:current_syntax = "hastepreproc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rnoweb-2.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/emblem.vim	/^  let main_syntax = 'emblem'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/emblem.vim	/^let b:current_syntax = 'emblem'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hgcommit.vim	/^let b:current_syntax = "hgcommit"$/;"	v
nim_highlight_numbers	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers = 1$/;"	v
nim_highlight_builtins	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins = 1$/;"	v
nim_highlight_exceptions	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions = 1$/;"	v
nim_highlight_space_errors	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_space_errors = 1$/;"	v
nim_highlight_special_vars	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_special_vars = 1$/;"	v
nim_highlight_numbers	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers      = 1$/;"	v
nim_highlight_builtins	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins     = 1$/;"	v
nim_highlight_exceptions	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions   = 1$/;"	v
nim_highlight_space_errors	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_space_errors = 1$/;"	v
nim_highlight_special_vars	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_special_vars = 1$/;"	v
s:dec_num	plugged/vim-polyglot/syntax/nim.vim	/^  let s:dec_num = '\\d%(_?\\d)*'$/;"	v
s:int_suf	plugged/vim-polyglot/syntax/nim.vim	/^  let s:int_suf = '%(''%(%(i|I|u|U)%(8|16|32|64)|u|U))'$/;"	v
s:float_suf	plugged/vim-polyglot/syntax/nim.vim	/^  let s:float_suf = '%(''%(%(f|F)%(32|64|128)?|d|D))'$/;"	v
s:exp	plugged/vim-polyglot/syntax/nim.vim	/^  let s:exp = '%([eE][+-]?'.s:dec_num.')'$/;"	v
did_nim_syn_inits	plugged/vim-polyglot/syntax/nim.vim	/^    let did_nim_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/nim.vim	/^let b:current_syntax = 'nim'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lotos.vim	/^let b:current_syntax = "lotos"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/apiblueprint.vim	/^let b:current_syntax = 'apiblueprint'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/java.vim	/^  let main_syntax='java'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/java.vim	/^let s:cpo_save = &cpo$/;"	v
java_highlight_all	plugged/vim-polyglot/syntax/java.vim	/^  let java_highlight_all=1$/;"	v
java_minlines	plugged/vim-polyglot/syntax/java.vim	/^  let java_minlines = 10$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/java.vim	/^let b:current_syntax = "java"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/java.vim	/^let b:spell_options="contained"$/;"	v
did_c_syn_inits	plugged/vim-polyglot/syntax/llvm.vim	/^    let did_c_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/llvm.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/llvm.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/llvm.vim	/^let b:current_syntax = "llvm"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/pug.vim	/^  let main_syntax = 'pug'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pug.vim	/^let b:current_syntax = "pug"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/moo.vim	/^let b:current_syntax = "moo"$/;"	v
did_mmp_syntax_inits	plugged/vim-polyglot/syntax/mmp.vim	/^  let did_mmp_syntax_inits=1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mmp.vim	/^let b:current_syntax = "mmp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/z8a.vim	/^let b:current_syntax = "z8a"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax_embed	plugged/vim-polyglot/syntax/rust.vim	/^    let b:current_syntax_embed = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rust.vim	/^let b:current_syntax = "rust"$/;"	v
Hi	plugged/vim-polyglot/syntax/sdl.vim	/^command -nargs=+ Hi     hi def <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/sdl.vim	/^let b:current_syntax = "sdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rexx.vim	/^let b:current_syntax = "rexx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gedcom.vim	/^let b:current_syntax = "gedcom"$/;"	v
did_sexplib_syntax_inits	plugged/vim-polyglot/syntax/sexplib.vim	/^    let did_sexplib_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/sexplib.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/sexplib.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/sexplib.vim	/^let b:current_syntax = "sexplib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cabal-1.vim	/^let b:current_syntax = "cabal"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jsp.vim	/^  let main_syntax = 'jsp'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jsp.vim	/^let b:current_syntax = "jsp"$/;"	v
ppwiz_highlight_defs	plugged/vim-polyglot/syntax/ppwiz.vim	/^    let ppwiz_highlight_defs = 1$/;"	v
ppwiz_with_html	plugged/vim-polyglot/syntax/ppwiz.vim	/^    let ppwiz_with_html = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ppwiz.vim	/^let b:current_syntax = "ppwiz"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fetchmail.vim	/^let b:current_syntax = "fetchmail"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gp.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gp.vim	/^let b:current_syntax = "gp"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/viminfo.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/viminfo.vim	/^let b:current_syntax = "viminfo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/obj.vim	/^let b:current_syntax = "obj"$/;"	v
fortran_free_source	plugged/vim-polyglot/syntax/sinda.vim	/^let fortran_free_source=1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sinda.vim	/^let b:current_syntax = "sinda"$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/puppet.vim	/^let s:cpo_sav = &cpo$/;"	v
HiLink	plugged/vim-polyglot/syntax/puppet.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/puppet.vim	/^let b:current_syntax = "puppet"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/conaryrecipe.vim	/^let b:current_syntax = "conaryrecipe"$/;"	v
tads_minlines	plugged/vim-polyglot/syntax/tads.vim	/^  let tads_minlines = 15$/;"	v
tads_sync_dist	plugged/vim-polyglot/syntax/tads.vim	/^  let tads_sync_dist = 100$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tads.vim	/^let b:current_syntax = "tads"$/;"	v
filename	plugged/vim-polyglot/syntax/sql.vim	/^let filename = 'sqloracle'$/;"	v
filename	plugged/vim-polyglot/syntax/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	plugged/vim-polyglot/syntax/sql.vim	/^        let filename = g:sql_type_default$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/javacc.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/st.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/st.vim	/^let b:current_syntax = "st"$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/po.vim	/^let s:keepcpo= &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/po.vim	/^let b:current_syntax = "po"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/exim.vim	/^let b:current_syntax = "exim"$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/named.vim	/^let s:save_cpo = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/named.vim	/^let b:current_syntax = "named"$/;"	v
TAPTestLine_foldtext	plugged/vim-polyglot/syntax/tap.vim	/^function! TAPTestLine_foldtext()$/;"	f
did_tapverboseoutput_syntax_inits	plugged/vim-polyglot/syntax/tap.vim	/^  let did_tapverboseoutput_syntax_inits = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tap.vim	/^let b:current_syntax="tapVerboseOutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/uil.vim	/^let b:current_syntax = "uil"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
b:bdf_minlines	plugged/vim-polyglot/syntax/bdf.vim	/^  let b:bdf_minlines = bdf_minlines$/;"	v
b:bdf_minlines	plugged/vim-polyglot/syntax/bdf.vim	/^  let b:bdf_minlines = 30$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bdf.vim	/^let b:current_syntax = "bdf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ecd.vim	/^let b:current_syntax = "ecd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spec.vim	/^let b:current_syntax = "spec"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/master.vim	/^let b:current_syntax = "master"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
g:ragel_default_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^  let g:ragel_default_subtype = 'c'$/;"	v
Split	plugged/vim-polyglot/syntax/ragel.vim	/^function! <SID>Split(path) abort " {{{1$/;"	f
ReadOnPath	plugged/vim-polyglot/syntax/ragel.vim	/^fun! <SID>ReadOnPath(script)$/;"	f
s:lines	plugged/vim-polyglot/syntax/ragel.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^  let b:ragel_subtype = matchstr(s:lines, 'ragel_subtype=\\zs\\w\\+')$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.rl\\|\\.ragel\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'ruby'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'objc'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'cpp'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = g:ragel_default_subtype$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ragel.vim	/^let b:current_syntax = "ragel"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/slime.vim	/^  let main_syntax = 'slime'$/;"	v
b:elixir_no_expensive	plugged/vim-polyglot/syntax/slime.vim	/^let b:elixir_no_expensive = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slime.vim	/^let b:current_syntax = "slime"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tidy.vim	/^let b:current_syntax = "tidy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2html.vim	/^let b:current_syntax = "tt2html"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/omake.vim	/^let b:current_syntax = "omake"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/helm.vim	/^  let main_syntax = 'yaml'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/helm.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/helm.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/helm.vim	/^let b:current_syntax = "helm"$/;"	v
g:omni_syntax_group_exclude_lifelines	plugged/vim-polyglot/syntax/lifelines.vim	/^		let g:omni_syntax_group_exclude_lifelines = 'lifelinesError'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lifelines.vim	/^let b:current_syntax = "lifelines"$/;"	v
s:Cpath	plugged/vim-polyglot/syntax/lex.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h")."\/cpp.vim")$/;"	v
s:Cpath	plugged/vim-polyglot/syntax/lex.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lex.vim	/^let b:current_syntax = "lex"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/srec.vim	/^let b:current_syntax = "srec"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/def.vim	/^let b:current_syntax = "def"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tsscl.vim	/^let b:current_syntax = "tsscl"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cabal-2.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cabal-2.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mush.vim	/^let b:current_syntax = "mush"$/;"	v
b:xf86conf_xfree86_version	plugged/vim-polyglot/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = xf86conf_xfree86_version$/;"	v
b:xf86conf_xfree86_version	plugged/vim-polyglot/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = 4$/;"	v
Xf86confdeclopt	plugged/vim-polyglot/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained$/;"	c
Xf86confdeclopt	plugged/vim-polyglot/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained nextgroup=xf86confValue,xf86confComment skipwhite$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/xf86conf.vim	/^let b:current_syntax = "xf86conf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fgl.vim	/^let b:current_syntax = "fgl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/squid.vim	/^let b:current_syntax = "squid"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/services.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/services.vim	/^let b:current_syntax = "services"$/;"	v
b:tt2_syn_tags	plugged/vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_tags = '\\[% %]'$/;"	v
b:tt2_syn_inc_perl	plugged/vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_inc_perl = 1$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/tt2.vim	/^let s:cpo_save = &cpo$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = b:tt2_syn_tags . ' '$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,'^ \\+','','g')$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,' \\+',' ','g')$/;"	v
s:st	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:st = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:str = substitute(s:str,'[^ ]* ','',"")$/;"	v
s:ed	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:ed = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:str = substitute(s:str,'[^ ]* ','',"")$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2.vim	/^let b:current_syntax = "tt2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vmasm.vim	/^let b:current_syntax = "vmasm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/grads.vim	/^let b:current_syntax = "grads"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dylanintr.vim	/^let b:current_syntax = "dylanintr"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/zimbu.vim	/^let b:current_syntax = "zimbu"$/;"	v
did_vbnet_syntax_inits	plugged/vim-polyglot/syntax/vbnet.vim	/^        let did_vbnet_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/vbnet.vim	/^let b:current_syntax = "vbnet"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/blank.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/blank.vim	/^let b:current_syntax = "blank"$/;"	v
IcalHiLink	plugged/vim-polyglot/syntax/icalendar.vim	/^command! -nargs=+ IcalHiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/icalendar.vim	/^let b:current_syntax = "icalendar"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/scss.vim	/^  let main_syntax = 'scss'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
use_mutt_sidebar	plugged/vim-polyglot/syntax/muttrc.vim	/^  let use_mutt_sidebar=0$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/muttrc.vim	/^let b:current_syntax = "muttrc"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pony.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pony.vim	/^let b:current_syntax = 'pony'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gleam.vim	/^let b:current_syntax = "gleam"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/loginaccess.vim	/^let b:current_syntax = "loginaccess"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xmodmap.vim	/^let b:current_syntax = "xmodmap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dylanlid.vim	/^let b:current_syntax = "dylanlid"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tcl.vim	/^let b:current_syntax = "tcl"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/bib.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bib.vim	/^let b:current_syntax = "bib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dockerfile.vim	/^let b:current_syntax = "dockerfile"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/plp.vim	/^  let main_syntax = 'perlscript'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plp.vim	/^let b:current_syntax = "plp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/conf.vim	/^let b:current_syntax = "conf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lisp.vim	/^let b:current_syntax = "lisp"$/;"	v
did_fs_syntax_inits	plugged/vim-polyglot/syntax/fsharp.vim	/^        let did_fs_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/fsharp.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fsharp.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/fsharp.vim	/^let b:current_syntax = 'fsharp'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/opam.vim	/^let b:current_syntax = "opam"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/voscm.vim	/^let b:current_syntax = "voscm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nix.vim	/^let b:current_syntax = "nix"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitolite.vim	/^let b:current_syntax = "gitolite"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/debcopyright.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debcopyright.vim	/^let b:current_syntax = 'debcopyright'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pfmain.vim	/^let b:current_syntax = "pfmain"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/systemverilog.vim	/^let b:current_syntax = "systemverilog"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rpl.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rpl.vim	/^let b:current_syntax = "rpl"$/;"	v
chill_minlines	plugged/vim-polyglot/syntax/chill.vim	/^  let chill_minlines = 15$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/chill.vim	/^let b:current_syntax = "chill"$/;"	v
did_tptp_syntax_inits	plugged/vim-polyglot/syntax/tptp.vim	/^    let did_tptp_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/tptp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/tptp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/tptp.vim	/^let b:current_syntax = "tptp"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/perl.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/perl.vim	/^let b:current_syntax = "perl"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/terminfo.vim	/^let b:current_syntax = "terminfo"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/scala.vim	/^  let main_syntax = 'scala'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scala.vim	/^let b:current_syntax = "scala"$/;"	v
ContainedGroup	plugged/vim-polyglot/syntax/scala.vim	/^function! s:ContainedGroup()$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/scala.vim	/^let b:current_syntax = 'scala'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dnsmasq.vim	/^let s:cpo_save = &cpo$/;"	v
b:dnsmasq_backrgound_light	plugged/vim-polyglot/syntax/dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = dnsmasq_backrgound_light$/;"	v
b:dnsmasq_backrgound_light	plugged/vim-polyglot/syntax/dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = 0$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dnsmasq.vim	/^let b:current_syntax = "dnsmasq"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/zig.vim	/^let s:cpo_save = &cpo$/;"	v
s:zig_syntax_keywords	plugged/vim-polyglot/syntax/zig.vim	/^let s:zig_syntax_keywords = {$/;"	v
syntax_keyword	plugged/vim-polyglot/syntax/zig.vim	/^function! s:syntax_keyword(dict)$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/zig.vim	/^let b:current_syntax = "zig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dot.vim	/^let b:current_syntax = "dot"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mrxvtrc.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mrxvtrc.vim	/^let b:current_syntax = "mrxvtrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/modula3.vim	/^let b:current_syntax = "modula3"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/manconf.vim	/^let b:current_syntax = "manconf"$/;"	v
did_c_syn_inits	plugged/vim-polyglot/syntax/tablegen.vim	/^    let did_c_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/tablegen.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/tablegen.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/tablegen.vim	/^let b:current_syntax = "tablegen"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/qmake.vim	/^let b:current_syntax = "qmake"$/;"	v
b:filetype_in_cpp_family	plugged/vim-polyglot/syntax/cpp.vim	/^let b:filetype_in_cpp_family = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asteriskvm.vim	/^let b:current_syntax = "asteriskvm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bsdl.vim	/^let b:current_syntax = "bsdl"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/htmlm4.vim	/^  let main_syntax='htmlm4'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/htmlm4.vim	/^let b:current_syntax = "htmlm4"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sshconfig.vim	/^let b:current_syntax = "sshconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hcl.vim	/^let b:current_syntax = "hcl"$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/ruby.vim	/^let s:cpo_sav = &cpo$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
s:foldable_groups	plugged/vim-polyglot/syntax/ruby.vim	/^let s:foldable_groups = split($/;"	v
foldable	plugged/vim-polyglot/syntax/ruby.vim	/^function! s:foldable(...) abort$/;"	f
run_syntax_fold	plugged/vim-polyglot/syntax/ruby.vim	/^function! s:run_syntax_fold(args) abort$/;"	f
SynFold	plugged/vim-polyglot/syntax/ruby.vim	/^com! -nargs=* SynFold call s:run_syntax_fold(<q-args>)$/;"	c
s:spell_cluster	plugged/vim-polyglot/syntax/ruby.vim	/^let s:spell_cluster = exists('ruby_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:fold_arg	plugged/vim-polyglot/syntax/ruby.vim	/^let s:fold_arg	    = s:foldable('string')		? ' fold'   : ''$/;"	v
s:names	plugged/vim-polyglot/syntax/ruby.vim	/^let s:names = { '~': 'Tilde', '`': 'BackQuote', '!': 'Bang', '@': 'At', '#': 'Hash', '$': 'Dollar', '%': 'Percent', '^': 'Caret',$/;"	v
s:group	plugged/vim-polyglot/syntax/ruby.vim	/^  let s:group = 'ruby' . s:names[s:delimiter] . 'Escape'$/;"	v
s:delimiter	plugged/vim-polyglot/syntax/ruby.vim	/^    let s:delimiter = '\\' . s:delimiter$/;"	v
ruby_minlines	plugged/vim-polyglot/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vgrindefs.vim	/^let b:current_syntax = "vgrindefs"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ld.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ld.vim	/^let b:current_syntax = "ld"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ls.vim	/^let b:current_syntax = "ls"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ls.vim	/^  let b:current_syntax = 'livescript'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xdc.vim	/^let b:current_syntax = "xdc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jovial.vim	/^let b:current_syntax = "jovial"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/idris2.vim	/^let b:current_syntax = "idris2"$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/ada.vim	/^let s:keepcpo= &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ada.vim	/^let b:current_syntax = "ada"$/;"	v
commands	plugged/vim-polyglot/syntax/zsh.vim	/^let commands = [ 'arch', 'awk', 'b2sum', 'base32', 'base64', 'basename', 'basenc', 'bash', 'brew', 'cat', 'chcon', 'chgrp', 'chown', 'chroot', 'cksum', 'comm', 'cp', 'csplit', 'curl', 'cut', 'date', 'dd', 'defaults', 'df', 'dir', 'dircolors', 'dirname', 'ed', 'env', 'expand', 'factor', 'fmt', 'fold', 'git', 'grep', 'groups', 'head', 'hexdump', 'hostid', 'hostname', 'hugo', 'id', 'install', 'join', 'killall', 'link', 'ln', 'logname', 'md5sum', 'mkdir', 'mkfifo', 'mknod', 'mktemp', 'nice', 'nl', 'nohup', 'npm', 'nproc', 'numfmt', 'od', 'open', 'paste', 'pathchk', 'pr', 'printenv', 'printf', 'ptx', 'readlink', 'realpath', 'rg', 'runcon', 'scutil', 'sed', 'seq', 'sha1sum', 'sha2', 'shred', 'shuf', 'split', 'stat', 'stdbuf', 'stty', 'sudo', 'sum', 'sync', 'tac', 'tee', 'terminfo', 'timeout', 'tmux', 'top', 'touch', 'tput', 'tr', 'truncate', 'tsort', 'tty', 'uname', 'unexpand', 'uniq', 'unlink', 'uptime', 'users', 'vdir', 'vim', 'wc', 'who', 'whoami', 'yabai', 'yes' ]$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/xpm2.vim	/^let s:cpo_save = &cpo$/;"	v
Hi	plugged/vim-polyglot/syntax/xpm2.vim	/^command -nargs=+ Hi hi def <args>$/;"	c
color	plugged/vim-polyglot/syntax/xpm2.vim	/^  let color  = ""$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^  let chars  = ""$/;"	v
colors	plugged/vim-polyglot/syntax/xpm2.vim	/^  let colors = 0$/;"	v
cpp	plugged/vim-polyglot/syntax/xpm2.vim	/^  let cpp    = 0$/;"	v
n	plugged/vim-polyglot/syntax/xpm2.vim	/^  let n      = 0$/;"	v
i	plugged/vim-polyglot/syntax/xpm2.vim	/^  let i      = 1$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^    let s = getline(i)$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^      let s = matchstr(s, "^[^\\!]*")$/;"	v
colors	plugged/vim-polyglot/syntax/xpm2.vim	/^	let colors = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
cpp	plugged/vim-polyglot/syntax/xpm2.vim	/^	let cpp = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
n	plugged/vim-polyglot/syntax/xpm2.vim	/^	let n = 1			" n = color index$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(s, '\\(.\\{'.cpp.'}\\s\\+\\).*', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	let color = substitute(s, '.*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(s, '.*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	    let color = substitute(s, '.*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	      let color = substitute(s, '.*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^		let color = ""$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^	let s = escape(s, '\/\\*^$.~[]')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
s	plugged/vim-polyglot/syntax/xpm2.vim	/^	let s = substitute(s, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(chars, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
chars	plugged/vim-polyglot/syntax/xpm2.vim	/^	let chars = substitute(chars, '\\\\s\\\\+$', '', '')$/;"	v
n	plugged/vim-polyglot/syntax/xpm2.vim	/^	let n = n + 1$/;"	v
i	plugged/vim-polyglot/syntax/xpm2.vim	/^    let i = i + 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xpm2.vim	/^let b:current_syntax = "xpm2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/modula2.vim	/^let b:current_syntax = "modula2"$/;"	v
is_bash	plugged/vim-polyglot/syntax/upstart.vim	/^let is_bash = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstart.vim	/^let b:current_syntax = "upstart"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/glsl.vim	/^  let b:current_syntax = "glsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lace.vim	/^let b:current_syntax = "lace"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/quake.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/quake.vim	/^let b:current_syntax = "quake"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sas.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sas.vim	/^let b:current_syntax = "sas"$/;"	v
fortran_free_source	plugged/vim-polyglot/syntax/trasys.vim	/^let fortran_free_source=1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/trasys.vim	/^let b:current_syntax = "trasys"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abap.vim	/^let b:current_syntax = "abap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/exports.vim	/^let b:current_syntax = "exports"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/json.vim	/^  let main_syntax = 'json'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gomod.vim	/^let b:current_syntax = "gomod"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/lite.vim	/^  let main_syntax = 'lite'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lite.vim	/^let b:current_syntax = "lite"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/automake.vim	/^let b:current_syntax = 'automake'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vhdl.vim	/^let b:current_syntax = "vhdl"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/treetop.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/treetop.vim	/^let b:current_syntax = 'treetop'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bzr.vim	/^let b:current_syntax = "bzr"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pinfo.vim	/^let b:current_syntax = "pinfo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plsql.vim	/^let b:current_syntax = "plsql"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mail.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mail.vim	/^let b:current_syntax = "mail"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:ReferenceName	plugged/vim-polyglot/syntax/rst.vim	/^let s:ReferenceName = '[[:alnum:]]\\%([-_.:+]\\?[[:alnum:]]\\+\\)*'$/;"	v
DefineOneInlineMarkup	plugged/vim-polyglot/syntax/rst.vim	/^function! s:DefineOneInlineMarkup(name, start, middle, end, char_left, char_right)$/;"	f
DefineInlineMarkup	plugged/vim-polyglot/syntax/rst.vim	/^function! s:DefineInlineMarkup(name, start, middle, end)$/;"	f
g:rst_syntax_code_list	plugged/vim-polyglot/syntax/rst.vim	/^    let g:rst_syntax_code_list = {$/;"	v
s:old_spec	plugged/vim-polyglot/syntax/rst.vim	/^    let s:old_spec = g:rst_syntax_code_list$/;"	v
g:rst_syntax_code_list	plugged/vim-polyglot/syntax/rst.vim	/^    let g:rst_syntax_code_list = {}$/;"	v
g:rst_syntax_code_list	plugged/vim-polyglot/syntax/rst.vim	/^        let g:rst_syntax_code_list[s:elem] = [s:elem]$/;"	v
prior_isk	plugged/vim-polyglot/syntax/rst.vim	/^    let prior_isk = &l:iskeyword$/;"	v
s:alias_pattern	plugged/vim-polyglot/syntax/rst.vim	/^    let s:alias_pattern = ''$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rst.vim	/^let b:current_syntax = "rst"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/resolv.vim	/^let b:current_syntax = "resolv"$/;"	v
Python2Syntax	plugged/vim-polyglot/syntax/python.vim	/^command! -buffer Python2Syntax let b:python_version_2 = 1 | let &syntax=&syntax$/;"	c
Python3Syntax	plugged/vim-polyglot/syntax/python.vim	/^command! -buffer Python3Syntax let b:python_version_2 = 0 | let &syntax=&syntax$/;"	c
EnableByDefault	plugged/vim-polyglot/syntax/python.vim	/^function! s:EnableByDefault(name)$/;"	f
Enabled	plugged/vim-polyglot/syntax/python.vim	/^function! s:Enabled(name)$/;"	f
Python2Syntax	plugged/vim-polyglot/syntax/python.vim	/^function! s:Python2Syntax()$/;"	f
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:funcs_re = '__import__|abs|all|any|bin|callable|chr|classmethod|compile|complex|delattr|dir|divmod|enumerate|eval|filter|format|getattr|globals|hasattr|hash|help|hex|id|input|isinstance|issubclass|iter|len|locals|map|max|memoryview|min|next|oct|open|ord|pow|property|range|repr|reversed|round|setattr|slice|sorted|staticmethod|sum|super|type|vars|zip'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '|apply|basestring|buffer|cmp|coerce|execfile|file|intern|long|raw_input|reduce|reload|unichr|unicode|xrange'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^            let s:funcs_re .= '|print'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '|ascii|breakpoint|exec|print'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:funcs_re = 'syn match pythonBuiltinFunc ''\\v\\.@<!\\zs<%(' . s:funcs_re . ')>'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:funcs_re .= '\\=@!'$/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:exs_re = 'BaseException|Exception|ArithmeticError|LookupError|EnvironmentError|AssertionError|AttributeError|BufferError|EOFError|FloatingPointError|GeneratorExit|IOError|ImportError|IndexError|KeyError|KeyboardInterrupt|MemoryError|NameError|NotImplementedError|OSError|OverflowError|ReferenceError|RuntimeError|StopIteration|SyntaxError|IndentationError|TabError|SystemError|SystemExit|TypeError|UnboundLocalError|UnicodeError|UnicodeEncodeError|UnicodeDecodeError|UnicodeTranslateError|ValueError|VMSError|WindowsError|ZeroDivisionError|Warning|UserWarning|BytesWarning|DeprecationWarning|PendingDeprecationWarning|SyntaxWarning|RuntimeWarning|FutureWarning|ImportWarning|UnicodeWarning'$/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:exs_re .= '|StandardError'$/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^        let s:exs_re .= '|BlockingIOError|ChildProcessError|ConnectionError|BrokenPipeError|ConnectionAbortedError|ConnectionRefusedError|ConnectionResetError|FileExistsError|FileNotFoundError|InterruptedError|IsADirectoryError|NotADirectoryError|PermissionError|ProcessLookupError|TimeoutError|StopAsyncIteration|ResourceWarning'$/;"	v
did_python_syn_inits	plugged/vim-polyglot/syntax/python.vim	/^        let did_python_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/python.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/python.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/python.vim	/^let b:current_syntax = 'python'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/freebasic.vim	/^let b:current_syntax = "freebasic"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/aptconf.vim	/^  let main_syntax = 'aptconf'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/aptconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aptconf.vim	/^let b:current_syntax = "aptconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/applescript.vim	/^let b:current_syntax = "applescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kix.vim	/^let b:current_syntax = "kix"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ist.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ist.vim	/^let b:current_syntax = "ist"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gsl.vim	/^let b:current_syntax = "gsl"$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/gsl.vim	/^let s:save_cpo = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rrst.vim	/^let b:current_syntax = "rrst"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/ora.vim	/^  let main_syntax = 'ora'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ora.vim	/^let b:current_syntax = "ora"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/aspperl.vim	/^  let main_syntax = 'perlscript'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aspperl.vim	/^let b:current_syntax = "aspperl"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/group.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/group.vim	/^let b:current_syntax = "group"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	    let b:lhs_markup = matchstr(lhs_markup,'\\<\\%(tex\\|md\\|none\\)\\>')$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	    let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "unknown"$/;"	v
s:oldline	plugged/vim-polyglot/syntax/lhaskell.vim	/^let s:oldline=line(".")$/;"	v
s:oldcolumn	plugged/vim-polyglot/syntax/lhaskell.vim	/^let s:oldcolumn=col(".")$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "tex"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^        let b:lhs_markup = "md"$/;"	v
b:lhs_markup	plugged/vim-polyglot/syntax/lhaskell.vim	/^	let b:lhs_markup = "plain"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lhaskell.vim	/^let b:current_syntax = "lhaskell"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/diff.vim	/^let b:current_syntax = "diff"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smith.vim	/^let b:current_syntax = "smith"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/stp.vim	/^let b:current_syntax = "stp"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/m4.vim	/^  let main_syntax='m4'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/m4.vim	/^let b:current_syntax = "m4"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/samba.vim	/^let b:current_syntax = "samba"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/crm.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/crm.vim	/^let b:current_syntax = "crm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/svn.vim	/^let b:current_syntax = "svn"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ch.vim	/^let b:current_syntax = "ch"$/;"	v
did_proto_syn_inits	plugged/vim-polyglot/syntax/fbs.vim	/^    let did_proto_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/fbs.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fbs.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/fbs.vim	/^let b:current_syntax = "fbs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/zir.vim	/^let b:current_syntax = "zir"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slpreg.vim	/^let b:current_syntax = "slpreg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/git.vim	/^let b:current_syntax = "git"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/logindefs.vim	/^let b:current_syntax = "logindefs"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/desktop.vim	/^let s:cpo_save = &cpo$/;"	v
s:desktop_enable_nonstd	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_nonstd = v:true$/;"	v
s:desktop_enable_nonstd	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_nonstd = v:false$/;"	v
s:desktop_enable_kde	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_kde = v:true$/;"	v
s:desktop_enable_kde	plugged/vim-polyglot/syntax/desktop.vim	/^  let s:desktop_enable_kde = v:false$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/desktop.vim	/^let b:current_syntax = "desktop"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/make.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/make.vim	/^let b:current_syntax = "make"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mailcap.vim	/^let b:current_syntax = "mailcap"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sysctl.vim	/^let b:current_syntax = "sysctl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xquery.vim	/^let b:current_syntax = "xquery"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/reason.vim	/^let b:current_syntax = "reason"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sensors.vim	/^let b:current_syntax = "sensors"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/i3config.vim	/^let b:current_syntax = "i3config"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pike.vim	/^let s:cpo_save = &cpo$/;"	v
b:match_words	plugged/vim-polyglot/syntax/pike.vim	/^let b:match_words = "({:}\\\\@1<=),(\\\\[:]\\\\@1<=),(<:>\\\\@1<=),^\\s*#\\s*\\%(if\\%(n\\?def\\)\\|else\\|el\\%(se\\)\\?if\\|endif\\)\\>"$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/pike.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/pike.vim	/^    let b:c_minlines = 400	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/pike.vim	/^    let b:c_minlines = 200	" mostly for multiline strings$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pike.vim	/^let b:current_syntax = "pike"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/opl.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/opl.vim	/^let b:current_syntax = "opl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/expect.vim	/^let b:current_syntax = "expect"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gnash.vim	/^let b:current_syntax = "gnash"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mgp.vim	/^let b:current_syntax = "mgp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gtkrc.vim	/^let b:current_syntax = "gtkrc"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:cpo_save = &cpo$/;"	v
s:kernels	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:kernels = ['linux', 'hurd', 'kfreebsd', 'knetbsd', 'kopensolaris', 'netbsd']$/;"	v
s:archs	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:archs = [$/;"	v
s:pairs	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:pairs = [$/;"	v
s:sections	plugged/vim-polyglot/syntax/debcontrol.vim	/^let s:sections = [$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debcontrol.vim	/^let b:current_syntax = 'debcontrol'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kscript.vim	/^let b:current_syntax = "kscript"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/indent.vim	/^let s:cpo_save = &cpo$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/indent.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/indent.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/indent.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/indent.vim	/^let b:current_syntax = "indent"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
g:eruby_default_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^.\\{-\\}\\ze\\.eruby\\>')$/;"	v
s:lines	plugged/vim-polyglot/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\|\\.example\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(&filetype,'\\C\\<eruby\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eruby.vim	/^let b:current_syntax = matchstr(&syntax, '^.*\\<eruby\\>')$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wsml.vim	/^let b:current_syntax = "wsml"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/wsml.vim	/^let b:spell_options="contained"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/forth.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/forth.vim	/^let b:current_syntax = "forth"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/wast.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wast.vim	/^let b:current_syntax = "wast"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cl.vim	/^let b:current_syntax = "cl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/oasis.vim	/^let b:current_syntax = "oasis"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/murphi.vim	/^let b:current_syntax = "murphi"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bindzone.vim	/^let b:current_syntax = "bindzone"$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/mp.vim	/^let s:cpo_sav = &cpo$/;"	v
s:plain_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let s:plain_mf_macros = g:plain_mf_macros$/;"	v
s:plain_mf_modes	plugged/vim-polyglot/syntax/mp.vim	/^  let s:plain_mf_modes = g:plain_mf_modes$/;"	v
s:other_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let s:other_mf_macros = g:other_mf_macros$/;"	v
g:plain_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^let g:plain_mf_macros = 0 " plain.mf has no special meaning for MetaPost$/;"	v
g:plain_mf_modes	plugged/vim-polyglot/syntax/mp.vim	/^let g:plain_mf_modes  = 0 " No METAFONT modes$/;"	v
g:other_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^let g:other_mf_macros = 0 " cmbase.mf, logo.mf, ... neither$/;"	v
g:plain_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let g:plain_mf_macros = s:plain_mf_macros$/;"	v
g:plain_mf_modes	plugged/vim-polyglot/syntax/mp.vim	/^  let g:plain_mf_modes = s:plain_mf_modes$/;"	v
g:other_mf_macros	plugged/vim-polyglot/syntax/mp.vim	/^  let g:other_mf_macros = s:other_mf_macros$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mp.vim	/^let b:current_syntax = "mp"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sudoers.vim	/^let b:current_syntax = "sudoers"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pamenv.vim	/^let b:current_syntax = "pamenv"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rego.vim	/^let b:current_syntax = 'rego'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mf.vim	/^let b:current_syntax = "mf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jgraph.vim	/^let b:current_syntax = "jgraph"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/idris.vim	/^let b:current_syntax = "idris"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/papp.vim	/^let b:current_syntax = "papp"$/;"	v
HtmlHiLink	plugged/vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
s:conceal	plugged/vim-polyglot/syntax/markdown.vim	/^let s:conceal = ''$/;"	v
s:concealends	plugged/vim-polyglot/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:concealcode	plugged/vim-polyglot/syntax/markdown.vim	/^let s:concealcode = ''$/;"	v
s:conceal	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:conceal = ' conceal'$/;"	v
s:concealends	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealcode	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:concealcode = ' concealends'$/;"	v
s:oneline	plugged/vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ''$/;"	v
s:oneline	plugged/vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ' oneline'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/markdown.vim	/^let b:current_syntax = "mkd"$/;"	v
did_racket_syntax_inits	plugged/vim-polyglot/syntax/racket.vim	/^    let did_racket_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/racket.vim	/^let b:current_syntax = "racket"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/asn.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asn.vim	/^let b:current_syntax = "asn"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/catalog.vim	/^let b:current_syntax = "catalog"$/;"	v
b:Xsl_SyntaxFold_by	plugged/vim-polyglot/syntax/xsl.vim	/^	let b:Xsl_SyntaxFold_by=''$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xsl.vim	/^let b:current_syntax = "xsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugvariables.vim	/^let b:current_syntax = "godebugvariables"$/;"	v
carp_syntax_init	plugged/vim-polyglot/syntax/carp.vim	/^    let carp_syntax_init = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/carp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/carp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/carp.vim	/^let b:current_syntax = "carp"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
b:erlang_syntax_synced	plugged/vim-polyglot/syntax/erlang.vim	/^let b:erlang_syntax_synced = 1$/;"	v
s:old_style	plugged/vim-polyglot/syntax/erlang.vim	/^let s:old_style = (exists("g:erlang_old_style_highlight") &&$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/n1ql.vim	/^let b:current_syntax = "n1ql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gretl.vim	/^let b:current_syntax="gretl"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^  let main_syntax = 'jinja2'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = ''$/;"	v
HiLink	plugged/vim-polyglot/syntax/jinja2.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = "jinja2"$/;"	v
icon_minlines	plugged/vim-polyglot/syntax/icon.vim	/^  let icon_minlines = 15$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/icon.vim	/^let b:current_syntax = "icon"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/ferm.vim	/^  let main_syntax = 'ferm'$/;"	v
FermHiLink	plugged/vim-polyglot/syntax/ferm.vim	/^  command! -nargs=+ FermHiLink highlight link <args>$/;"	c
FermHiLink	plugged/vim-polyglot/syntax/ferm.vim	/^  command! -nargs=+ FermHiLink highlight default link <args>$/;"	c
g:Ferm_SpecialDelimiters	plugged/vim-polyglot/syntax/ferm.vim	/^    let   g:Ferm_SpecialDelimiters = g:fermSpecialDelimiters$/;"	v
s:Ferm_SpecialDelimiters	plugged/vim-polyglot/syntax/ferm.vim	/^    let s:Ferm_SpecialDelimiters = g:Ferm_SpecialDelimiters$/;"	v
s:Ferm_SpecialDelimiters	plugged/vim-polyglot/syntax/ferm.vim	/^    let s:Ferm_SpecialDelimiters = 0$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ferm.vim	/^let b:current_syntax = "ferm"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/lua.vim	/^  let main_syntax = 'lua'$/;"	v
FoldableRegion	plugged/vim-polyglot/syntax/lua.vim	/^function! s:FoldableRegion(tag, name, expr)$/;"	f
did_lua_syn_inits	plugged/vim-polyglot/syntax/lua.vim	/^    let did_lua_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/lua.vim	/^let b:current_syntax = "lua"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/denyhosts.vim	/^let b:current_syntax = "denyhosts"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/usserverlog.vim	/^let b:current_syntax = "usserverlog"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/groovy.vim	/^  let main_syntax='groovy'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/groovy.vim	/^let s:cpo_save = &cpo$/;"	v
groovy_minlines	plugged/vim-polyglot/syntax/groovy.vim	/^  let groovy_minlines = 10$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/groovy.vim	/^let b:spell_options="contained"$/;"	v
did_ps1_syn_inits	plugged/vim-polyglot/syntax/ps1.vim	/^		let did_ps1_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/ps1.vim	/^let b:current_syntax = "ps1"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/povini.vim	/^let b:current_syntax = "povini"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mix.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mix.vim	/^let b:current_syntax = "mix"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slpconf.vim	/^let b:current_syntax = "slpconf"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/tf.vim	/^  let main_syntax = 'tf'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tf.vim	/^let b:current_syntax = "tf"$/;"	v
mel_minlines	plugged/vim-polyglot/syntax/mel.vim	/^  let mel_minlines=15$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mel.vim	/^let b:current_syntax = "mel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asl.vim	/^let b:current_syntax = "asl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asl.vim	/^let b:current_syntax = "asl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ldif.vim	/^let b:current_syntax = "ldif"$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/j.vim	/^let s:save_cpo = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/j.vim	/^let b:current_syntax = 'j'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
g:liquid_default_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
s:lines	plugged/vim-polyglot/syntax/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
g:liquid_highlight_types	plugged/vim-polyglot/syntax/liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
s:subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
b:	plugged/vim-polyglot/syntax/liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lout.vim	/^let s:cpo_save=&cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lout.vim	/^let b:current_syntax = "lout"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/radiance.vim	/^let b:current_syntax = "radiance"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haste.vim	/^let b:current_syntax = "haste"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/verilog.vim	/^let b:current_syntax = "verilog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/winbatch.vim	/^let b:current_syntax = "winbatch"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wvdial.vim	/^let b:current_syntax = "wvdial"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fan.vim	/^let b:current_syntax = "fan"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/uc.vim	/^  let main_syntax='uc'$/;"	v
uc_minlines	plugged/vim-polyglot/syntax/uc.vim	/^  let uc_minlines = 10$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/uc.vim	/^let b:current_syntax = "uc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/prolog.vim	/^let b:current_syntax = "prolog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/procmail.vim	/^let b:current_syntax = "procmail"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mailaliases.vim	/^let b:current_syntax = "mailaliases"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dcd.vim	/^let b:current_syntax = "dcd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dylan.vim	/^let b:current_syntax = "dylan"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gpg.vim	/^let b:current_syntax = "gpg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/psf.vim	/^let b:current_syntax = "psf"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ddoc.vim	/^    let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ddoc.vim	/^    let b:current_syntax = "ddoc"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ddoc.vim	/^    let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ddoc.vim	/^    let b:current_syntax = "ddoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/iss.vim	/^let b:current_syntax = "iss"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/epuppet.vim	/^let b:current_syntax = "epuppet"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/a2ps.vim	/^let b:current_syntax = "a2ps"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/docker-compose.vim	/^    let main_syntax = 'yaml'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/docker-compose.vim	/^let b:current_syntax = "dockercompose"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/acedb.vim	/^let b:current_syntax = "acedb"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gdb.vim	/^let s:cpo_save = &cpo$/;"	v
gdb_minlines	plugged/vim-polyglot/syntax/gdb.vim	/^  let gdb_minlines = 10$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gdb.vim	/^let b:current_syntax = "gdb"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kconfig.vim	/^let b:current_syntax = "kconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstreamdat.vim	/^let b:current_syntax = "upstreamdat"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/elixir.vim	/^  let main_syntax = "elixir"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/elixir.vim	/^let s:cpo_save = &cpo$/;"	v
g:elixir_use_markdown_for_docs	plugged/vim-polyglot/syntax/elixir.vim	/^  let g:elixir_use_markdown_for_docs = 0$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elixir.vim	/^let b:current_syntax = "elixir"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kotlin.vim	/^let b:current_syntax = 'kotlin'$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/taskedit.vim	/^let s:keepcpo= &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/taskedit.vim	/^let b:current_syntax = "taskedit"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/mason.vim	/^	let main_syntax = 'mason'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mason.vim	/^let b:current_syntax = "mason"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
set_guicolors	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:set_guicolors() abort$/;"	f
get_hi_str	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:get_hi_str(color, place) abort$/;"	f
get_256color	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:get_256color(colors) abort$/;"	f
preview_color	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:preview_color(linenr) abort$/;"	f
reset_colors	plugged/vim-polyglot/syntax/dircolors.vim	/^function! s:reset_colors() abort$/;"	f
b:dc_next_index	plugged/vim-polyglot/syntax/dircolors.vim	/^let b:dc_next_index = 0$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dircolors.vim	/^let b:current_syntax = "dircolors"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fish.vim	/^let b:current_syntax = 'fish'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/usw2kagtlog.vim	/^let b:current_syntax = "usw2kagentlog"$/;"	v
CheckForFunctions	plugged/vim-polyglot/syntax/octave.vim	/^function! s:CheckForFunctions()$/;"	f
did_octave_syntax_inits	plugged/vim-polyglot/syntax/octave.vim	/^    let did_octave_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/octave.vim	/^let b:current_syntax = "octave"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/brewfile.vim	/^let b:current_syntax = "brewfile"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nanorc.vim	/^let b:current_syntax = "nanorc"$/;"	v
s:cpo	plugged/vim-polyglot/syntax/scheme.vim	/^let s:cpo = &cpo$/;"	v
b:did_scheme_syntax	plugged/vim-polyglot/syntax/scheme.vim	/^let b:did_scheme_syntax = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scheme.vim	/^let b:current_syntax = 'scheme'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vb.vim	/^let b:current_syntax = "vb"$/;"	v
hog_minlines	plugged/vim-polyglot/syntax/hog.vim	/^    let hog_minlines = 100$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hog.vim	/^let b:current_syntax = "hog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/edif.vim	/^let b:current_syntax = "edif"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/udevperm.vim	/^let b:current_syntax = "udevperm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ember-script.vim	/^let b:current_syntax = 'ember-script'$/;"	v
b:is_hledger	plugged/vim-polyglot/syntax/ledger.vim	/^    let b:is_hledger = 1$/;"	v
b:is_hledger	plugged/vim-polyglot/syntax/ledger.vim	/^    let b:is_hledger = 0$/;"	v
s:oe	plugged/vim-polyglot/syntax/ledger.vim	/^let s:oe = '\\%#=1'$/;"	v
s:lb1	plugged/vim-polyglot/syntax/ledger.vim	/^let s:lb1 = '\\@1<='$/;"	v
s:line_comment_chars	plugged/vim-polyglot/syntax/ledger.vim	/^let s:line_comment_chars = b:is_hledger ? ';*#' : ';|*#%'$/;"	v
s:fb	plugged/vim-polyglot/syntax/ledger.vim	/^let s:fb = get(g:, 'ledger_fold_blanks', 0)$/;"	v
s:skip	plugged/vim-polyglot/syntax/ledger.vim	/^let s:skip = s:fb > 0 ? '\\|^\\n' : ''$/;"	v
s:skip	plugged/vim-polyglot/syntax/ledger.vim	/^  let s:skip .= '\\n\\@!'$/;"	v
s:ledgerAmount_contains	plugged/vim-polyglot/syntax/ledger.vim	/^let s:ledgerAmount_contains = ''$/;"	v
s:ledgerAmount_contains	plugged/vim-polyglot/syntax/ledger.vim	/^    let s:ledgerAmount_contains .= '@NoSpell'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ledger.vim	/^let b:current_syntax = b:is_hledger ? 'hledger' : 'ledger'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/csc.vim	/^let s:cpo_save = &cpo$/;"	v
csc_minlines	plugged/vim-polyglot/syntax/csc.vim	/^	let csc_minlines = 50	" mostly for () constructs$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csc.vim	/^let b:current_syntax = "csc"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/qml.vim	/^  let main_syntax = 'qml'$/;"	v
did_qml_syn_inits	plugged/vim-polyglot/syntax/qml.vim	/^    let did_qml_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/qml.vim	/^let b:current_syntax = "qml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jess.vim	/^let b:current_syntax = "jess"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/terraform.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/terraform.vim	/^let b:current_syntax = 'terraform'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/texmf.vim	/^let b:current_syntax = "texmf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/razor.vim	/^let b:current_syntax = "razor"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mib.vim	/^let b:current_syntax = "mib"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sqloracle.vim	/^let b:current_syntax = "sql"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/gsp.vim	/^  let main_syntax = 'gsp'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/gsp.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gsp.vim	/^let b:current_syntax = "gsp"$/;"	v
g:main_syntax	plugged/vim-polyglot/syntax/gohtmltmpl.vim	/^  let g:main_syntax = 'html'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pilrc.vim	/^let b:current_syntax = "pilrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocamlbuild_tags.vim	/^let b:current_syntax = "ocamlbuild_tags"$/;"	v
b:mako_outer_lang	plugged/vim-polyglot/syntax/mako.vim	/^    let b:mako_outer_lang = g:mako_default_outer_lang$/;"	v
b:mako_outer_lang	plugged/vim-polyglot/syntax/mako.vim	/^    let b:mako_outer_lang = "html"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/mako.vim	/^  let main_syntax = b:mako_outer_lang$/;"	v
did_mako_syn_inits	plugged/vim-polyglot/syntax/mako.vim	/^    let did_mako_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/mako.vim	/^let b:current_syntax = b:mako_outer_lang$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/focexec.vim	/^let b:current_syntax = "focexec"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bzl.vim	/^let b:current_syntax = 'bzl'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lprolog.vim	/^let b:current_syntax = "lprolog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/esterel.vim	/^let b:current_syntax = "esterel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/occam.vim	/^let b:current_syntax = "occam"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spice.vim	/^let b:current_syntax = "spice"$/;"	v
enabled	plugged/vim-polyglot/syntax/svelte.vim	/^function! s:enabled(language)$/;"	f
s:languages	plugged/vim-polyglot/syntax/svelte.vim	/^let s:languages = [$/;"	v
s:languages	plugged/vim-polyglot/syntax/svelte.vim	/^  let s:languages += g:svelte_preprocessor_tags$/;"	v
s:attr	plugged/vim-polyglot/syntax/svelte.vim	/^  let s:attr = '\\(lang\\|type\\)=\\("\\|''\\)[^\\2]*' . s:language.name . '[^\\2]*\\2'$/;"	v
s:start	plugged/vim-polyglot/syntax/svelte.vim	/^  let s:start = '<' . s:language.tag . '\\>\\_[^>]*' . s:attr . '\\_[^>]*>'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/svelte.vim	/^let b:current_syntax = "svelte"$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/ocaml.vim	/^let s:keepcpo = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
cry_minlines	plugged/vim-polyglot/syntax/cryptol.vim	/^  let cry_minlines = 50$/;"	v
did_cry_syntax_inits	plugged/vim-polyglot/syntax/cryptol.vim	/^    let did_cry_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/cryptol.vim	/^let b:current_syntax = "cryptol"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/messages.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/messages.vim	/^let b:current_syntax = "messages"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/abaqus.vim	/^let b:current_syntax = "abaqus"$/;"	v
g:main_syntax	plugged/vim-polyglot/syntax/dart.vim	/^  let g:main_syntax = 'dart'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dart.vim	/^let b:current_syntax = 'dart'$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/dart.vim	/^let b:spell_options = 'contained'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ppd.vim	/^let b:current_syntax = "ppd"$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^let color  = ""$/;"	v
chars	plugged/vim-polyglot/syntax/xpm.vim	/^let chars  = ""$/;"	v
colors	plugged/vim-polyglot/syntax/xpm.vim	/^let colors = 0$/;"	v
cpp	plugged/vim-polyglot/syntax/xpm.vim	/^let cpp    = 0$/;"	v
n	plugged/vim-polyglot/syntax/xpm.vim	/^let n      = 0$/;"	v
i	plugged/vim-polyglot/syntax/xpm.vim	/^let i      = 1$/;"	v
s	plugged/vim-polyglot/syntax/xpm.vim	/^   let s = matchstr(getline(i), '".\\{-1,}"')$/;"	v
colors	plugged/vim-polyglot/syntax/xpm.vim	/^	 let colors = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
cpp	plugged/vim-polyglot/syntax/xpm.vim	/^	 let cpp = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
n	plugged/vim-polyglot/syntax/xpm.vim	/^	 let n = 1		" n = color index$/;"	v
chars	plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = substitute(s, '"\\(.\\{'.cpp.'}\\s\\).*"', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	 let color = substitute(s, '".*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(s, '".*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	       let color = substitute(s, '".*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^		  let color = substitute(s, '".*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^		     let color = ""$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	plugged/vim-polyglot/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
s	plugged/vim-polyglot/syntax/xpm.vim	/^	 let s = escape(s, '\/\\*^$.~[]')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	plugged/vim-polyglot/syntax/xpm.vim	/^	 let chars = substitute(chars, '.$', '', '')$/;"	v
n	plugged/vim-polyglot/syntax/xpm.vim	/^	 let n = n + 1$/;"	v
i	plugged/vim-polyglot/syntax/xpm.vim	/^   let i = i + 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xpm.vim	/^let b:current_syntax = "xpm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/falcon.vim	/^let b:current_syntax = "falcon"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sml.vim	/^let b:current_syntax = "sml"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/jam.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jam.vim	/^let b:current_syntax = "jam"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/desc.vim	/^let b:current_syntax = "desc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lidris.vim	/^let b:current_syntax = "lidris"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/basic.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/basic.vim	/^let b:current_syntax = "basic"$/;"	v
s:plgroups	plugged/vim-polyglot/syntax/pgsql.vim	/^let s:plgroups = 'plpgsql'$/;"	v
add_syntax	plugged/vim-polyglot/syntax/pgsql.vim	/^fun! s:add_syntax(s)$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/pgsql.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugoutput.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/csv.vim	/^let s:cpo_save = &cpo$/;"	v
Warning	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>Warning(msg) "{{{3$/;"	f
Esc	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>Esc(val, char) "{{{3 $/;"	f
CheckSaneSearchPattern	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>CheckSaneSearchPattern() "{{{3$/;"	f
DoHighlight	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>DoHighlight() "{{{3$/;"	f
HiLink	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>HiLink(name, target) "{{{3$/;"	f
DoSyntaxDefinitions	plugged/vim-polyglot/syntax/csv.vim	/^fu! <sid>DoSyntaxDefinitions() "{{{3$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/csv.vim	/^let b:current_syntax="csv"$/;"	v
s:original_cpo	plugged/vim-polyglot/syntax/tmux.vim	/^let s:original_cpo = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tmux.vim	/^let b:current_syntax = "tmux"$/;"	v
s:bg	plugged/vim-polyglot/syntax/tmux.vim	/^        let s:bg = (!s:i || s:i == 16 || (s:i > 231 && s:i < 235)) ? 15 : "none"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/blade.vim	/^    let main_syntax = 'blade'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/blade.vim	/^let b:current_syntax = 'blade'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xinetd.vim	/^let b:current_syntax = "xinetd"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/svg.vim	/^  let main_syntax = 'svg'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/svg.vim	/^let b:current_syntax = "svg"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/d.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/d.vim	/^let b:current_syntax = "d"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tilde.vim	/^let b:current_syntax = "tilde"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jal.vim	/^let b:current_syntax = "jal"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/grub.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/grub.vim	/^let b:current_syntax = "grub"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/alsaconf.vim	/^let b:current_syntax = "alsaconf"$/;"	v
d	plugged/vim-polyglot/syntax/julia.vim	/^  function! s:d(x)$/;"	f
d	plugged/vim-polyglot/syntax/julia.vim	/^  function! s:d(x)$/;"	f
s:julia_spellcheck_strings	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_strings = get(g:, "julia_spellcheck_strings", 0)$/;"	v
s:julia_spellcheck_docstrings	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_docstrings = get(g:, "julia_spellcheck_docstrings", 1)$/;"	v
s:julia_spellcheck_comments	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_comments = get(g:, "julia_spellcheck_comments", 1)$/;"	v
s:julia_highlight_operators	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_highlight_operators = get(g:, "julia_highlight_operators", 1)$/;"	v
s:nonid_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:nonid_chars = "\\U01-\\U07" . "\\U0E-\\U1F" .$/;"	v
s:nonidS_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:nonidS_chars = "[:space:])\\\\U5D}" . s:nonid_chars$/;"	v
s:uniop_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:uniop_chars = "+\\\\U2D~¬√∛∜⋆"$/;"	v
s:binop_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:binop_chars = "=+\\\\U2D*\/\\\\%÷^&|⊻<>≤≥≡≠≢∈∉⋅×∪∩⊆⊈⊂⊄⊊←→∋∌⊕⊖⊞⊟∘∧⊗⊘↑↓∨⊠±⟂⋆"$/;"	v
s:binop_chars_extra	plugged/vim-polyglot/syntax/julia.vim	/^let s:binop_chars_extra = "\\\\U214B\\\\U2190-\\\\U2194\\\\U219A\\\\U219B\\\\U21A0\\\\U21A3\\\\U21A6\\\\U21AE\\\\U21CE\\\\U21CF\\\\U21D2\\\\U21D4\\\\U21F4-\\\\U21FF\\\\U2208-\\\\U220D\\\\U2213\\\\U2214\\\\U2217-\\\\U2219\\\\U221D\\\\U2224-\\\\U222A\\\\U2237\\\\U2238\\\\U223A\\\\U223B\\\\U223D\\\\U223E\\\\U2240-\\\\U228B\\\\U228D-\\\\U229C\\\\U229E-\\\\U22A3\\\\U22A9\\\\U22AC\\\\U22AE\\\\U22B0-\\\\U22B7\\\\U22BB-\\\\U22BD\\\\U22C4-\\\\U22C7\\\\U22C9-\\\\U22D3\\\\U22D5-\\\\U22ED\\\\U22F2-\\\\U22FF\\\\U25B7\\\\U27C8\\\\U27C9\\\\U27D1\\\\U27D2\\\\U27D5-\\\\U27D7\\\\U27F0\\\\U27F1\\\\U27F5-\\\\U27F7\\\\U27F7\\\\U27F9-\\\\U27FF\\\\U2900-\\\\U2918\\\\U291D-\\\\U2920\\\\U2944-\\\\U2970\\\\U29B7\\\\U29B8\\\\U29BC\\\\U29BE-\\\\U29C1\\\\U29E1\\\\U29E3-\\\\U29E5\\\\U29F4\\\\U29F6\\\\U29F7\\\\U29FA\\\\U29FB\\\\U2A07\\\\U2A08\\\\U2A1D\\\\U2A22-\\\\U2A2E\\\\U2A30-\\\\U2A3D\\\\U2A40-\\\\U2A45\\\\U2A4A-\\\\U2A58\\\\U2A5A-\\\\U2A63\\\\U2A66\\\\U2A67\\\\U2A6A-\\\\U2AD9\\\\U2ADB\\\\U2AF7-\\\\U2AFA\\\\U2B30-\\\\U2B44\\\\U2B47-\\\\U2B4C\\\\UFFE9-\\\\UFFEC"$/;"	v
s:idregex	plugged/vim-polyglot/syntax/julia.vim	/^let s:idregex = '\\%([^' . s:nonidS_chars . '0-9!?' . s:uniop_chars . s:binop_chars . '][^' . s:nonidS_chars . s:uniop_chars . s:binop_chars . s:binop_chars_extra . ']*\\)'$/;"	v
s:operators	plugged/vim-polyglot/syntax/julia.vim	/^let s:operators = '\\%(' . '\\.\\%([-+*\/^÷%|&!]\\|\/\/\\|\\\\\\|<<\\|>>>\\?\\)\\?=' .$/;"	v
s:nodot	plugged/vim-polyglot/syntax/julia.vim	/^let s:nodot = '\\%(\\.\\)\\@'.s:d(1).'<!'$/;"	v
s:dec_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:dec_regex = '\\d\\%(_\\?\\d\\)*\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:hex_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:hex_regex = '0x\\x\\%(_\\?\\x\\)*\\%(\\>\\|im\\>\\|\\ze\\X\\)'$/;"	v
s:bin_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:bin_regex = '0b[01]\\%(_\\?[01]\\)*\\%(\\>\\|im\\>\\|\\ze[^01]\\)'$/;"	v
s:oct_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:oct_regex = '0o\\o\\%(_\\?\\o\\)*\\%(\\>\\|im\\>\\|\\ze\\O\\)'$/;"	v
s:int_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:int_regex = '\\%(' . s:hex_regex .$/;"	v
s:float_regex1	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex1 = '\\.\\d\\%(_\\?\\d\\)*\\%([eEf][-+]\\?\\d\\+\\)\\?\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:float_regex2	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex2 = '\\d\\%(_\\?\\d\\)*\\.\\%(\\d\\%(_\\?\\d\\)*\\)\\?\\%([eEf][-+]\\?\\d\\+\\)\\?\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:float_regex3	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex3 = '\\d\\%(_\\?\\d\\)*[eEf][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:hexfloat_regex1	plugged/vim-polyglot/syntax/julia.vim	/^let s:hexfloat_regex1 = '0x\\.\\%\\(\\x\\%(_\\?\\x\\)*\\)\\?[pP][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\ze\\X\\)'$/;"	v
s:hexfloat_regex2	plugged/vim-polyglot/syntax/julia.vim	/^let s:hexfloat_regex2 = '0x\\x\\%(_\\?\\x\\)*\\%\\(\\.\\%\\(\\x\\%(_\\?\\x\\)*\\)\\?\\)\\?[pP][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\ze\\X\\)'$/;"	v
s:float_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex = '\\%(' . s:float_regex3 .$/;"	v
s:interp_dollar	plugged/vim-polyglot/syntax/julia.vim	/^let s:interp_dollar = '\\([' . s:nonidS_chars . s:uniop_chars . s:binop_chars . '!?]\\|^\\)\\@'.s:d(1).'<=\\$'$/;"	v
s:quotable	plugged/vim-polyglot/syntax/julia.vim	/^let s:quotable = '\\%(' . s:idregex . '\\|?\\|' . s:operators . '\\|' . s:float_regex . '\\|' . s:int_regex . '\\)'$/;"	v
s:quoting_colon	plugged/vim-polyglot/syntax/julia.vim	/^let s:quoting_colon = '\\%(\\%(^\\s*\\|\\s\\{6,\\}\\|[' . s:nonid_chars . s:uniop_chars . s:binop_chars . '?]\\s*\\)\\@'.s:d(6).'<=\\|\\%(\\<\\%(return\\|if\\|else\\%(if\\)\\?\\|while\\|try\\|begin\\)\\s\\+\\)\\@'.s:d(9).'<=\\)\\zs:'$/;"	v
s:quoting_colonS	plugged/vim-polyglot/syntax/julia.vim	/^let s:quoting_colonS = '\\s\\@'.s:d(1).'<=:'$/;"	v
s:eol	plugged/vim-polyglot/syntax/julia.vim	/^let s:eol = '\\s*\\%(\\%(\\%(#=\\%(=#\\@!\\|[^=]\\|\\n\\)\\{-}=#\\)\\s*\\)\\+\\)\\?\\%(#=\\@!.*\\)\\?\\n'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/julia.vim	/^let b:current_syntax = "julia"$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/fennel.vim	/^let s:cpo_sav = &cpo$/;"	v
s:symcharnodig	plugged/vim-polyglot/syntax/fennel.vim	/^let s:symcharnodig = '\\!\\$%\\&\\#\\*\\+\\-.\/:<=>?A-Z^_a-z|\\x80-\\U10FFFF'$/;"	v
s:symchar	plugged/vim-polyglot/syntax/fennel.vim	/^let s:symchar = '0-9' . s:symcharnodig$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fennel.vim	/^let b:current_syntax = "fennel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kivy.vim	/^let b:current_syntax = "kivy"$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/autoit.vim	/^let s:keepcpo= &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/autoit.vim	/^let b:current_syntax = "autoit"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/systemd.vim	/^let b:current_syntax = "systemd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/caddyfile.vim	/^let b:current_syntax = "caddyfile"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cterm.vim	/^let b:current_syntax = "cterm"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nsis.vim	/^let b:current_syntax = "nsis"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
s:iskeyword_save	plugged/vim-polyglot/syntax/php.vim	/^let s:iskeyword_save = &iskeyword$/;"	v
php_html_load	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_load=1$/;"	v
php_html_in_heredoc	plugged/vim-polyglot/syntax/php.vim	/^    let php_html_in_heredoc=1$/;"	v
php_html_in_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^    let php_html_in_nowdoc=1$/;"	v
php_html_in_strings	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_strings=0$/;"	v
php_html_in_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_heredoc=0$/;"	v
php_html_in_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_nowdoc=0$/;"	v
php_sync_method	plugged/vim-polyglot/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
php_sync_method	plugged/vim-polyglot/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sql_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_sql_heredoc=1$/;"	v
php_sql_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_sql_nowdoc=1$/;"	v
b:sql_type_override	plugged/vim-polyglot/syntax/php.vim	/^    let b:sql_type_override='mysql'$/;"	v
php_xml_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_xml_heredoc=0$/;"	v
php_xml_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_xml_nowdoc=0$/;"	v
php_folding	plugged/vim-polyglot/syntax/php.vim	/^  let php_folding = 0$/;"	v
php_phpdoc_folding	plugged/vim-polyglot/syntax/php.vim	/^  let php_phpdoc_folding = 0$/;"	v
g:php_version_id	plugged/vim-polyglot/syntax/php.vim	/^  let g:php_version_id = 70300$/;"	v
b:php_version_id	plugged/vim-polyglot/syntax/php.vim	/^  let b:php_version_id = g:php_version_id$/;"	v
SynFold	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args> fold$/;"	c
SynFold	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args>$/;"	c
SynFoldDoc	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args> fold$/;"	c
SynFoldDoc	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args>$/;"	c
g:php_syntax_extensions_enabled	plugged/vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_enabled = ["bcmath", "bz2", "core", "curl", "date", "dom", "ereg", "gd", "gettext", "hash", "iconv", "json", "libxml", "mbstring", "mcrypt", "mhash", "mysql", "mysqli", "openssl", "pcre", "pdo", "pgsql", "phar", "reflection", "session", "simplexml", "soap", "sockets", "spl", "sqlite3", "standard", "tokenizer", "wddx", "xml", "xmlreader", "xmlwriter", "zip", "zlib"]$/;"	v
g:php_syntax_extensions_disabled	plugged/vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_disabled = []$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/juliadoc.vim	/^let b:current_syntax = "juliadoc"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/webmacro.vim	/^  let main_syntax = 'webmacro'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/webmacro.vim	/^let b:current_syntax = "webmacro"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lidris2.vim	/^let b:current_syntax = "lidris2"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/slim.vim	/^  let main_syntax = 'slim'$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/slim.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slim.vim	/^let b:current_syntax = "slim"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rpcgen.vim	/^let b:current_syntax = "rpcgen"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sather.vim	/^let b:current_syntax = "sather"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/stylus.vim	/^  let main_syntax = 'css'$/;"	v
did_css_syn_inits	plugged/vim-polyglot/syntax/stylus.vim	/^    let did_css_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/stylus.vim	/^let b:current_syntax = "stylus"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tssgm.vim	/^let b:current_syntax = "tssgm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstreamlog.vim	/^let b:current_syntax = "upstreamlog"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/logtalk.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/logtalk.vim	/^let b:current_syntax = "logtalk"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/tsalt.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tsalt.vim	/^let b:current_syntax = "tsalt"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vroom.vim	/^let b:current_syntax = 'vroom'$/;"	v
did_cql_syn_inits	plugged/vim-polyglot/syntax/cql.vim	/^    let did_cql_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/cql.vim	/^let b:current_syntax = "cql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/crontab.vim	/^let b:current_syntax = "crontab"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/css.vim	/^  let main_syntax = 'css'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/css.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/css.vim	/^let b:current_syntax = "css"$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/cs.vim	/^let s:save_cpo = &cpoptions$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cs.vim	/^let b:current_syntax = 'cs'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/opencl.vim	/^let b:current_syntax = "opencl"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/art.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/art.vim	/^let b:current_syntax = "art"$/;"	v
b:match_words	plugged/vim-polyglot/syntax/cdl.vim	/^let b:match_words='\\<if\\>:\\<then\\>:\\<elseif\\>:\\<else\\>:\\<endif\\>'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cdl.vim	/^let b:current_syntax = "cdl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vrml.vim	/^let b:current_syntax = "vrml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cuplsim.vim	/^let b:current_syntax = "cuplsim"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dosini.vim	/^let b:current_syntax = "dosini"$/;"	v
did_rhelp_syntax_inits	plugged/vim-polyglot/syntax/rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/wml.vim	/^  let main_syntax = 'wml'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wml.vim	/^let b:current_syntax = "wml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cynpp.vim	/^let b:current_syntax = "cynpp"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/typescript.vim	/^  let main_syntax = 'typescript'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
s:vala_cpo_save	plugged/vim-polyglot/syntax/vala.vim	/^let s:vala_cpo_save = &cpo$/;"	v
b:vala_minlines	plugged/vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = vala_minlines$/;"	v
b:vala_minlines	plugged/vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = 50$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vala.vim	/^let b:current_syntax = "vala"$/;"	v
b:main_syntax	plugged/vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = b:current_syntax$/;"	v
b:main_syntax	plugged/vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = 'twig'$/;"	v
did_twig_syn_inits	plugged/vim-polyglot/syntax/twig.vim	/^    let did_twig_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/gkrellmrc.vim	/^let b:current_syntax = "gkrellmrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scilab.vim	/^let b:current_syntax = "scilab"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dictconf.vim	/^let b:current_syntax = "dictconf"$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
g:cucumber_languages	plugged/vim-polyglot/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
pattern	plugged/vim-polyglot/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
Add	plugged/vim-polyglot/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rib.vim	/^let b:current_syntax = "rib"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/netrc.vim	/^let b:current_syntax = "netrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xdefaults.vim	/^let b:current_syntax = "xdefaults"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dracula.vim	/^let b:current_syntax = "dracula"$/;"	v
did_typescript_hilink	plugged/vim-polyglot/syntax/common.vim	/^let did_typescript_hilink = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/common.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/zephir.vim	/^let b:current_syntax = "zephir"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pyrex.vim	/^let b:current_syntax = "pyrex"$/;"	v
postscr_level	plugged/vim-polyglot/syntax/postscr.vim	/^  let postscr_level = 2$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/postscr.vim	/^let b:current_syntax = "postscr"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cf.vim	/^let s:cpo_save=&cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cf.vim	/^let b:current_syntax = "cfml"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:ft	plugged/vim-polyglot/syntax/c.vim	/^let s:ft = matchstr(&ft, '^\\([^.]\\)\\+')$/;"	v
s:in_cpp_family	plugged/vim-polyglot/syntax/c.vim	/^let s:in_cpp_family = exists("b:filetype_in_cpp_family")$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ampl.vim	/^let b:current_syntax = "ampl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sshdconfig.vim	/^let b:current_syntax = "sshdconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocpbuildroot.vim	/^let b:current_syntax = "ocpbuildroot"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csp.vim	/^let b:current_syntax = "csp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smt2.vim	/^let b:current_syntax = "smt2"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/tpp.vim	/^  let main_syntax = 'tpp'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tpp.vim	/^let b:current_syntax = 'tpp'$/;"	v
s:dtd_cpo_save	plugged/vim-polyglot/syntax/dtd.vim	/^let s:dtd_cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dtd.vim	/^let b:current_syntax = "dtd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/toml.vim	/^let b:current_syntax = 'toml'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/b.vim	/^let b:current_syntax = "b"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bc.vim	/^let b:current_syntax = "bc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mgl.vim	/^let b:current_syntax = "mgl"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/passwd.vim	/^let b:current_syntax = "passwd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smcl.vim	/^let b:current_syntax = "smcl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dune.vim	/^let b:current_syntax = "dune"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cfg.vim	/^let b:current_syntax = "cfg"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ibasic.vim	/^let b:current_syntax = "ibasic"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/htmldjango.vim	/^  let main_syntax = 'html'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/htmldjango.vim	/^let b:current_syntax = "htmldjango"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/esmtprc.vim	/^let b:current_syntax = "esmtprc"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/hjson.vim	/^  let main_syntax = 'hjson'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hjson.vim	/^let b:current_syntax = "hjson"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lilo.vim	/^let b:current_syntax = "lilo"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/wget.vim	/^let s:cpo_save = &cpo$/;"	v
s:commands	plugged/vim-polyglot/syntax/wget.vim	/^let s:commands = map([$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wget.vim	/^let b:current_syntax = "wget"$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/raku.vim	/^let s:keepcpo= &cpo$/;"	v
s:keywords	plugged/vim-polyglot/syntax/raku.vim	/^let s:keywords = {$/;"	v
s:types	plugged/vim-polyglot/syntax/raku.vim	/^let s:types = [$/;"	v
s:alpha_metaops	plugged/vim-polyglot/syntax/raku.vim	/^let s:alpha_metaops = [$/;"	v
s:words_space	plugged/vim-polyglot/syntax/raku.vim	/^let s:words_space = join(s:alpha_metaops, " ")$/;"	v
s:temp	plugged/vim-polyglot/syntax/raku.vim	/^let s:temp = split(s:words_space)$/;"	v
s:alpha_metaops_or	plugged/vim-polyglot/syntax/raku.vim	/^let s:alpha_metaops_or = join(s:temp, "\\\\|")$/;"	v
s:words_space	plugged/vim-polyglot/syntax/raku.vim	/^    let s:words_space = join(s:words_list, " ")$/;"	v
s:temp	plugged/vim-polyglot/syntax/raku.vim	/^    let s:temp = split(s:words_space)$/;"	v
s:words	plugged/vim-polyglot/syntax/raku.vim	/^    let s:words = join(s:temp, "\\\\|")$/;"	v
s:words_space	plugged/vim-polyglot/syntax/raku.vim	/^let s:words_space = join(s:types, " ")$/;"	v
s:temp	plugged/vim-polyglot/syntax/raku.vim	/^let s:temp = split(s:words_space)$/;"	v
s:words	plugged/vim-polyglot/syntax/raku.vim	/^let s:words = join(s:temp, "\\\\|")$/;"	v
s:plain_delims	plugged/vim-polyglot/syntax/raku.vim	/^let s:plain_delims = [$/;"	v
s:bracketing_delims	plugged/vim-polyglot/syntax/raku.vim	/^let s:bracketing_delims = [$/;"	v
s:all_delims	plugged/vim-polyglot/syntax/raku.vim	/^let s:all_delims = s:plain_delims + s:bracketing_delims$/;"	v
did_raku_syntax_inits	plugged/vim-polyglot/syntax/raku.vim	/^        let did_raku_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/raku.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/raku.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/raku.vim	/^let b:current_syntax = "raku"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/log.vim	/^let s:cpo_save = &cpoptions$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/log.vim	/^let b:current_syntax = 'log'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/spup.vim	/^let s:cpo_save = &cpo$/;"	v
highlight_types	plugged/vim-polyglot/syntax/spup.vim	/^    let highlight_types = 1$/;"	v
oneline_comments	plugged/vim-polyglot/syntax/spup.vim	/^    let oneline_comments = 2$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/spup.vim	/^let b:current_syntax = "spup"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ncf.vim	/^let b:current_syntax = "ncf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elmfilt.vim	/^let b:current_syntax = "elmfilt"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugstacktrace.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/simula.vim	/^let b:current_syntax = "simula"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aidl.vim	/^let b:current_syntax = "aidl"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/pdf.vim	/^    let main_syntax = 'pdf'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pdf.vim	/^let b:current_syntax = "pdf"$/;"	v
dosbatch_cmdextversion	plugged/vim-polyglot/syntax/dosbatch.vim	/^  let dosbatch_cmdextversion = 2$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dosbatch.vim	/^let b:current_syntax = "dosbatch"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/smarty.vim	/^  let main_syntax = 'smarty'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/smarty.vim	/^let b:current_syntax = "smarty"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/modconf.vim	/^let b:current_syntax = "modconf"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
b:framescript_minlines	plugged/vim-polyglot/syntax/framescript.vim	/^let b:framescript_minlines = exists("framescript_minlines")$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/framescript.vim	/^let b:current_syntax = "framescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pine.vim	/^let b:current_syntax = "pine"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sisu.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sisu.vim	/^let b:current_syntax = "sisu"$/;"	v
did_txt_syn_inits	plugged/vim-polyglot/syntax/textile.vim	/^        let did_txt_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/syntax/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
b:yaml_schema	plugged/vim-polyglot/syntax/yaml.vim	/^    let b:yaml_schema = g:yaml_schema$/;"	v
b:yaml_schema	plugged/vim-polyglot/syntax/yaml.vim	/^    let b:yaml_schema = 'core'$/;"	v
s:ns_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char = '\\%([\\n\\r\\uFEFF \\t]\\@!\\p\\)'$/;"	v
s:ns_word_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_word_char = '[[:alnum:]_\\-]'$/;"	v
s:ns_uri_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_uri_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$,.!~*''()[\\]]\\)'$/;"	v
s:ns_tag_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$.~*''()]\\)'$/;"	v
s:c_ns_anchor_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_char = '\\%([\\n\\r\\uFEFF \\t,[\\]{}]\\@!\\p\\)'$/;"	v
s:c_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_indicator      = '[\\-?:,[\\]{}#&*!|>''"%@`]'$/;"	v
s:c_flow_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_flow_indicator = '[,[\\]{}]'$/;"	v
s:ns_char_without_c_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char_without_c_indicator = substitute(s:ns_char, '\\v\\C[\\zs', '\\=s:c_indicator[1:-2]', '')$/;"	v
s:_collection	plugged/vim-polyglot/syntax/yaml.vim	/^let s:_collection = '[^\\@!\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_neg_collection	plugged/vim-polyglot/syntax/yaml.vim	/^let s:_neg_collection = '[^\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
SimplifyToAssumeAllPrintable	plugged/vim-polyglot/syntax/yaml.vim	/^function s:SimplifyToAssumeAllPrintable(p)$/;"	f
s:ns_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char = s:SimplifyToAssumeAllPrintable(s:ns_char)$/;"	v
s:ns_char_without_c_indicator	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_char_without_c_indicator = s:SimplifyToAssumeAllPrintable(s:ns_char_without_c_indicator)$/;"	v
s:c_ns_anchor_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_char = s:SimplifyToAssumeAllPrintable(s:c_ns_anchor_char)$/;"	v
SimplifyAdjacentCollections	plugged/vim-polyglot/syntax/yaml.vim	/^function s:SimplifyAdjacentCollections(p)$/;"	f
s:ns_uri_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_uri_char = s:SimplifyAdjacentCollections(s:ns_uri_char)$/;"	v
s:ns_tag_char	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_char = s:SimplifyAdjacentCollections(s:ns_tag_char)$/;"	v
s:c_verbatim_tag	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_verbatim_tag = '!<'.s:ns_uri_char.'\\+>'$/;"	v
s:c_named_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_named_tag_handle     = '!'.s:ns_word_char.'\\+!'$/;"	v
s:c_secondary_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_secondary_tag_handle = '!!'$/;"	v
s:c_primary_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_primary_tag_handle   = '!'$/;"	v
s:c_tag_handle	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_tag_handle = '\\%('.s:c_named_tag_handle.$/;"	v
s:c_ns_shorthand_tag	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_shorthand_tag = s:c_tag_handle . s:ns_tag_char.'\\+'$/;"	v
s:c_non_specific_tag	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_non_specific_tag = '!'$/;"	v
s:c_ns_tag_property	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_tag_property = s:c_verbatim_tag.$/;"	v
s:c_ns_anchor_name	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'\\+'$/;"	v
s:c_ns_anchor_property	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_anchor_property =  '&'.s:c_ns_anchor_name$/;"	v
s:c_ns_alias_node	plugged/vim-polyglot/syntax/yaml.vim	/^let s:c_ns_alias_node      = '\\*'.s:c_ns_anchor_name$/;"	v
s:ns_directive_name	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_directive_name = s:ns_char.'\\+'$/;"	v
s:ns_local_tag_prefix	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_local_tag_prefix  = '!'.s:ns_uri_char.'*'$/;"	v
s:ns_global_tag_prefix	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_global_tag_prefix = s:ns_tag_char.s:ns_uri_char.'*'$/;"	v
s:ns_tag_prefix	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_tag_prefix = s:ns_local_tag_prefix.$/;"	v
s:ns_plain_safe_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_out = s:ns_char$/;"	v
s:ns_plain_safe_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in  = '\\%('.s:c_flow_indicator.'\\@!'.s:ns_char.'\\)'$/;"	v
s:ns_plain_safe_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in = substitute(s:ns_plain_safe_in, '\\V\\C\\\\%('.s:_collection.'\\\\@!'.s:_neg_collection.'\\\\)', '[^\\1\\2]', '')$/;"	v
s:ns_plain_safe_in_without_colhash	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_in_without_colhash = substitute(s:ns_plain_safe_in, '\\V\\C'.s:_neg_collection, '[^\\1:#]', '')$/;"	v
s:ns_plain_safe_out_without_colhash	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_safe_out_without_colhash = substitute(s:ns_plain_safe_out, '\\V\\C'.s:_neg_collection, '[^\\1:#]', '')$/;"	v
s:ns_plain_first_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_first_in  = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe_in.'\\)\\@=\\)'$/;"	v
s:ns_plain_first_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_first_out = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe_out.'\\)\\@=\\)'$/;"	v
s:ns_plain_char_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_char_in  = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_in.'\\|'.s:ns_plain_safe_in_without_colhash.'\\)'$/;"	v
s:ns_plain_char_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_char_out = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_out.'\\|'.s:ns_plain_safe_out_without_colhash.'\\)'$/;"	v
s:ns_plain_out	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_out = s:ns_plain_first_out . s:ns_plain_char_out.'*'$/;"	v
s:ns_plain_in	plugged/vim-polyglot/syntax/yaml.vim	/^let s:ns_plain_in  = s:ns_plain_first_in  . s:ns_plain_char_in.'*'$/;"	v
s:_bounder	plugged/vim-polyglot/syntax/yaml.vim	/^let s:_bounder = s:SimplifyToAssumeAllPrintable('\\%([[\\]{}, \\t]\\@!\\p\\)')$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/yaml.vim	/^let b:current_syntax = "yaml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sdc.vim	/^let b:current_syntax = "sdc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/inittab.vim	/^let b:current_syntax = "inittab"$/;"	v
did_proto_syn_inits	plugged/vim-polyglot/syntax/proto.vim	/^    let did_proto_syn_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/proto.vim	/^let b:current_syntax = "proto"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/awk.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/awk.vim	/^let b:current_syntax = "awk"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sm.vim	/^let b:current_syntax = "sm"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/stata.vim	/^let b:current_syntax = "stata"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/atlas.vim	/^let b:current_syntax = "atlas"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mallard.vim	/^let b:current_syntax = "mallard"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/chaiscript.vim	/^let b:current_syntax = "chaiscript"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/aap.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/aap.vim	/^let b:current_syntax = "aap"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cupl.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cupl.vim	/^let b:current_syntax = "cupl"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/privoxy.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/privoxy.vim	/^let b:current_syntax = "privoxy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/latte.vim	/^let b:current_syntax = "latte"$/;"	v
mupad_cmdextversion	plugged/vim-polyglot/syntax/mupad.vim	/^  let mupad_cmdextversion = 2$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dictdconf.vim	/^let b:current_syntax = "dictdconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/promela.vim	/^let b:current_syntax = "promela"$/;"	v
jproperties_lines	plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_lines = 256$/;"	v
jproperties_strict_syntax	plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_strict_syntax = 0$/;"	v
jproperties_show_messages	plugged/vim-polyglot/syntax/jproperties.vim	/^	let jproperties_show_messages = 0$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jproperties.vim	/^let b:current_syntax = "jproperties"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lpc.vim	/^let s:cpo_save = &cpo$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/lpc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/lpc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/lpc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:browsefilter	plugged/vim-polyglot/syntax/lpc.vim	/^    let b:browsefilter = "LPC Source Files (*.c *.d *.h)\\t*.c;*.d;*.h\\n" .$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lpc.vim	/^let b:current_syntax = "lpc"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cmusrc.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cmusrc.vim	/^let b:current_syntax = "cmusrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kwt.vim	/^let b:current_syntax = "kwt"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/calendar.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/calendar.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/calendar.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/calendar.vim	/^let b:current_syntax = "calendar"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cvsrc.vim	/^let b:current_syntax = "cvsrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pli.vim	/^let b:current_syntax = "pl1"$/;"	v
CommentKeywordMatch	plugged/vim-polyglot/syntax/swift.vim	/^function! s:CommentKeywordMatch(keyword)$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/swift.vim	/^let b:current_syntax = "swift"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/Jenkinsfile.vim	/^let b:current_syntax = 'Jenkinsfile'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rcs.vim	/^let b:current_syntax = "rcs"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/libao.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/libao.vim	/^let b:current_syntax = "libao"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rnc.vim	/^let b:current_syntax = "rnc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elf.vim	/^let b:current_syntax = "elf"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:orders	plugged/vim-polyglot/syntax/hostconf.vim	/^let s:orders = ['bind', 'hosts', 'nis']$/;"	v
permute_suffixes	plugged/vim-polyglot/syntax/hostconf.vim	/^function s:permute_suffixes(list)$/;"	f
generate_suffix_groups	plugged/vim-polyglot/syntax/hostconf.vim	/^function s:generate_suffix_groups(list_of_order_of_orders, context, trailing_context)$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/hostconf.vim	/^let b:current_syntax = "hostconf"$/;"	v
at	plugged/vim-polyglot/syntax/sed.vim	/^let __at = char2nr("@")$/;"	v
sed_i	plugged/vim-polyglot/syntax/sed.vim	/^let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_last	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_last = 255$/;"	v
sed_last	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_last = 126$/;"	v
sed_metacharacters	plugged/vim-polyglot/syntax/sed.vim	/^let __sed_metacharacters = '$*.\\^[~'$/;"	v
sed_delimiter	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_delimiter = escape(nr2char(__sed_i), __sed_metacharacters)$/;"	v
sed_i	plugged/vim-polyglot/syntax/sed.vim	/^    let __sed_i = __sed_i + 1$/;"	v
sed_i	plugged/vim-polyglot/syntax/sed.vim	/^let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_i	plugged/vim-polyglot/syntax/sed.vim	/^let __sed_i = __sed_i + 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sed.vim	/^let b:current_syntax = "sed"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocpbuild.vim	/^let b:current_syntax = "ocpbuild"$/;"	v
s:urgency	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:urgency='urgency=\\(low\\|medium\\|high\\|emergency\\|critical\\)\\( [^[:space:],][^,]*\\)\\='$/;"	v
s:binNMU	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:binNMU='binary-only=yes'$/;"	v
s:cpo	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:cpo = &cpo$/;"	v
s:supported	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:supported = [$/;"	v
s:unsupported	plugged/vim-polyglot/syntax/debchangelog.vim	/^let s:unsupported = [$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/debchangelog.vim	/^let b:current_syntax = 'debchangelog'$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/clojure.vim	/^let s:cpo_sav = &cpo$/;"	v
s:clojure_syntax_keywords	plugged/vim-polyglot/syntax/clojure.vim	/^let s:clojure_syntax_keywords = {$/;"	v
syntax_keyword	plugged/vim-polyglot/syntax/clojure.vim	/^function! s:syntax_keyword(dict)$/;"	f
s:radix_chars	plugged/vim-polyglot/syntax/clojure.vim	/^let s:radix_chars = "0123456789abcdefghijklmnopqrstuvwxyz"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/clojure.vim	/^let b:current_syntax = "clojure"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/chordpro.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/chordpro.vim	/^let b:current_syntax = "chordpro"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xhtml.vim	/^let b:current_syntax = "xhtml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tags.vim	/^let b:current_syntax = "tags"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/litestep.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/litestep.vim	/^let b:current_syntax = "litestep"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
main_syntax	plugged/vim-polyglot/syntax/eelixir.vim	/^  let main_syntax = 'eelixir'$/;"	v
g:eelixir_default_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
s:lines	plugged/vim-polyglot/syntax/eelixir.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^leex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^sface\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.sface\\|\\.leex\\|\\.eelixir\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eelixir.vim	/^let b:current_syntax = 'eelixir'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cuesheet.vim	/^let b:current_syntax='cuesheet'$/;"	v
SynDisplay	plugged/vim-polyglot/syntax/inform.vim	/^command -nargs=+ SynDisplay syntax <args> display$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/inform.vim	/^let b:current_syntax = "inform"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/updatedb.vim	/^let b:current_syntax = "updatedb"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/ninja.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ninja.vim	/^let b:current_syntax = "ninja"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slrnsc.vim	/^let b:current_syntax = "slrnsc"$/;"	v
fortran_free_source	plugged/vim-polyglot/syntax/tak.vim	/^let fortran_free_source=1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tak.vim	/^let b:current_syntax = "tak"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/html.vim	/^  let main_syntax = 'html'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/html.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitignore.vim	/^let b:current_syntax = 'gitignore'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/apachestyle.vim	/^let b:current_syntax = "apachestyle"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/protocols.vim	/^let b:current_syntax = "protocols"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hercules.vim	/^let b:current_syntax = "hercules"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/csdl.vim	/^let b:current_syntax = "csdl"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pod.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/remind.vim	/^let b:current_syntax = "remind"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cdrdaoconf.vim	/^let b:current_syntax = "cdrdaoconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/bst.vim	/^let b:current_syntax = "bst"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/texinfo.vim	/^  let main_syntax = 'texinfo'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/texinfo.vim	/^let b:current_syntax = "texinfo"$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/lsl.vim	/^let s:keepcpo= &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lsl.vim	/^let b:current_syntax = "lsl"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let main_syntax = 'yaml'$/;"	v
s:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
s:yamlKey	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:yamlKey = g:ansible_yamlKeyName$/;"	v
s:yamlKey	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:yamlKey = "yamlBlockMappingKey"$/;"	v
attribute_highlight	plugged/vim-polyglot/syntax/ansible.vim	/^fun! s:attribute_highlight(attributes)$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^let b:current_syntax = "ansible"$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cmake.vim	/^let b:current_syntax = "cmake"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/msql.vim	/^  let main_syntax = 'msql'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/msql.vim	/^let b:current_syntax = "msql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xmath.vim	/^let b:current_syntax = "xmath"$/;"	v
b:crystal_no_expensive	plugged/vim-polyglot/syntax/crystal.vim	/^  let b:crystal_no_expensive = 1$/;"	v
s:foldable_groups	plugged/vim-polyglot/syntax/crystal.vim	/^let s:foldable_groups = split($/;"	v
foldable	plugged/vim-polyglot/syntax/crystal.vim	/^function! s:foldable(...) abort$/;"	f
run_syntax_fold	plugged/vim-polyglot/syntax/crystal.vim	/^function! s:run_syntax_fold(args) abort$/;"	f
SynFold	plugged/vim-polyglot/syntax/crystal.vim	/^com! -nargs=* SynFold call s:run_syntax_fold(<q-args>)$/;"	c
s:spell_cluster	plugged/vim-polyglot/syntax/crystal.vim	/^let s:spell_cluster = exists('crystal_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:fold_arg	plugged/vim-polyglot/syntax/crystal.vim	/^let s:fold_arg      = s:foldable('string') ? ' fold' : ''$/;"	v
g:crystal_minlines	plugged/vim-polyglot/syntax/crystal.vim	/^    let g:crystal_minlines = 500$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/crystal.vim	/^let b:current_syntax = 'crystal'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asterisk.vim	/^let b:current_syntax = "asterisk" $/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/clean.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/clean.vim	/^let b:current_syntax = "clean"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/help.vim	/^let s:cpo_save = &cpo$/;"	v
s:i	plugged/vim-polyglot/syntax/help.vim	/^let s:i = match(expand("%"), '\\.\\a\\ax$')$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/help.vim	/^let b:current_syntax = "help"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2js.vim	/^let b:current_syntax = "tt2js"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/django.vim	/^let b:current_syntax = "django"$/;"	v
s:wsh_cpo_save	plugged/vim-polyglot/syntax/wsh.vim	/^let s:wsh_cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/wsh.vim	/^let b:current_syntax = "wsh"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mysql.vim	/^let b:current_syntax = "mysql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/upstreaminstalllog.vim	/^let b:current_syntax = "upstreaminstalllog"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slrnrc.vim	/^let b:current_syntax = "slrnrc"$/;"	v
vera_comment_strings	plugged/vim-polyglot/syntax/vera.vim	/^let vera_comment_strings = 1$/;"	v
b:vera_minlines	plugged/vim-polyglot/syntax/vera.vim	/^  let b:vera_minlines = vera_minlines$/;"	v
b:vera_minlines	plugged/vim-polyglot/syntax/vera.vim	/^    let b:vera_minlines = 50	" #if 0 constructs can be long$/;"	v
b:vera_minlines	plugged/vim-polyglot/syntax/vera.vim	/^    let b:vera_minlines = 15	" mostly for () constructs$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vera.vim	/^let b:current_syntax = "vera"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/a65.vim	/^let b:current_syntax = "a65"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lftp.vim	/^let b:current_syntax = "lftp"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/setserial.vim	/^let b:current_syntax = "setserial"$/;"	v
mv_DEtools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_DEtools    = 1$/;"	v
mv_Galois	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_Galois     = 1$/;"	v
mv_GaussInt	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_GaussInt   = 1$/;"	v
mv_LREtools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_LREtools   = 1$/;"	v
mv_combinat	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_combinat   = 1$/;"	v
mv_combstruct	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_combstruct = 1$/;"	v
mv_difforms	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_difforms   = 1$/;"	v
mv_finance	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_finance    = 1$/;"	v
mv_genfunc	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_genfunc    = 1$/;"	v
mv_geometry	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_geometry   = 1$/;"	v
mv_grobner	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_grobner    = 1$/;"	v
mv_group	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_group      = 1$/;"	v
mv_inttrans	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_inttrans   = 1$/;"	v
mv_liesymm	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_liesymm    = 1$/;"	v
mv_linalg	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_linalg     = 1$/;"	v
mv_logic	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_logic      = 1$/;"	v
mv_networks	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_networks   = 1$/;"	v
mv_numapprox	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_numapprox  = 1$/;"	v
mv_numtheory	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_numtheory  = 1$/;"	v
mv_orthopoly	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_orthopoly  = 1$/;"	v
mv_padic	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_padic      = 1$/;"	v
mv_plots	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_plots      = 1$/;"	v
mv_plottools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_plottools  = 1$/;"	v
mv_powseries	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_powseries  = 1$/;"	v
mv_process	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_process    = 1$/;"	v
mv_simplex	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_simplex    = 1$/;"	v
mv_stats	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_stats      = 1$/;"	v
mv_student	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_student    = 1$/;"	v
mv_sumtools	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_sumtools   = 1$/;"	v
mv_tensor	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_tensor     = 1$/;"	v
mv_totorder	plugged/vim-polyglot/syntax/maple.vim	/^  let mv_totorder   = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/maple.vim	/^let b:current_syntax = "maple"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/limits.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/limits.vim	/^let b:current_syntax = "limits"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/msidl.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/msidl.vim	/^let b:current_syntax = "msidl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/esqlc.vim	/^let b:current_syntax = "esqlc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sqr.vim	/^let b:current_syntax = "sqr"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elinks.vim	/^let b:current_syntax = "elinks"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slpspi.vim	/^let b:current_syntax = "slpspi"$/;"	v
hi	plugged/vim-polyglot/syntax/go.vim	/^function! s:hi()$/;"	f
vim	plugged/vim-polyglot/syntax/go.vim	/^augroup vim-go-hi$/;"	a
b:current_syntax	plugged/vim-polyglot/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/snobol4.vim	/^let b:current_syntax = "snobol4"$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/taskdata.vim	/^let s:keepcpo= &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/taskdata.vim	/^let b:current_syntax = "taskdata"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ahdl.vim	/^let b:current_syntax = "ahdl"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:mmssff_pattern	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:mmssff_pattern = '\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\)\\>'$/;"	v
s:byte_pattern	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:byte_pattern = '\\<\\%([01]\\=\\d\\{1,2}\\|2\\%([0-4]\\d\\|5[0-5]\\)\\)\\>'$/;"	v
s:length_pattern	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let s:length_pattern = '\\%(\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\)\\|\\d\\+\\)\\>'$/;"	v
def_comment	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_comment(name, nextgroup)$/;"	f
def_keywords	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_keywords(name, nextgroup, keywords)$/;"	f
def_keyword	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_keyword(name, nextgroup, keyword)$/;"	f
def_match	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_match(name, nextgroup, pattern)$/;"	f
def_region	plugged/vim-polyglot/syntax/cdrtoc.vim	/^function s:def_region(name, nextgroup, start, skip, end, matchgroup, contains)$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/cdrtoc.vim	/^let b:current_syntax = "cdrtoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/graphql.vim	/^let b:current_syntax = 'graphql'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/nginx.vim	/^let b:eruby_subtype = ''$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tli.vim	/^let b:current_syntax = "tli"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pf.vim	/^let b:current_syntax = "pf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sxhkdrc.vim	/^let b:current_syntax = "sxhkdrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asciidoc.vim	/^let b:current_syntax = "asciidoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hive.vim	/^let b:current_syntax = "hive"$/;"	v
s:cpo_orig	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:cpo_orig=&cpoptions$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plantuml.vim	/^let b:current_syntax = 'plantuml'$/;"	v
s:mindmapHilightLinks	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:mindmapHilightLinks = [$/;"	v
i	plugged/vim-polyglot/syntax/plantuml.vim	/^let i = 1$/;"	v
contained	plugged/vim-polyglot/syntax/plantuml.vim	/^let contained = []$/;"	v
i	plugged/vim-polyglot/syntax/plantuml.vim	/^  let i = i + 1$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/arch.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/arch.vim	/^let b:current_syntax = "arch"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gmpl.vim	/^let b:current_syntax = "gmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rng.vim	/^let b:current_syntax = 'rng'$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/datascript.vim	/^let s:keepcpo= &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/datascript.vim	/^let b:current_syntax = "datascript"$/;"	v
nqc_minlines	plugged/vim-polyglot/syntax/nqc.vim	/^    let nqc_minlines = 50	    " #if 0 constructs can be long$/;"	v
nqc_minlines	plugged/vim-polyglot/syntax/nqc.vim	/^    let nqc_minlines = 15	    " mostly for () constructs$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nqc.vim	/^let b:current_syntax = "nqc"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mplayerconf.vim	/^let b:current_syntax = "mplayerconf"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pov.vim	/^let b:current_syntax = "pov"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plm.vim	/^let b:current_syntax = "plm"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/meson.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/meson.vim	/^let b:current_syntax = "meson"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:has_service_field	plugged/vim-polyglot/syntax/pamconf.vim	/^let s:has_service_field = exists("b:pamconf_has_service_field")$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pamconf.vim	/^let b:current_syntax = "pamconf"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/screen.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/screen.vim	/^let b:current_syntax = "screen"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gdmo.vim	/^let b:current_syntax = "gdmo"$/;"	v
s:ps1xml_cpo_save	plugged/vim-polyglot/syntax/ps1xml.vim	/^let s:ps1xml_cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ps1xml.vim	/^let b:current_syntax = "ps1xml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slice.vim	/^let b:current_syntax = "slice"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hostsaccess.vim	/^let b:current_syntax = "hostsaccess"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/typescriptreact.vim	/^  let main_syntax = 'typescriptreact'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/typescriptreact.vim	/^let b:current_syntax = "typescriptreact"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/monk.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/monk.vim	/^let b:current_syntax = "monk"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/icemenu.vim	/^let b:current_syntax = "IceMenu"$/;"	v
s:save_cpo	plugged/vim-polyglot/syntax/teraterm.vim	/^let s:save_cpo = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/teraterm.vim	/^let b:current_syntax = "teraterm"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/haxe.vim	/^  let main_syntax='haxe'$/;"	v
HaxeHiLink	plugged/vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi link <args>$/;"	c
HaxeHiLink	plugged/vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi def link <args>$/;"	c
haxe_minlines	plugged/vim-polyglot/syntax/haxe.vim	/^  let haxe_minlines = 5000$/;"	v
did_haxe_syn_inits	plugged/vim-polyglot/syntax/haxe.vim	/^    let did_haxe_syn_inits = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haxe.vim	/^let b:current_syntax = "haxe"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/haxe.vim	/^let b:spell_options="contained"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/udevconf.vim	/^let b:current_syntax = "udevconf"$/;"	v
commands	plugged/vim-polyglot/syntax/sh.vim	/^let commands = [ 'arch', 'awk', 'b2sum', 'base32', 'base64', 'basename', 'basenc', 'bash', 'brew', 'cat', 'chcon', 'chgrp', 'chown', 'chroot', 'cksum', 'comm', 'cp', 'csplit', 'curl', 'cut', 'date', 'dd', 'defaults', 'df', 'dir', 'dircolors', 'dirname', 'ed', 'env', 'expand', 'factor', 'fmt', 'fold', 'git', 'grep', 'groups', 'head', 'hexdump', 'hostid', 'hostname', 'hugo', 'id', 'install', 'join', 'killall', 'link', 'ln', 'logname', 'md5sum', 'mkdir', 'mkfifo', 'mknod', 'mktemp', 'nice', 'nl', 'nohup', 'npm', 'nproc', 'numfmt', 'od', 'open', 'paste', 'pathchk', 'pr', 'printenv', 'printf', 'ptx', 'readlink', 'realpath', 'rg', 'runcon', 'scutil', 'sed', 'seq', 'sha1sum', 'sha2', 'shred', 'shuf', 'split', 'stat', 'stdbuf', 'stty', 'sudo', 'sum', 'sync', 'tac', 'tee', 'terminfo', 'timeout', 'tmux', 'top', 'touch', 'tput', 'tr', 'truncate', 'tsort', 'tty', 'uname', 'unexpand', 'uniq', 'unlink', 'uptime', 'users', 'vdir', 'vim', 'wc', 'who', 'whoami', 'yabai', 'yes' ]$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible_hosts.vim	/^let b:current_syntax = "ansible_hosts"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sieve.vim	/^let b:current_syntax = "sieve"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/hb.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hb.vim	/^let b:current_syntax = "hb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/merlin.vim	/^let b:current_syntax = "merlin"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/neomuttrc.vim	/^let s:cpo_save = &cpo$/;"	v
escapesConditionals	plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:escapesConditionals(baseName, sequence, padding, conditional)$/;"	f
boolQuadGen	plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:boolQuadGen(type, vars, deprecated)$/;"	f
genFunctions	plugged/vim-polyglot/syntax/neomuttrc.vim	/^function! s:genFunctions(functions)$/;"	f
b:current_syntax	plugged/vim-polyglot/syntax/neomuttrc.vim	/^let b:current_syntax = "neomuttrc"$/;"	v
SynFold	plugged/vim-polyglot/syntax/yacc.vim	/^ com! -nargs=+ SynFold	<args> fold$/;"	c
SynFold	plugged/vim-polyglot/syntax/yacc.vim	/^ com! -nargs=+ SynFold	<args>$/;"	c
s:Cpath	plugged/vim-polyglot/syntax/yacc.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h").(exists("g:yacc_uses_cpp")? "\/cpp.vim" : "\/c.vim"))$/;"	v
s:Cpath	plugged/vim-polyglot/syntax/yacc.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/yacc.vim	/^let b:current_syntax = "yacc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tssop.vim	/^let b:current_syntax = "tssop"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/hollywood.vim	/^let s:cpo_save = &cpo$/;"	v
hw_version	plugged/vim-polyglot/syntax/hollywood.vim	/^  let hw_version = 8$/;"	v
hw_subversion	plugged/vim-polyglot/syntax/hollywood.vim	/^  let hw_subversion = 0$/;"	v
hw_subversion	plugged/vim-polyglot/syntax/hollywood.vim	/^  let hw_subversion = 0$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hollywood.vim	/^let b:current_syntax = "hollywood"$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/fstab.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fstab.vim	/^let b:current_syntax = "fstab"$/;"	v
did_gnuplot_syntax_inits	plugged/vim-polyglot/syntax/gnuplot.vim	/^    let did_gnuplot_syntax_inits = 1$/;"	v
HiLink	plugged/vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
b:current_syntax	plugged/vim-polyglot/syntax/gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/json5.vim	/^  let b:current_syntax = 'json5'$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/lynx.vim	/^let s:cpo_save = &cpo$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lynx.vim	/^let b:current_syntax = "lynx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jsonc.vim	/^  let b:current_syntax = 'jsonc'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/robots.vim	/^let b:current_syntax = "robots"$/;"	v
g:cobol_inline_comment	plugged/vim-polyglot/syntax/cobol.vim	/^   let g:cobol_inline_comment=0$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cobol.vim	/^let b:current_syntax = "cobol"$/;"	v
g:v_highlight_array_whitespace_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_array_whitespace_error = 1$/;"	v
g:v_highlight_chan_whitespace_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_chan_whitespace_error = 1$/;"	v
g:v_highlight_space_tab_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_space_tab_error = 1$/;"	v
g:v_highlight_trailing_whitespace_error	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_trailing_whitespace_error = 1$/;"	v
g:v_highlight_function_calls	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_function_calls = 1$/;"	v
g:v_highlight_fields	plugged/vim-polyglot/syntax/vlang.vim	/^  let g:v_highlight_fields = 1$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vlang.vim	/^let b:current_syntax = 'vlang'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/moon.vim	/^  let b:current_syntax = 'moon'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/hamster.vim	/^let b:current_syntax = "hamster"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/openroad.vim	/^let b:current_syntax = "openroad"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/zig_build_exe.vim	/^let current_compiler = 'zig_build_exe'$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/zig_build_exe.vim	/^let s:save_cpo = &cpo$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/zig_build_exe.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/compiler/ant.vim	/^let current_compiler = "ant"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/ant.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/compiler/ant.vim	/^let s:cpo_save = &cpo$/;"	v
current_compiler	plugged/vim-polyglot/compiler/credo.vim	/^let current_compiler = 'credo'$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/credo.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/compiler/gradlew.vim	/^let current_compiler = "gradlew"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/gradlew.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/compiler/nim.vim	/^let current_compiler = 'nim'$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/nim.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/compiler/nim.vim	/^let s:cpo_save = &cpo$/;"	v
g:syntastic_nim_checkers	plugged/vim-polyglot/compiler/nim.vim	/^let g:syntastic_nim_checkers = ['nim']$/;"	v
current_compiler	plugged/vim-polyglot/compiler/sass.vim	/^let current_compiler = "sass"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/compiler/sass.vim	/^let s:cpo_save = &cpo$/;"	v
current_compiler	plugged/vim-polyglot/compiler/zig_test.vim	/^let current_compiler = 'zig_test'$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/zig_test.vim	/^let s:save_cpo = &cpo$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/zig_test.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/compiler/bdf.vim	/^let current_compiler = "bdf"$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
current_compiler	plugged/vim-polyglot/compiler/tidy.vim	/^let current_compiler = "tidy"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/tidy.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/compiler/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
current_compiler	plugged/vim-polyglot/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
current_compiler	plugged/vim-polyglot/compiler/gleam.vim	/^let current_compiler = "gleam"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/gleam.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/compiler/tcl.vim	/^let current_compiler = "tcl"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/tcl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/compiler/zig.vim	/^let current_compiler = "zig"$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/zig.vim	/^let s:save_cpo = &cpo$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/zig.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/compiler/dot.vim	/^let current_compiler = "dot"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/dot.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ls.vim	/^let current_compiler = 'ls'$/;"	v
s:pat	plugged/vim-polyglot/compiler/ls.vim	/^let s:pat = '^' . current_compiler$/;"	v
livescript_compiler	plugged/vim-polyglot/compiler/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_make_options	plugged/vim-polyglot/compiler/ls.vim	/^  let livescript_make_options = ''$/;"	v
GetMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^function! s:GetMakePrg()$/;"	f
SetMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^function! s:SetMakePrg()$/;"	f
LiveScriptMake	plugged/vim-polyglot/compiler/ls.vim	/^command! -bang -bar -nargs=* LiveScriptMake make<bang> <args>$/;"	c
LiveScriptUpdateMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^augroup LiveScriptUpdateMakePrg$/;"	a
UpdateMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^  function! s:UpdateMakePrg()$/;"	f
current_compiler	plugged/vim-polyglot/compiler/python.vim	/^let current_compiler = "python"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/python.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
$PYTHONWARNINGS	plugged/vim-polyglot/compiler/python.vim	/^  let $PYTHONWARNINGS="ignore"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/exunit.vim	/^let current_compiler = "exunit"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/exunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/compiler/exunit.vim	/^let s:cpo_save = &cpo$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
current_compiler	plugged/vim-polyglot/compiler/powershell.vim	/^let current_compiler = "powershell"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/powershell.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/compiler/powershell.vim	/^let s:cpo_save = &cpo$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'pwsh'$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'pwsh.exe'$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = 'powershell.exe'$/;"	v
g:ps1_makeprg_cmd	plugged/vim-polyglot/compiler/powershell.vim	/^    let g:ps1_makeprg_cmd = ''$/;"	v
g:ps1_efm_show_error_categories	plugged/vim-polyglot/compiler/powershell.vim	/^let g:ps1_efm_show_error_categories = get(g:, 'ps1_efm_show_error_categories', 0)$/;"	v
current_compiler	plugged/vim-polyglot/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
s:pat	plugged/vim-polyglot/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
GetMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
SetMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
CoffeeMakeDeprecated	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
CoffeeMake	plugged/vim-polyglot/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeUpdateMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
UpdateMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
current_compiler	plugged/vim-polyglot/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
s:cpo_save	plugged/vim-polyglot/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
current_compiler	plugged/vim-polyglot/compiler/nix-build.vim	/^let current_compiler = 'nix-build'$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/nix-build.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/mix.vim	/^let current_compiler = 'mix'$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/mix.vim	/^    command -nargs=* CompilerSet setlocal <args>$/;"	c
current_compiler	plugged/vim-polyglot/compiler/fish.vim	/^let current_compiler = 'fish'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ledger.vim	/^let current_compiler = g:ledger_bin$/;"	v
CompilerSet	plugged/vim-polyglot/compiler/ledger.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
g:ledger_main	plugged/vim-polyglot/compiler/ledger.vim	/^  let g:ledger_main = '%'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ocaml.vim	/^let current_compiler = "ocaml"$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/ocaml.vim	/^let s:cpo_save = &cpo$/;"	v
